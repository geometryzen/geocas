{"/home/david/Development/geocas/src/mother/Algebra.ts":{"path":"/home/david/Development/geocas/src/mother/Algebra.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":48}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":46}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":46}},"6":{"start":{"line":8,"column":20},"end":{"line":8,"column":52}},"7":{"start":{"line":9,"column":22},"end":{"line":9,"column":56}},"8":{"start":{"line":10,"column":22},"end":{"line":10,"column":56}},"9":{"start":{"line":11,"column":20},"end":{"line":11,"column":52}},"10":{"start":{"line":12,"column":14},"end":{"line":12,"column":32}},"11":{"start":{"line":13,"column":12},"end":{"line":13,"column":28}},"12":{"start":{"line":14,"column":12},"end":{"line":14,"column":28}},"13":{"start":{"line":15,"column":12},"end":{"line":15,"column":28}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":38}},"15":{"start":{"line":17,"column":13},"end":{"line":17,"column":30}},"16":{"start":{"line":18,"column":13},"end":{"line":18,"column":30}},"17":{"start":{"line":19,"column":13},"end":{"line":19,"column":30}},"18":{"start":{"line":20,"column":22},"end":{"line":20,"column":48}},"19":{"start":{"line":21,"column":22},"end":{"line":21,"column":48}},"20":{"start":{"line":22,"column":22},"end":{"line":22,"column":48}},"21":{"start":{"line":23,"column":22},"end":{"line":23,"column":48}},"22":{"start":{"line":24,"column":22},"end":{"line":24,"column":48}},"23":{"start":{"line":25,"column":13},"end":{"line":25,"column":30}},"24":{"start":{"line":26,"column":13},"end":{"line":26,"column":30}},"25":{"start":{"line":27,"column":13},"end":{"line":27,"column":30}},"26":{"start":{"line":28,"column":17},"end":{"line":28,"column":38}},"27":{"start":{"line":39,"column":4},"end":{"line":44,"column":5}},"28":{"start":{"line":40,"column":8},"end":{"line":40,"column":57}},"29":{"start":{"line":43,"column":8},"end":{"line":43,"column":21}},"30":{"start":{"line":47,"column":4},"end":{"line":47,"column":52}},"31":{"start":{"line":53,"column":4},"end":{"line":67,"column":5}},"32":{"start":{"line":54,"column":8},"end":{"line":54,"column":22}},"33":{"start":{"line":56,"column":9},"end":{"line":67,"column":5}},"34":{"start":{"line":57,"column":8},"end":{"line":57,"column":29}},"35":{"start":{"line":59,"column":9},"end":{"line":67,"column":5}},"36":{"start":{"line":60,"column":8},"end":{"line":60,"column":47}},"37":{"start":{"line":62,"column":9},"end":{"line":67,"column":5}},"38":{"start":{"line":63,"column":8},"end":{"line":63,"column":46}},"39":{"start":{"line":66,"column":8},"end":{"line":66,"column":47}},"40":{"start":{"line":70,"column":16},"end":{"line":70,"column":29}},"41":{"start":{"line":71,"column":4},"end":{"line":102,"column":5}},"42":{"start":{"line":72,"column":18},"end":{"line":72,"column":20}},"43":{"start":{"line":73,"column":8},"end":{"line":73,"column":52}},"44":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"45":{"start":{"line":74,"column":21},"end":{"line":74,"column":22}},"46":{"start":{"line":75,"column":12},"end":{"line":75,"column":36}},"47":{"start":{"line":77,"column":8},"end":{"line":77,"column":81}},"48":{"start":{"line":79,"column":9},"end":{"line":102,"column":5}},"49":{"start":{"line":80,"column":18},"end":{"line":80,"column":20}},"50":{"start":{"line":81,"column":8},"end":{"line":81,"column":52}},"51":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"52":{"start":{"line":82,"column":21},"end":{"line":82,"column":22}},"53":{"start":{"line":83,"column":12},"end":{"line":83,"column":36}},"54":{"start":{"line":85,"column":8},"end":{"line":85,"column":81}},"55":{"start":{"line":88,"column":8},"end":{"line":101,"column":9}},"56":{"start":{"line":89,"column":22},"end":{"line":89,"column":24}},"57":{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},"58":{"start":{"line":90,"column":25},"end":{"line":90,"column":26}},"59":{"start":{"line":91,"column":16},"end":{"line":91,"column":40}},"60":{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},"61":{"start":{"line":93,"column":25},"end":{"line":93,"column":26}},"62":{"start":{"line":94,"column":16},"end":{"line":94,"column":40}},"63":{"start":{"line":96,"column":12},"end":{"line":96,"column":85}},"64":{"start":{"line":100,"column":12},"end":{"line":100,"column":26}},"65":{"start":{"line":105,"column":16},"end":{"line":105,"column":29}},"66":{"start":{"line":106,"column":4},"end":{"line":137,"column":5}},"67":{"start":{"line":107,"column":18},"end":{"line":107,"column":20}},"68":{"start":{"line":108,"column":8},"end":{"line":108,"column":52}},"69":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"70":{"start":{"line":109,"column":21},"end":{"line":109,"column":22}},"71":{"start":{"line":110,"column":12},"end":{"line":110,"column":46}},"72":{"start":{"line":112,"column":8},"end":{"line":112,"column":81}},"73":{"start":{"line":114,"column":9},"end":{"line":137,"column":5}},"74":{"start":{"line":115,"column":18},"end":{"line":115,"column":20}},"75":{"start":{"line":116,"column":8},"end":{"line":116,"column":63}},"76":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"77":{"start":{"line":117,"column":21},"end":{"line":117,"column":22}},"78":{"start":{"line":118,"column":12},"end":{"line":118,"column":36}},"79":{"start":{"line":120,"column":8},"end":{"line":120,"column":81}},"80":{"start":{"line":123,"column":8},"end":{"line":136,"column":9}},"81":{"start":{"line":124,"column":22},"end":{"line":124,"column":24}},"82":{"start":{"line":125,"column":12},"end":{"line":127,"column":13}},"83":{"start":{"line":125,"column":25},"end":{"line":125,"column":26}},"84":{"start":{"line":126,"column":16},"end":{"line":126,"column":40}},"85":{"start":{"line":128,"column":12},"end":{"line":130,"column":13}},"86":{"start":{"line":128,"column":25},"end":{"line":128,"column":26}},"87":{"start":{"line":129,"column":16},"end":{"line":129,"column":50}},"88":{"start":{"line":131,"column":12},"end":{"line":131,"column":85}},"89":{"start":{"line":135,"column":12},"end":{"line":135,"column":26}},"90":{"start":{"line":140,"column":16},"end":{"line":140,"column":29}},"91":{"start":{"line":141,"column":4},"end":{"line":176,"column":5}},"92":{"start":{"line":142,"column":8},"end":{"line":142,"column":36}},"93":{"start":{"line":144,"column":9},"end":{"line":176,"column":5}},"94":{"start":{"line":145,"column":8},"end":{"line":145,"column":36}},"95":{"start":{"line":148,"column":8},"end":{"line":175,"column":9}},"96":{"start":{"line":149,"column":22},"end":{"line":149,"column":24}},"97":{"start":{"line":150,"column":12},"end":{"line":169,"column":13}},"98":{"start":{"line":150,"column":25},"end":{"line":150,"column":26}},"99":{"start":{"line":151,"column":25},"end":{"line":151,"column":38}},"100":{"start":{"line":152,"column":16},"end":{"line":168,"column":17}},"101":{"start":{"line":152,"column":29},"end":{"line":152,"column":30}},"102":{"start":{"line":153,"column":29},"end":{"line":153,"column":42}},"103":{"start":{"line":154,"column":20},"end":{"line":167,"column":21}},"104":{"start":{"line":155,"column":32},"end":{"line":155,"column":61}},"105":{"start":{"line":156,"column":24},"end":{"line":156,"column":36}},"106":{"start":{"line":158,"column":25},"end":{"line":167,"column":21}},"107":{"start":{"line":159,"column":32},"end":{"line":159,"column":69}},"108":{"start":{"line":160,"column":24},"end":{"line":160,"column":36}},"109":{"start":{"line":163,"column":32},"end":{"line":163,"column":69}},"110":{"start":{"line":164,"column":24},"end":{"line":166,"column":25}},"111":{"start":{"line":164,"column":37},"end":{"line":164,"column":38}},"112":{"start":{"line":165,"column":28},"end":{"line":165,"column":43}},"113":{"start":{"line":170,"column":12},"end":{"line":170,"column":85}},"114":{"start":{"line":174,"column":12},"end":{"line":174,"column":26}},"115":{"start":{"line":179,"column":16},"end":{"line":179,"column":29}},"116":{"start":{"line":180,"column":4},"end":{"line":199,"column":5}},"117":{"start":{"line":181,"column":8},"end":{"line":181,"column":102}},"118":{"start":{"line":183,"column":9},"end":{"line":199,"column":5}},"119":{"start":{"line":184,"column":8},"end":{"line":184,"column":36}},"120":{"start":{"line":187,"column":8},"end":{"line":198,"column":9}},"121":{"start":{"line":188,"column":12},"end":{"line":193,"column":13}},"122":{"start":{"line":189,"column":16},"end":{"line":189,"column":63}},"123":{"start":{"line":192,"column":16},"end":{"line":192,"column":110}},"124":{"start":{"line":197,"column":12},"end":{"line":197,"column":26}},"125":{"start":{"line":205,"column":4},"end":{"line":205,"column":55}},"126":{"start":{"line":206,"column":4},"end":{"line":206,"column":59}},"127":{"start":{"line":207,"column":16},"end":{"line":207,"column":29}},"128":{"start":{"line":208,"column":12},"end":{"line":208,"column":60}},"129":{"start":{"line":209,"column":4},"end":{"line":209,"column":44}},"130":{"start":{"line":215,"column":4},"end":{"line":215,"column":59}},"131":{"start":{"line":216,"column":16},"end":{"line":216,"column":29}},"132":{"start":{"line":217,"column":4},"end":{"line":217,"column":112}},"133":{"start":{"line":217,"column":82},"end":{"line":217,"column":108}},"134":{"start":{"line":218,"column":12},"end":{"line":218,"column":48}},"135":{"start":{"line":219,"column":4},"end":{"line":219,"column":44}},"136":{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},"137":{"start":{"line":223,"column":8},"end":{"line":223,"column":53}},"138":{"start":{"line":225,"column":4},"end":{"line":227,"column":5}},"139":{"start":{"line":226,"column":8},"end":{"line":226,"column":51}},"140":{"start":{"line":229,"column":16},"end":{"line":229,"column":29}},"141":{"start":{"line":230,"column":23},"end":{"line":239,"column":5}},"142":{"start":{"line":231,"column":18},"end":{"line":231,"column":20}},"143":{"start":{"line":232,"column":8},"end":{"line":237,"column":9}},"144":{"start":{"line":232,"column":21},"end":{"line":232,"column":22}},"145":{"start":{"line":233,"column":20},"end":{"line":233,"column":29}},"146":{"start":{"line":234,"column":12},"end":{"line":236,"column":13}},"147":{"start":{"line":235,"column":16},"end":{"line":235,"column":28}},"148":{"start":{"line":238,"column":8},"end":{"line":238,"column":48}},"149":{"start":{"line":240,"column":15},"end":{"line":549,"column":5}},"150":{"start":{"line":242,"column":12},"end":{"line":242,"column":26}},"151":{"start":{"line":245,"column":12},"end":{"line":245,"column":47}},"152":{"start":{"line":248,"column":12},"end":{"line":248,"column":59}},"153":{"start":{"line":251,"column":12},"end":{"line":251,"column":59}},"154":{"start":{"line":254,"column":12},"end":{"line":254,"column":59}},"155":{"start":{"line":257,"column":12},"end":{"line":257,"column":59}},"156":{"start":{"line":260,"column":12},"end":{"line":260,"column":59}},"157":{"start":{"line":263,"column":12},"end":{"line":263,"column":59}},"158":{"start":{"line":266,"column":12},"end":{"line":266,"column":72}},"159":{"start":{"line":269,"column":12},"end":{"line":269,"column":72}},"160":{"start":{"line":272,"column":12},"end":{"line":272,"column":72}},"161":{"start":{"line":275,"column":12},"end":{"line":275,"column":72}},"162":{"start":{"line":278,"column":12},"end":{"line":278,"column":72}},"163":{"start":{"line":281,"column":12},"end":{"line":281,"column":73}},"164":{"start":{"line":285,"column":26},"end":{"line":285,"column":36}},"165":{"start":{"line":286,"column":24},"end":{"line":286,"column":41}},"166":{"start":{"line":288,"column":12},"end":{"line":293,"column":13}},"167":{"start":{"line":289,"column":16},"end":{"line":289,"column":69}},"168":{"start":{"line":292,"column":16},"end":{"line":292,"column":93}},"169":{"start":{"line":296,"column":12},"end":{"line":296,"column":39}},"170":{"start":{"line":299,"column":12},"end":{"line":299,"column":59}},"171":{"start":{"line":302,"column":22},"end":{"line":302,"column":24}},"172":{"start":{"line":303,"column":12},"end":{"line":309,"column":13}},"173":{"start":{"line":303,"column":25},"end":{"line":303,"column":26}},"174":{"start":{"line":304,"column":24},"end":{"line":304,"column":33}},"175":{"start":{"line":305,"column":28},"end":{"line":305,"column":50}},"176":{"start":{"line":306,"column":16},"end":{"line":308,"column":17}},"177":{"start":{"line":307,"column":20},"end":{"line":307,"column":73}},"178":{"start":{"line":310,"column":12},"end":{"line":310,"column":52}},"179":{"start":{"line":313,"column":12},"end":{"line":313,"column":59}},"180":{"start":{"line":316,"column":12},"end":{"line":316,"column":59}},"181":{"start":{"line":319,"column":12},"end":{"line":319,"column":43}},"182":{"start":{"line":322,"column":22},"end":{"line":322,"column":24}},"183":{"start":{"line":323,"column":12},"end":{"line":342,"column":13}},"184":{"start":{"line":323,"column":25},"end":{"line":323,"column":26}},"185":{"start":{"line":324,"column":25},"end":{"line":324,"column":34}},"186":{"start":{"line":325,"column":16},"end":{"line":341,"column":17}},"187":{"start":{"line":325,"column":29},"end":{"line":325,"column":30}},"188":{"start":{"line":326,"column":29},"end":{"line":326,"column":42}},"189":{"start":{"line":327,"column":20},"end":{"line":340,"column":21}},"190":{"start":{"line":328,"column":32},"end":{"line":328,"column":63}},"191":{"start":{"line":329,"column":24},"end":{"line":329,"column":36}},"192":{"start":{"line":331,"column":25},"end":{"line":340,"column":21}},"193":{"start":{"line":332,"column":32},"end":{"line":332,"column":71}},"194":{"start":{"line":333,"column":24},"end":{"line":333,"column":36}},"195":{"start":{"line":336,"column":32},"end":{"line":336,"column":71}},"196":{"start":{"line":337,"column":24},"end":{"line":339,"column":25}},"197":{"start":{"line":337,"column":37},"end":{"line":337,"column":38}},"198":{"start":{"line":338,"column":28},"end":{"line":338,"column":43}},"199":{"start":{"line":343,"column":12},"end":{"line":343,"column":85}},"200":{"start":{"line":346,"column":22},"end":{"line":346,"column":24}},"201":{"start":{"line":347,"column":12},"end":{"line":366,"column":13}},"202":{"start":{"line":347,"column":25},"end":{"line":347,"column":26}},"203":{"start":{"line":348,"column":25},"end":{"line":348,"column":34}},"204":{"start":{"line":349,"column":16},"end":{"line":365,"column":17}},"205":{"start":{"line":349,"column":29},"end":{"line":349,"column":30}},"206":{"start":{"line":350,"column":29},"end":{"line":350,"column":42}},"207":{"start":{"line":351,"column":20},"end":{"line":364,"column":21}},"208":{"start":{"line":352,"column":32},"end":{"line":352,"column":63}},"209":{"start":{"line":353,"column":24},"end":{"line":353,"column":36}},"210":{"start":{"line":355,"column":25},"end":{"line":364,"column":21}},"211":{"start":{"line":356,"column":32},"end":{"line":356,"column":71}},"212":{"start":{"line":357,"column":24},"end":{"line":357,"column":36}},"213":{"start":{"line":360,"column":32},"end":{"line":360,"column":71}},"214":{"start":{"line":361,"column":24},"end":{"line":363,"column":25}},"215":{"start":{"line":361,"column":37},"end":{"line":361,"column":38}},"216":{"start":{"line":362,"column":28},"end":{"line":362,"column":43}},"217":{"start":{"line":367,"column":12},"end":{"line":367,"column":85}},"218":{"start":{"line":371,"column":12},"end":{"line":371,"column":53}},"219":{"start":{"line":374,"column":22},"end":{"line":374,"column":24}},"220":{"start":{"line":375,"column":12},"end":{"line":382,"column":13}},"221":{"start":{"line":375,"column":25},"end":{"line":375,"column":26}},"222":{"start":{"line":376,"column":25},"end":{"line":376,"column":34}},"223":{"start":{"line":377,"column":16},"end":{"line":381,"column":17}},"224":{"start":{"line":377,"column":29},"end":{"line":377,"column":30}},"225":{"start":{"line":378,"column":29},"end":{"line":378,"column":42}},"226":{"start":{"line":379,"column":28},"end":{"line":379,"column":44}},"227":{"start":{"line":380,"column":20},"end":{"line":380,"column":32}},"228":{"start":{"line":383,"column":12},"end":{"line":383,"column":85}},"229":{"start":{"line":386,"column":12},"end":{"line":386,"column":30}},"230":{"start":{"line":389,"column":12},"end":{"line":389,"column":24}},"231":{"start":{"line":392,"column":22},"end":{"line":392,"column":24}},"232":{"start":{"line":393,"column":12},"end":{"line":396,"column":13}},"233":{"start":{"line":393,"column":25},"end":{"line":393,"column":26}},"234":{"start":{"line":394,"column":24},"end":{"line":394,"column":33}},"235":{"start":{"line":395,"column":16},"end":{"line":395,"column":38}},"236":{"start":{"line":397,"column":12},"end":{"line":397,"column":52}},"237":{"start":{"line":400,"column":22},"end":{"line":400,"column":24}},"238":{"start":{"line":401,"column":12},"end":{"line":404,"column":13}},"239":{"start":{"line":401,"column":25},"end":{"line":401,"column":26}},"240":{"start":{"line":402,"column":24},"end":{"line":402,"column":33}},"241":{"start":{"line":403,"column":16},"end":{"line":403,"column":38}},"242":{"start":{"line":405,"column":12},"end":{"line":405,"column":52}},"243":{"start":{"line":408,"column":12},"end":{"line":408,"column":30}},"244":{"start":{"line":411,"column":22},"end":{"line":411,"column":24}},"245":{"start":{"line":412,"column":12},"end":{"line":415,"column":13}},"246":{"start":{"line":412,"column":25},"end":{"line":412,"column":26}},"247":{"start":{"line":413,"column":24},"end":{"line":413,"column":33}},"248":{"start":{"line":414,"column":16},"end":{"line":414,"column":48}},"249":{"start":{"line":416,"column":12},"end":{"line":416,"column":52}},"250":{"start":{"line":419,"column":12},"end":{"line":419,"column":58}},"251":{"start":{"line":419,"column":39},"end":{"line":419,"column":56}},"252":{"start":{"line":420,"column":22},"end":{"line":420,"column":60}},"253":{"start":{"line":421,"column":22},"end":{"line":421,"column":32}},"254":{"start":{"line":423,"column":12},"end":{"line":426,"column":13}},"255":{"start":{"line":423,"column":25},"end":{"line":423,"column":26}},"256":{"start":{"line":424,"column":24},"end":{"line":424,"column":33}},"257":{"start":{"line":425,"column":16},"end":{"line":425,"column":58}},"258":{"start":{"line":427,"column":25},"end":{"line":427,"column":44}},"259":{"start":{"line":428,"column":22},"end":{"line":428,"column":24}},"260":{"start":{"line":429,"column":12},"end":{"line":434,"column":13}},"261":{"start":{"line":429,"column":25},"end":{"line":429,"column":26}},"262":{"start":{"line":430,"column":24},"end":{"line":430,"column":33}},"263":{"start":{"line":431,"column":16},"end":{"line":433,"column":17}},"264":{"start":{"line":432,"column":20},"end":{"line":432,"column":32}},"265":{"start":{"line":435,"column":12},"end":{"line":435,"column":52}},"266":{"start":{"line":438,"column":30},"end":{"line":438,"column":69}},"267":{"start":{"line":439,"column":23},"end":{"line":439,"column":46}},"268":{"start":{"line":440,"column":12},"end":{"line":445,"column":13}},"269":{"start":{"line":441,"column":16},"end":{"line":441,"column":46}},"270":{"start":{"line":444,"column":16},"end":{"line":444,"column":28}},"271":{"start":{"line":449,"column":20},"end":{"line":449,"column":35}},"272":{"start":{"line":450,"column":23},"end":{"line":450,"column":30}},"273":{"start":{"line":451,"column":20},"end":{"line":451,"column":67}},"274":{"start":{"line":452,"column":20},"end":{"line":452,"column":36}},"275":{"start":{"line":453,"column":23},"end":{"line":453,"column":96}},"276":{"start":{"line":454,"column":23},"end":{"line":454,"column":96}},"277":{"start":{"line":455,"column":12},"end":{"line":455,"column":49}},"278":{"start":{"line":459,"column":12},"end":{"line":459,"column":39}},"279":{"start":{"line":462,"column":22},"end":{"line":462,"column":24}},"280":{"start":{"line":463,"column":12},"end":{"line":469,"column":13}},"281":{"start":{"line":463,"column":25},"end":{"line":463,"column":26}},"282":{"start":{"line":464,"column":24},"end":{"line":464,"column":33}},"283":{"start":{"line":465,"column":28},"end":{"line":465,"column":50}},"284":{"start":{"line":466,"column":16},"end":{"line":468,"column":17}},"285":{"start":{"line":467,"column":20},"end":{"line":467,"column":73}},"286":{"start":{"line":470,"column":12},"end":{"line":470,"column":52}},"287":{"start":{"line":473,"column":20},"end":{"line":473,"column":31}},"288":{"start":{"line":474,"column":20},"end":{"line":474,"column":101}},"289":{"start":{"line":475,"column":12},"end":{"line":475,"column":38}},"290":{"start":{"line":478,"column":22},"end":{"line":478,"column":24}},"291":{"start":{"line":479,"column":12},"end":{"line":482,"column":13}},"292":{"start":{"line":479,"column":25},"end":{"line":479,"column":26}},"293":{"start":{"line":480,"column":24},"end":{"line":480,"column":33}},"294":{"start":{"line":481,"column":16},"end":{"line":481,"column":45}},"295":{"start":{"line":483,"column":12},"end":{"line":483,"column":52}},"296":{"start":{"line":486,"column":22},"end":{"line":486,"column":24}},"297":{"start":{"line":487,"column":12},"end":{"line":490,"column":13}},"298":{"start":{"line":487,"column":25},"end":{"line":487,"column":26}},"299":{"start":{"line":488,"column":24},"end":{"line":488,"column":33}},"300":{"start":{"line":489,"column":16},"end":{"line":489,"column":38}},"301":{"start":{"line":491,"column":12},"end":{"line":491,"column":52}},"302":{"start":{"line":494,"column":12},"end":{"line":499,"column":13}},"303":{"start":{"line":494,"column":25},"end":{"line":494,"column":26}},"304":{"start":{"line":495,"column":24},"end":{"line":495,"column":33}},"305":{"start":{"line":496,"column":16},"end":{"line":498,"column":17}},"306":{"start":{"line":497,"column":20},"end":{"line":497,"column":36}},"307":{"start":{"line":500,"column":12},"end":{"line":500,"column":30}},"308":{"start":{"line":503,"column":12},"end":{"line":503,"column":38}},"309":{"start":{"line":506,"column":22},"end":{"line":506,"column":24}},"310":{"start":{"line":507,"column":12},"end":{"line":515,"column":13}},"311":{"start":{"line":507,"column":25},"end":{"line":507,"column":26}},"312":{"start":{"line":508,"column":24},"end":{"line":508,"column":33}},"313":{"start":{"line":509,"column":16},"end":{"line":514,"column":17}},"314":{"start":{"line":510,"column":20},"end":{"line":510,"column":88}},"315":{"start":{"line":513,"column":20},"end":{"line":513,"column":92}},"316":{"start":{"line":516,"column":12},"end":{"line":516,"column":52}},"317":{"start":{"line":519,"column":12},"end":{"line":519,"column":58}},"318":{"start":{"line":520,"column":12},"end":{"line":544,"column":13}},"319":{"start":{"line":521,"column":16},"end":{"line":521,"column":27}},"320":{"start":{"line":524,"column":29},"end":{"line":524,"column":31}},"321":{"start":{"line":525,"column":16},"end":{"line":542,"column":17}},"322":{"start":{"line":525,"column":29},"end":{"line":525,"column":30}},"323":{"start":{"line":526,"column":28},"end":{"line":526,"column":37}},"324":{"start":{"line":527,"column":28},"end":{"line":527,"column":45}},"325":{"start":{"line":528,"column":20},"end":{"line":541,"column":21}},"326":{"start":{"line":529,"column":24},"end":{"line":529,"column":36}},"327":{"start":{"line":533,"column":24},"end":{"line":540,"column":25}},"328":{"start":{"line":534,"column":28},"end":{"line":534,"column":44}},"329":{"start":{"line":535,"column":28},"end":{"line":535,"column":53}},"330":{"start":{"line":538,"column":28},"end":{"line":538,"column":44}},"331":{"start":{"line":539,"column":28},"end":{"line":539,"column":40}},"332":{"start":{"line":543,"column":16},"end":{"line":543,"column":30}},"333":{"start":{"line":547,"column":12},"end":{"line":547,"column":41}},"334":{"start":{"line":550,"column":4},"end":{"line":550,"column":16}},"335":{"start":{"line":556,"column":4},"end":{"line":571,"column":5}},"336":{"start":{"line":557,"column":8},"end":{"line":570,"column":9}},"337":{"start":{"line":558,"column":12},"end":{"line":560,"column":13}},"338":{"start":{"line":559,"column":16},"end":{"line":559,"column":111}},"339":{"start":{"line":561,"column":12},"end":{"line":566,"column":13}},"340":{"start":{"line":561,"column":25},"end":{"line":561,"column":26}},"341":{"start":{"line":562,"column":28},"end":{"line":562,"column":37}},"342":{"start":{"line":563,"column":16},"end":{"line":565,"column":17}},"343":{"start":{"line":564,"column":20},"end":{"line":564,"column":91}},"344":{"start":{"line":569,"column":12},"end":{"line":569,"column":68}},"345":{"start":{"line":574,"column":4},"end":{"line":574,"column":57}},"346":{"start":{"line":575,"column":12},"end":{"line":575,"column":23}},"347":{"start":{"line":576,"column":4},"end":{"line":576,"column":55}},"348":{"start":{"line":577,"column":4},"end":{"line":577,"column":42}},"349":{"start":{"line":578,"column":18},"end":{"line":578,"column":20}},"350":{"start":{"line":582,"column":23},"end":{"line":582,"column":25}},"351":{"start":{"line":583,"column":15},"end":{"line":609,"column":5}},"352":{"start":{"line":585,"column":12},"end":{"line":585,"column":30}},"353":{"start":{"line":588,"column":12},"end":{"line":588,"column":25}},"354":{"start":{"line":591,"column":12},"end":{"line":591,"column":30}},"355":{"start":{"line":594,"column":12},"end":{"line":594,"column":30}},"356":{"start":{"line":597,"column":12},"end":{"line":597,"column":63}},"357":{"start":{"line":598,"column":12},"end":{"line":603,"column":13}},"358":{"start":{"line":599,"column":16},"end":{"line":599,"column":43}},"359":{"start":{"line":602,"column":16},"end":{"line":602,"column":85}},"360":{"start":{"line":607,"column":12},"end":{"line":607,"column":64}},"361":{"start":{"line":607,"column":51},"end":{"line":607,"column":60}},"362":{"start":{"line":610,"column":4},"end":{"line":610,"column":61}},"363":{"start":{"line":611,"column":4},"end":{"line":611,"column":60}},"364":{"start":{"line":612,"column":4},"end":{"line":612,"column":58}},"365":{"start":{"line":613,"column":4},"end":{"line":615,"column":5}},"366":{"start":{"line":613,"column":17},"end":{"line":613,"column":18}},"367":{"start":{"line":614,"column":8},"end":{"line":614,"column":66}},"368":{"start":{"line":616,"column":4},"end":{"line":616,"column":16}},"369":{"start":{"line":618,"column":0},"end":{"line":618,"column":26}}},"fnMap":{"0":{"name":"isMultivector","decl":{"start":{"line":38,"column":9},"end":{"line":38,"column":22}},"loc":{"start":{"line":38,"column":28},"end":{"line":45,"column":1}},"line":38},"1":{"name":"isMetric","decl":{"start":{"line":46,"column":9},"end":{"line":46,"column":17}},"loc":{"start":{"line":46,"column":23},"end":{"line":48,"column":1}},"line":46},"2":{"name":"dim","decl":{"start":{"line":52,"column":9},"end":{"line":52,"column":12}},"loc":{"start":{"line":52,"column":21},"end":{"line":68,"column":1}},"line":52},"3":{"name":"add","decl":{"start":{"line":69,"column":9},"end":{"line":69,"column":12}},"loc":{"start":{"line":69,"column":48},"end":{"line":103,"column":1}},"line":69},"4":{"name":"sub","decl":{"start":{"line":104,"column":9},"end":{"line":104,"column":12}},"loc":{"start":{"line":104,"column":48},"end":{"line":138,"column":1}},"line":104},"5":{"name":"mul","decl":{"start":{"line":139,"column":9},"end":{"line":139,"column":12}},"loc":{"start":{"line":139,"column":48},"end":{"line":177,"column":1}},"line":139},"6":{"name":"div","decl":{"start":{"line":178,"column":9},"end":{"line":178,"column":12}},"loc":{"start":{"line":178,"column":32},"end":{"line":200,"column":1}},"line":178},"7":{"name":"getBasisVector","decl":{"start":{"line":204,"column":9},"end":{"line":204,"column":23}},"loc":{"start":{"line":204,"column":56},"end":{"line":210,"column":1}},"line":204},"8":{"name":"getScalar","decl":{"start":{"line":214,"column":9},"end":{"line":214,"column":18}},"loc":{"start":{"line":214,"column":52},"end":{"line":220,"column":1}},"line":214},"9":{"name":"(anonymous_9)","decl":{"start":{"line":217,"column":68},"end":{"line":217,"column":69}},"loc":{"start":{"line":217,"column":80},"end":{"line":217,"column":110}},"line":217},"10":{"name":"mv","decl":{"start":{"line":221,"column":9},"end":{"line":221,"column":11}},"loc":{"start":{"line":221,"column":45},"end":{"line":551,"column":1}},"line":221},"11":{"name":"(anonymous_11)","decl":{"start":{"line":230,"column":23},"end":{"line":230,"column":24}},"loc":{"start":{"line":230,"column":40},"end":{"line":239,"column":5}},"line":230},"12":{"name":"(anonymous_12)","decl":{"start":{"line":241,"column":8},"end":{"line":241,"column":9}},"loc":{"start":{"line":241,"column":21},"end":{"line":243,"column":9}},"line":241},"13":{"name":"(anonymous_13)","decl":{"start":{"line":244,"column":17},"end":{"line":244,"column":18}},"loc":{"start":{"line":244,"column":29},"end":{"line":246,"column":9}},"line":244},"14":{"name":"(anonymous_14)","decl":{"start":{"line":247,"column":13},"end":{"line":247,"column":14}},"loc":{"start":{"line":247,"column":28},"end":{"line":249,"column":9}},"line":247},"15":{"name":"(anonymous_15)","decl":{"start":{"line":250,"column":17},"end":{"line":250,"column":18}},"loc":{"start":{"line":250,"column":32},"end":{"line":252,"column":9}},"line":250},"16":{"name":"(anonymous_16)","decl":{"start":{"line":253,"column":18},"end":{"line":253,"column":19}},"loc":{"start":{"line":253,"column":33},"end":{"line":255,"column":9}},"line":253},"17":{"name":"(anonymous_17)","decl":{"start":{"line":256,"column":13},"end":{"line":256,"column":14}},"loc":{"start":{"line":256,"column":28},"end":{"line":258,"column":9}},"line":256},"18":{"name":"(anonymous_18)","decl":{"start":{"line":259,"column":17},"end":{"line":259,"column":18}},"loc":{"start":{"line":259,"column":32},"end":{"line":261,"column":9}},"line":259},"19":{"name":"(anonymous_19)","decl":{"start":{"line":262,"column":18},"end":{"line":262,"column":19}},"loc":{"start":{"line":262,"column":33},"end":{"line":264,"column":9}},"line":262},"20":{"name":"(anonymous_20)","decl":{"start":{"line":265,"column":16},"end":{"line":265,"column":17}},"loc":{"start":{"line":265,"column":31},"end":{"line":267,"column":9}},"line":265},"21":{"name":"(anonymous_21)","decl":{"start":{"line":268,"column":16},"end":{"line":268,"column":17}},"loc":{"start":{"line":268,"column":31},"end":{"line":270,"column":9}},"line":268},"22":{"name":"(anonymous_22)","decl":{"start":{"line":271,"column":16},"end":{"line":271,"column":17}},"loc":{"start":{"line":271,"column":31},"end":{"line":273,"column":9}},"line":271},"23":{"name":"(anonymous_23)","decl":{"start":{"line":274,"column":16},"end":{"line":274,"column":17}},"loc":{"start":{"line":274,"column":31},"end":{"line":276,"column":9}},"line":274},"24":{"name":"(anonymous_24)","decl":{"start":{"line":277,"column":16},"end":{"line":277,"column":17}},"loc":{"start":{"line":277,"column":31},"end":{"line":279,"column":9}},"line":277},"25":{"name":"(anonymous_25)","decl":{"start":{"line":280,"column":16},"end":{"line":280,"column":17}},"loc":{"start":{"line":280,"column":31},"end":{"line":282,"column":9}},"line":280},"26":{"name":"(anonymous_26)","decl":{"start":{"line":283,"column":13},"end":{"line":283,"column":14}},"loc":{"start":{"line":283,"column":25},"end":{"line":294,"column":9}},"line":283},"27":{"name":"(anonymous_27)","decl":{"start":{"line":295,"column":16},"end":{"line":295,"column":17}},"loc":{"start":{"line":295,"column":28},"end":{"line":297,"column":9}},"line":295},"28":{"name":"(anonymous_28)","decl":{"start":{"line":298,"column":13},"end":{"line":298,"column":14}},"loc":{"start":{"line":298,"column":28},"end":{"line":300,"column":9}},"line":298},"29":{"name":"(anonymous_29)","decl":{"start":{"line":301,"column":21},"end":{"line":301,"column":22}},"loc":{"start":{"line":301,"column":34},"end":{"line":311,"column":9}},"line":301},"30":{"name":"(anonymous_30)","decl":{"start":{"line":312,"column":17},"end":{"line":312,"column":18}},"loc":{"start":{"line":312,"column":32},"end":{"line":314,"column":9}},"line":312},"31":{"name":"(anonymous_31)","decl":{"start":{"line":315,"column":18},"end":{"line":315,"column":19}},"loc":{"start":{"line":315,"column":33},"end":{"line":317,"column":9}},"line":315},"32":{"name":"(anonymous_32)","decl":{"start":{"line":318,"column":17},"end":{"line":318,"column":18}},"loc":{"start":{"line":318,"column":32},"end":{"line":320,"column":9}},"line":318},"33":{"name":"(anonymous_33)","decl":{"start":{"line":321,"column":20},"end":{"line":321,"column":21}},"loc":{"start":{"line":321,"column":35},"end":{"line":344,"column":9}},"line":321},"34":{"name":"(anonymous_34)","decl":{"start":{"line":345,"column":20},"end":{"line":345,"column":21}},"loc":{"start":{"line":345,"column":35},"end":{"line":368,"column":9}},"line":345},"35":{"name":"(anonymous_35)","decl":{"start":{"line":369,"column":18},"end":{"line":369,"column":19}},"loc":{"start":{"line":369,"column":33},"end":{"line":372,"column":9}},"line":369},"36":{"name":"(anonymous_36)","decl":{"start":{"line":373,"column":19},"end":{"line":373,"column":20}},"loc":{"start":{"line":373,"column":34},"end":{"line":384,"column":9}},"line":373},"37":{"name":"(anonymous_37)","decl":{"start":{"line":385,"column":18},"end":{"line":385,"column":19}},"loc":{"start":{"line":385,"column":30},"end":{"line":387,"column":9}},"line":385},"38":{"name":"(anonymous_38)","decl":{"start":{"line":388,"column":17},"end":{"line":388,"column":18}},"loc":{"start":{"line":388,"column":29},"end":{"line":390,"column":9}},"line":388},"39":{"name":"(anonymous_39)","decl":{"start":{"line":391,"column":13},"end":{"line":391,"column":14}},"loc":{"start":{"line":391,"column":25},"end":{"line":398,"column":9}},"line":391},"40":{"name":"(anonymous_40)","decl":{"start":{"line":399,"column":17},"end":{"line":399,"column":18}},"loc":{"start":{"line":399,"column":29},"end":{"line":406,"column":9}},"line":399},"41":{"name":"(anonymous_41)","decl":{"start":{"line":407,"column":19},"end":{"line":407,"column":20}},"loc":{"start":{"line":407,"column":31},"end":{"line":409,"column":9}},"line":407},"42":{"name":"(anonymous_42)","decl":{"start":{"line":410,"column":27},"end":{"line":410,"column":28}},"loc":{"start":{"line":410,"column":39},"end":{"line":417,"column":9}},"line":410},"43":{"name":"(anonymous_43)","decl":{"start":{"line":418,"column":18},"end":{"line":418,"column":19}},"loc":{"start":{"line":418,"column":38},"end":{"line":436,"column":9}},"line":418},"44":{"name":"(anonymous_44)","decl":{"start":{"line":437,"column":19},"end":{"line":437,"column":20}},"loc":{"start":{"line":437,"column":31},"end":{"line":446,"column":9}},"line":437},"45":{"name":"(anonymous_45)","decl":{"start":{"line":447,"column":13},"end":{"line":447,"column":14}},"loc":{"start":{"line":447,"column":25},"end":{"line":456,"column":9}},"line":447},"46":{"name":"(anonymous_46)","decl":{"start":{"line":458,"column":13},"end":{"line":458,"column":14}},"loc":{"start":{"line":458,"column":28},"end":{"line":460,"column":9}},"line":458},"47":{"name":"(anonymous_47)","decl":{"start":{"line":461,"column":21},"end":{"line":461,"column":22}},"loc":{"start":{"line":461,"column":34},"end":{"line":471,"column":9}},"line":461},"48":{"name":"(anonymous_48)","decl":{"start":{"line":472,"column":14},"end":{"line":472,"column":15}},"loc":{"start":{"line":472,"column":26},"end":{"line":476,"column":9}},"line":472},"49":{"name":"(anonymous_49)","decl":{"start":{"line":477,"column":24},"end":{"line":477,"column":25}},"loc":{"start":{"line":477,"column":36},"end":{"line":484,"column":9}},"line":477},"50":{"name":"(anonymous_50)","decl":{"start":{"line":485,"column":13},"end":{"line":485,"column":14}},"loc":{"start":{"line":485,"column":25},"end":{"line":492,"column":9}},"line":485},"51":{"name":"(anonymous_51)","decl":{"start":{"line":493,"column":26},"end":{"line":493,"column":27}},"loc":{"start":{"line":493,"column":38},"end":{"line":501,"column":9}},"line":493},"52":{"name":"(anonymous_52)","decl":{"start":{"line":502,"column":13},"end":{"line":502,"column":14}},"loc":{"start":{"line":502,"column":28},"end":{"line":504,"column":9}},"line":502},"53":{"name":"(anonymous_53)","decl":{"start":{"line":505,"column":14},"end":{"line":505,"column":15}},"loc":{"start":{"line":505,"column":26},"end":{"line":517,"column":9}},"line":505},"54":{"name":"(anonymous_54)","decl":{"start":{"line":518,"column":18},"end":{"line":518,"column":19}},"loc":{"start":{"line":518,"column":35},"end":{"line":545,"column":9}},"line":518},"55":{"name":"(anonymous_55)","decl":{"start":{"line":546,"column":18},"end":{"line":546,"column":19}},"loc":{"start":{"line":546,"column":30},"end":{"line":548,"column":9}},"line":546},"56":{"name":"checkBasisLabels","decl":{"start":{"line":555,"column":9},"end":{"line":555,"column":25}},"loc":{"start":{"line":555,"column":43},"end":{"line":572,"column":1}},"line":555},"57":{"name":"algebra","decl":{"start":{"line":573,"column":9},"end":{"line":573,"column":16}},"loc":{"start":{"line":573,"column":40},"end":{"line":617,"column":1}},"line":573},"58":{"name":"(anonymous_58)","decl":{"start":{"line":584,"column":8},"end":{"line":584,"column":9}},"loc":{"start":{"line":584,"column":16},"end":{"line":586,"column":9}},"line":584},"59":{"name":"(anonymous_59)","decl":{"start":{"line":587,"column":8},"end":{"line":587,"column":9}},"loc":{"start":{"line":587,"column":20},"end":{"line":589,"column":9}},"line":587},"60":{"name":"(anonymous_60)","decl":{"start":{"line":590,"column":8},"end":{"line":590,"column":9}},"loc":{"start":{"line":590,"column":18},"end":{"line":592,"column":9}},"line":590},"61":{"name":"(anonymous_61)","decl":{"start":{"line":593,"column":8},"end":{"line":593,"column":9}},"loc":{"start":{"line":593,"column":19},"end":{"line":595,"column":9}},"line":593},"62":{"name":"(anonymous_62)","decl":{"start":{"line":596,"column":14},"end":{"line":596,"column":15}},"loc":{"start":{"line":596,"column":31},"end":{"line":604,"column":9}},"line":596},"63":{"name":"(anonymous_63)","decl":{"start":{"line":605,"column":8},"end":{"line":605,"column":9}},"loc":{"start":{"line":605,"column":20},"end":{"line":608,"column":9}},"line":605},"64":{"name":"(anonymous_64)","decl":{"start":{"line":607,"column":36},"end":{"line":607,"column":37}},"loc":{"start":{"line":607,"column":49},"end":{"line":607,"column":62}},"line":607}},"branchMap":{"0":{"loc":{"start":{"line":39,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":44,"column":5}},{"start":{"line":39,"column":4},"end":{"line":44,"column":5}}],"line":39},"1":{"loc":{"start":{"line":53,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":67,"column":5}},{"start":{"line":53,"column":4},"end":{"line":67,"column":5}}],"line":53},"2":{"loc":{"start":{"line":56,"column":9},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":56,"column":9},"end":{"line":67,"column":5}},{"start":{"line":56,"column":9},"end":{"line":67,"column":5}}],"line":56},"3":{"loc":{"start":{"line":59,"column":9},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":59,"column":9},"end":{"line":67,"column":5}},{"start":{"line":59,"column":9},"end":{"line":67,"column":5}}],"line":59},"4":{"loc":{"start":{"line":62,"column":9},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":9},"end":{"line":67,"column":5}},{"start":{"line":62,"column":9},"end":{"line":67,"column":5}}],"line":62},"5":{"loc":{"start":{"line":71,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":102,"column":5}},{"start":{"line":71,"column":4},"end":{"line":102,"column":5}}],"line":71},"6":{"loc":{"start":{"line":71,"column":8},"end":{"line":71,"column":48}},"type":"binary-expr","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":26}},{"start":{"line":71,"column":30},"end":{"line":71,"column":48}}],"line":71},"7":{"loc":{"start":{"line":79,"column":9},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":79,"column":9},"end":{"line":102,"column":5}},{"start":{"line":79,"column":9},"end":{"line":102,"column":5}}],"line":79},"8":{"loc":{"start":{"line":79,"column":13},"end":{"line":79,"column":53}},"type":"binary-expr","locations":[{"start":{"line":79,"column":13},"end":{"line":79,"column":31}},{"start":{"line":79,"column":35},"end":{"line":79,"column":53}}],"line":79},"9":{"loc":{"start":{"line":88,"column":8},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":101,"column":9}},{"start":{"line":88,"column":8},"end":{"line":101,"column":9}}],"line":88},"10":{"loc":{"start":{"line":88,"column":12},"end":{"line":88,"column":52}},"type":"binary-expr","locations":[{"start":{"line":88,"column":12},"end":{"line":88,"column":30}},{"start":{"line":88,"column":34},"end":{"line":88,"column":52}}],"line":88},"11":{"loc":{"start":{"line":106,"column":4},"end":{"line":137,"column":5}},"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":137,"column":5}},{"start":{"line":106,"column":4},"end":{"line":137,"column":5}}],"line":106},"12":{"loc":{"start":{"line":106,"column":8},"end":{"line":106,"column":48}},"type":"binary-expr","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":26}},{"start":{"line":106,"column":30},"end":{"line":106,"column":48}}],"line":106},"13":{"loc":{"start":{"line":114,"column":9},"end":{"line":137,"column":5}},"type":"if","locations":[{"start":{"line":114,"column":9},"end":{"line":137,"column":5}},{"start":{"line":114,"column":9},"end":{"line":137,"column":5}}],"line":114},"14":{"loc":{"start":{"line":114,"column":13},"end":{"line":114,"column":53}},"type":"binary-expr","locations":[{"start":{"line":114,"column":13},"end":{"line":114,"column":31}},{"start":{"line":114,"column":35},"end":{"line":114,"column":53}}],"line":114},"15":{"loc":{"start":{"line":123,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":136,"column":9}},{"start":{"line":123,"column":8},"end":{"line":136,"column":9}}],"line":123},"16":{"loc":{"start":{"line":123,"column":12},"end":{"line":123,"column":52}},"type":"binary-expr","locations":[{"start":{"line":123,"column":12},"end":{"line":123,"column":30}},{"start":{"line":123,"column":34},"end":{"line":123,"column":52}}],"line":123},"17":{"loc":{"start":{"line":141,"column":4},"end":{"line":176,"column":5}},"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":176,"column":5}},{"start":{"line":141,"column":4},"end":{"line":176,"column":5}}],"line":141},"18":{"loc":{"start":{"line":141,"column":8},"end":{"line":141,"column":48}},"type":"binary-expr","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":26}},{"start":{"line":141,"column":30},"end":{"line":141,"column":48}}],"line":141},"19":{"loc":{"start":{"line":144,"column":9},"end":{"line":176,"column":5}},"type":"if","locations":[{"start":{"line":144,"column":9},"end":{"line":176,"column":5}},{"start":{"line":144,"column":9},"end":{"line":176,"column":5}}],"line":144},"20":{"loc":{"start":{"line":144,"column":13},"end":{"line":144,"column":53}},"type":"binary-expr","locations":[{"start":{"line":144,"column":13},"end":{"line":144,"column":31}},{"start":{"line":144,"column":35},"end":{"line":144,"column":53}}],"line":144},"21":{"loc":{"start":{"line":148,"column":8},"end":{"line":175,"column":9}},"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":175,"column":9}},{"start":{"line":148,"column":8},"end":{"line":175,"column":9}}],"line":148},"22":{"loc":{"start":{"line":148,"column":12},"end":{"line":148,"column":52}},"type":"binary-expr","locations":[{"start":{"line":148,"column":12},"end":{"line":148,"column":30}},{"start":{"line":148,"column":34},"end":{"line":148,"column":52}}],"line":148},"23":{"loc":{"start":{"line":154,"column":20},"end":{"line":167,"column":21}},"type":"if","locations":[{"start":{"line":154,"column":20},"end":{"line":167,"column":21}},{"start":{"line":154,"column":20},"end":{"line":167,"column":21}}],"line":154},"24":{"loc":{"start":{"line":158,"column":25},"end":{"line":167,"column":21}},"type":"if","locations":[{"start":{"line":158,"column":25},"end":{"line":167,"column":21}},{"start":{"line":158,"column":25},"end":{"line":167,"column":21}}],"line":158},"25":{"loc":{"start":{"line":180,"column":4},"end":{"line":199,"column":5}},"type":"if","locations":[{"start":{"line":180,"column":4},"end":{"line":199,"column":5}},{"start":{"line":180,"column":4},"end":{"line":199,"column":5}}],"line":180},"26":{"loc":{"start":{"line":180,"column":8},"end":{"line":180,"column":48}},"type":"binary-expr","locations":[{"start":{"line":180,"column":8},"end":{"line":180,"column":26}},{"start":{"line":180,"column":30},"end":{"line":180,"column":48}}],"line":180},"27":{"loc":{"start":{"line":183,"column":9},"end":{"line":199,"column":5}},"type":"if","locations":[{"start":{"line":183,"column":9},"end":{"line":199,"column":5}},{"start":{"line":183,"column":9},"end":{"line":199,"column":5}}],"line":183},"28":{"loc":{"start":{"line":183,"column":13},"end":{"line":183,"column":53}},"type":"binary-expr","locations":[{"start":{"line":183,"column":13},"end":{"line":183,"column":31}},{"start":{"line":183,"column":35},"end":{"line":183,"column":53}}],"line":183},"29":{"loc":{"start":{"line":187,"column":8},"end":{"line":198,"column":9}},"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":198,"column":9}},{"start":{"line":187,"column":8},"end":{"line":198,"column":9}}],"line":187},"30":{"loc":{"start":{"line":187,"column":12},"end":{"line":187,"column":52}},"type":"binary-expr","locations":[{"start":{"line":187,"column":12},"end":{"line":187,"column":30}},{"start":{"line":187,"column":34},"end":{"line":187,"column":52}}],"line":187},"31":{"loc":{"start":{"line":188,"column":12},"end":{"line":193,"column":13}},"type":"if","locations":[{"start":{"line":188,"column":12},"end":{"line":193,"column":13}},{"start":{"line":188,"column":12},"end":{"line":193,"column":13}}],"line":188},"32":{"loc":{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},{"start":{"line":222,"column":4},"end":{"line":224,"column":5}}],"line":222},"33":{"loc":{"start":{"line":225,"column":4},"end":{"line":227,"column":5}},"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":227,"column":5}},{"start":{"line":225,"column":4},"end":{"line":227,"column":5}}],"line":225},"34":{"loc":{"start":{"line":234,"column":12},"end":{"line":236,"column":13}},"type":"if","locations":[{"start":{"line":234,"column":12},"end":{"line":236,"column":13}},{"start":{"line":234,"column":12},"end":{"line":236,"column":13}}],"line":234},"35":{"loc":{"start":{"line":288,"column":12},"end":{"line":293,"column":13}},"type":"if","locations":[{"start":{"line":288,"column":12},"end":{"line":293,"column":13}},{"start":{"line":288,"column":12},"end":{"line":293,"column":13}}],"line":288},"36":{"loc":{"start":{"line":288,"column":16},"end":{"line":288,"column":73}},"type":"binary-expr","locations":[{"start":{"line":288,"column":16},"end":{"line":288,"column":41}},{"start":{"line":288,"column":45},"end":{"line":288,"column":73}}],"line":288},"37":{"loc":{"start":{"line":306,"column":16},"end":{"line":308,"column":17}},"type":"if","locations":[{"start":{"line":306,"column":16},"end":{"line":308,"column":17}},{"start":{"line":306,"column":16},"end":{"line":308,"column":17}}],"line":306},"38":{"loc":{"start":{"line":327,"column":20},"end":{"line":340,"column":21}},"type":"if","locations":[{"start":{"line":327,"column":20},"end":{"line":340,"column":21}},{"start":{"line":327,"column":20},"end":{"line":340,"column":21}}],"line":327},"39":{"loc":{"start":{"line":331,"column":25},"end":{"line":340,"column":21}},"type":"if","locations":[{"start":{"line":331,"column":25},"end":{"line":340,"column":21}},{"start":{"line":331,"column":25},"end":{"line":340,"column":21}}],"line":331},"40":{"loc":{"start":{"line":351,"column":20},"end":{"line":364,"column":21}},"type":"if","locations":[{"start":{"line":351,"column":20},"end":{"line":364,"column":21}},{"start":{"line":351,"column":20},"end":{"line":364,"column":21}}],"line":351},"41":{"loc":{"start":{"line":355,"column":25},"end":{"line":364,"column":21}},"type":"if","locations":[{"start":{"line":355,"column":25},"end":{"line":364,"column":21}},{"start":{"line":355,"column":25},"end":{"line":364,"column":21}}],"line":355},"42":{"loc":{"start":{"line":419,"column":12},"end":{"line":419,"column":58}},"type":"if","locations":[{"start":{"line":419,"column":12},"end":{"line":419,"column":58}},{"start":{"line":419,"column":12},"end":{"line":419,"column":58}}],"line":419},"43":{"loc":{"start":{"line":431,"column":16},"end":{"line":433,"column":17}},"type":"if","locations":[{"start":{"line":431,"column":16},"end":{"line":433,"column":17}},{"start":{"line":431,"column":16},"end":{"line":433,"column":17}}],"line":431},"44":{"loc":{"start":{"line":440,"column":12},"end":{"line":445,"column":13}},"type":"if","locations":[{"start":{"line":440,"column":12},"end":{"line":445,"column":13}},{"start":{"line":440,"column":12},"end":{"line":445,"column":13}}],"line":440},"45":{"loc":{"start":{"line":466,"column":16},"end":{"line":468,"column":17}},"type":"if","locations":[{"start":{"line":466,"column":16},"end":{"line":468,"column":17}},{"start":{"line":466,"column":16},"end":{"line":468,"column":17}}],"line":466},"46":{"loc":{"start":{"line":496,"column":16},"end":{"line":498,"column":17}},"type":"if","locations":[{"start":{"line":496,"column":16},"end":{"line":498,"column":17}},{"start":{"line":496,"column":16},"end":{"line":498,"column":17}}],"line":496},"47":{"loc":{"start":{"line":509,"column":16},"end":{"line":514,"column":17}},"type":"if","locations":[{"start":{"line":509,"column":16},"end":{"line":514,"column":17}},{"start":{"line":509,"column":16},"end":{"line":514,"column":17}}],"line":509},"48":{"loc":{"start":{"line":520,"column":12},"end":{"line":544,"column":13}},"type":"if","locations":[{"start":{"line":520,"column":12},"end":{"line":544,"column":13}},{"start":{"line":520,"column":12},"end":{"line":544,"column":13}}],"line":520},"49":{"loc":{"start":{"line":528,"column":20},"end":{"line":541,"column":21}},"type":"if","locations":[{"start":{"line":528,"column":20},"end":{"line":541,"column":21}},{"start":{"line":528,"column":20},"end":{"line":541,"column":21}}],"line":528},"50":{"loc":{"start":{"line":533,"column":24},"end":{"line":540,"column":25}},"type":"if","locations":[{"start":{"line":533,"column":24},"end":{"line":540,"column":25}},{"start":{"line":533,"column":24},"end":{"line":540,"column":25}}],"line":533},"51":{"loc":{"start":{"line":556,"column":4},"end":{"line":571,"column":5}},"type":"if","locations":[{"start":{"line":556,"column":4},"end":{"line":571,"column":5}},{"start":{"line":556,"column":4},"end":{"line":571,"column":5}}],"line":556},"52":{"loc":{"start":{"line":557,"column":8},"end":{"line":570,"column":9}},"type":"if","locations":[{"start":{"line":557,"column":8},"end":{"line":570,"column":9}},{"start":{"line":557,"column":8},"end":{"line":570,"column":9}}],"line":557},"53":{"loc":{"start":{"line":558,"column":12},"end":{"line":560,"column":13}},"type":"if","locations":[{"start":{"line":558,"column":12},"end":{"line":560,"column":13}},{"start":{"line":558,"column":12},"end":{"line":560,"column":13}}],"line":558},"54":{"loc":{"start":{"line":563,"column":16},"end":{"line":565,"column":17}},"type":"if","locations":[{"start":{"line":563,"column":16},"end":{"line":565,"column":17}},{"start":{"line":563,"column":16},"end":{"line":565,"column":17}}],"line":563},"55":{"loc":{"start":{"line":598,"column":12},"end":{"line":603,"column":13}},"type":"if","locations":[{"start":{"line":598,"column":12},"end":{"line":603,"column":13}},{"start":{"line":598,"column":12},"end":{"line":603,"column":13}}],"line":598},"56":{"loc":{"start":{"line":598,"column":16},"end":{"line":598,"column":39}},"type":"binary-expr","locations":[{"start":{"line":598,"column":16},"end":{"line":598,"column":26}},{"start":{"line":598,"column":30},"end":{"line":598,"column":39}}],"line":598}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":693,"28":693,"29":0,"30":0,"31":20,"32":11,"33":9,"34":9,"35":0,"36":0,"37":0,"38":0,"39":0,"40":33,"41":33,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":33,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":33,"56":33,"57":33,"58":33,"59":33,"60":33,"61":33,"62":33,"63":33,"64":0,"65":57,"66":57,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":57,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":57,"81":57,"82":57,"83":57,"84":53,"85":57,"86":57,"87":57,"88":57,"89":0,"90":141,"91":141,"92":0,"93":141,"94":0,"95":141,"96":141,"97":141,"98":141,"99":157,"100":157,"101":157,"102":204,"103":204,"104":43,"105":43,"106":161,"107":161,"108":161,"109":0,"110":0,"111":0,"112":0,"113":141,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":18,"126":18,"127":18,"128":18,"129":18,"130":24,"131":24,"132":24,"133":0,"134":24,"135":24,"136":584,"137":0,"138":584,"139":0,"140":584,"141":584,"142":81,"143":81,"144":81,"145":77,"146":77,"147":49,"148":81,"149":584,"150":2506,"151":0,"152":0,"153":33,"154":0,"155":25,"156":32,"157":0,"158":6,"159":4,"160":2,"161":3,"162":3,"163":4,"164":8,"165":8,"166":8,"167":8,"168":0,"169":0,"170":28,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":113,"180":0,"181":0,"182":40,"183":40,"184":40,"185":40,"186":40,"187":40,"188":40,"189":40,"190":20,"191":20,"192":20,"193":20,"194":20,"195":0,"196":0,"197":0,"198":0,"199":40,"200":32,"201":32,"202":32,"203":32,"204":32,"205":32,"206":32,"207":32,"208":16,"209":16,"210":16,"211":16,"212":16,"213":0,"214":0,"215":0,"216":0,"217":32,"218":81,"219":32,"220":32,"221":32,"222":32,"223":32,"224":32,"225":32,"226":32,"227":32,"228":32,"229":0,"230":0,"231":7,"232":7,"233":7,"234":7,"235":7,"236":7,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":14,"267":14,"268":14,"269":14,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":45,"280":45,"281":45,"282":41,"283":41,"284":41,"285":41,"286":45,"287":8,"288":8,"289":8,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":53,"297":53,"298":53,"299":58,"300":58,"301":53,"302":94,"303":94,"304":88,"305":88,"306":88,"307":6,"308":49,"309":12,"310":12,"311":12,"312":12,"313":12,"314":12,"315":0,"316":12,"317":4,"318":4,"319":0,"320":4,"321":4,"322":4,"323":4,"324":4,"325":4,"326":4,"327":0,"328":0,"329":0,"330":0,"331":0,"332":4,"333":4,"334":584,"335":12,"336":12,"337":12,"338":0,"339":12,"340":12,"341":26,"342":26,"343":0,"344":0,"345":8,"346":8,"347":8,"348":8,"349":8,"350":8,"351":8,"352":0,"353":880,"354":13,"355":6,"356":18,"357":18,"358":18,"359":0,"360":0,"361":0,"362":8,"363":8,"364":8,"365":8,"366":8,"367":18,"368":8,"369":1},"f":{"0":693,"1":0,"2":20,"3":33,"4":57,"5":141,"6":0,"7":18,"8":24,"9":0,"10":584,"11":81,"12":2506,"13":0,"14":0,"15":33,"16":0,"17":25,"18":32,"19":0,"20":6,"21":4,"22":2,"23":3,"24":3,"25":4,"26":8,"27":0,"28":28,"29":1,"30":113,"31":0,"32":0,"33":40,"34":32,"35":81,"36":32,"37":0,"38":0,"39":7,"40":0,"41":0,"42":0,"43":0,"44":14,"45":0,"46":0,"47":45,"48":8,"49":0,"50":53,"51":94,"52":49,"53":12,"54":4,"55":4,"56":12,"57":8,"58":0,"59":880,"60":13,"61":6,"62":18,"63":0,"64":0},"b":{"0":[693,0],"1":[11,9],"2":[9,0],"3":[0,0],"4":[0,0],"5":[0,33],"6":[33,0],"7":[0,33],"8":[33,33],"9":[33,0],"10":[33,33],"11":[0,57],"12":[57,0],"13":[0,57],"14":[57,57],"15":[57,0],"16":[57,57],"17":[0,141],"18":[141,0],"19":[0,141],"20":[141,141],"21":[141,0],"22":[141,141],"23":[43,161],"24":[161,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,584],"33":[0,584],"34":[49,28],"35":[8,0],"36":[8,8],"37":[1,0],"38":[20,20],"39":[20,0],"40":[16,16],"41":[16,0],"42":[0,0],"43":[0,0],"44":[14,0],"45":[41,0],"46":[88,0],"47":[12,0],"48":[0,4],"49":[4,0],"50":[0,0],"51":[12,0],"52":[12,0],"53":[0,12],"54":[0,26],"55":[18,0],"56":[18,18]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/Algebra.ts","sources":["/home/david/Development/geocas/src/mother/Algebra.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArray } from '../checks/isArray';\nimport { isDefined } from '../checks/isDefined';\nimport { isNumber } from '../checks/isNumber';\nimport { isString } from '../checks/isString';\nimport { isUndefined } from '../checks/isUndefined';\nimport { mustBeDefined } from '../checks/mustBeDefined';\nimport { mustBeInteger } from '../checks/mustBeInteger';\nimport { mustSatisfy } from '../checks/mustSatisfy';\nimport { blade } from './Blade';\nimport { FieldAdapter } from './FieldAdapter';\nimport { gpE } from './gpE';\nimport { gpG } from './gpG';\nimport { gpL } from './gpL';\nimport { isScalar } from './isScalar';\nimport { lcoE } from './lcoE';\nimport { lcoG } from './lcoG';\nimport { lcoL } from './lcoL';\nimport { Algebra, Blade, Metric, Multivector } from './Multivector';\nimport { multivectorEQ } from './multivectorEQ';\nimport { multivectorGE } from './multivectorGE';\nimport { multivectorGT } from './multivectorGT';\nimport { multivectorLE } from './multivectorLE';\nimport { multivectorLT } from './multivectorLT';\nimport { rcoE } from './rcoE';\nimport { rcoG } from './rcoG';\nimport { rcoL } from './rcoL';\nimport { simplify } from './simplify';\n\ntype METRIC<T> = number | number[] | Metric<T>;\n\n/**\n * The JavaScript Bitwise operators use 32-bit signed numbers.\n * &  AND\n * |  OR\n * ~  NOT\n * ^  XOR\n * << Left shift (LHS is what is shifted, RHS is number of bits)\n * >> Right shift\n */\n\nfunction isMultivector<T>(arg: any): arg is Multivector<T> {\n    if (arg) {\n        return typeof arg['extractGrade'] === 'function';\n    }\n    else {\n        return false;\n    }\n}\nfunction isMetric(arg: Metric<any>): arg is Metric<any> {\n    return typeof arg.getEigenMetric === 'function';\n}\n\n/**\n * Computes the dimension of the vector space from the metric.\n */\nfunction dim<T>(metric: number | number[] | Metric<T>): number {\n    if (isNumber(metric)) {\n        return metric;\n    }\n    else if (isArray(metric)) {\n        return metric.length;\n    }\n    else if (isUndefined(metric)) {\n        throw new Error(\"metric is undefined\");\n    }\n    else if (isMetric(metric)) {\n        return metric.getEigenMetric().length;\n    }\n    else {\n        throw new Error(\"metric is undefined\");\n    }\n}\n\nfunction add<T>(lhs: T | Multivector<T>, rhs: T | Multivector<T>, algebra: Algebra<T>, metric: METRIC<T>, labels: string[]): Multivector<T> | undefined {\n    const field = algebra.field;\n    if (field.isField(lhs) && isMultivector(rhs)) {\n        const rez: Blade<T>[] = [];\n        rez.push(blade(0, lhs, field));\n        for (let k = 0; k < rhs.blades.length; k++) {\n            rez.push(rhs.blades[k]);\n        }\n        return mv(simplify(rez, field), algebra, metric, labels);\n    }\n    else if (isMultivector(lhs) && field.isField(rhs)) {\n        const rez: Blade<T>[] = [];\n        rez.push(blade(0, rhs, field));\n        for (let k = 0; k < lhs.blades.length; k++) {\n            rez.push(lhs.blades[k]);\n        }\n        return mv(simplify(rez, field), algebra, metric, labels);\n    }\n    else {\n        if (isMultivector(lhs) && isMultivector(rhs)) {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < lhs.blades.length; i++) {\n                rez.push(lhs.blades[i]);\n            }\n            for (let k = 0; k < rhs.blades.length; k++) {\n                rez.push(rhs.blades[k]);\n            }\n            return mv(simplify(rez, field), algebra, metric, labels);\n        }\n        else {\n            // We'll be using this function for operator overloading.\n            return void 0;\n        }\n    }\n}\n\nfunction sub<T>(lhs: T | Multivector<T>, rhs: T | Multivector<T>, algebra: Algebra<T>, metric: METRIC<T>, labels: string[]): Multivector<T> | undefined {\n    const field = algebra.field;\n    if (field.isField(lhs) && isMultivector(rhs)) {\n        const rez: Blade<T>[] = [];\n        rez.push(blade(0, lhs, field));\n        for (let k = 0; k < rhs.blades.length; k++) {\n            rez.push(rhs.blades[k].__neg__());\n        }\n        return mv(simplify(rez, field), algebra, metric, labels);\n    }\n    else if (isMultivector(lhs) && field.isField(rhs)) {\n        const rez: Blade<T>[] = [];\n        rez.push(blade(0, field.neg(rhs), field));\n        for (let k = 0; k < lhs.blades.length; k++) {\n            rez.push(lhs.blades[k]);\n        }\n        return mv(simplify(rez, field), algebra, metric, labels);\n    }\n    else {\n        if (isMultivector(lhs) && isMultivector(rhs)) {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < lhs.blades.length; i++) {\n                rez.push(lhs.blades[i]);\n            }\n            for (let k = 0; k < rhs.blades.length; k++) {\n                rez.push(rhs.blades[k].__neg__());\n            }\n            return mv(simplify(rez, field), algebra, metric, labels);\n        }\n        else {\n            // We'll be using this function for operator overloading.\n            return void 0;\n        }\n    }\n}\n\nfunction mul<T>(lhs: T | Multivector<T>, rhs: T | Multivector<T>, algebra: Algebra<T>, metric: METRIC<T>, labels: string[]): Multivector<T> | undefined {\n    const field = algebra.field;\n    if (field.isField(lhs) && isMultivector(rhs)) {\n        return rhs.mulByScalar(lhs);\n    }\n    else if (isMultivector(lhs) && field.isField(rhs)) {\n        return lhs.mulByScalar(rhs);\n    }\n    else {\n        if (isMultivector(lhs) && isMultivector(rhs)) {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < lhs.blades.length; i++) {\n                const B1 = lhs.blades[i];\n                for (let k = 0; k < rhs.blades.length; k++) {\n                    const B2 = rhs.blades[k];\n                    if (isNumber(metric)) {\n                        const B = gpE(B1, B2, field);\n                        rez.push(B);\n                    }\n                    else if (isArray(metric)) {\n                        const B = gpL(B1, B2, <number[]>metric, field);\n                        rez.push(B);\n                    }\n                    else {\n                        const B = gpG(B1, B2, <Metric<T>>metric, field);\n                        for (let b = 0; b < B.length; b++) {\n                            rez.push(B[b]);\n                        }\n                    }\n                }\n            }\n            return mv(simplify(rez, field), algebra, metric, labels);\n        }\n        else {\n            // We'll be using this function for operator overloading.\n            return void 0;\n        }\n    }\n}\n\nfunction div<T>(lhs: T | Multivector<T>, rhs: T | Multivector<T>, algebra: Algebra<T>): Multivector<T> | undefined {\n    const field = algebra.field;\n    if (field.isField(lhs) && isMultivector(rhs)) {\n        throw new Error(`Multivector division is not yet supported. ${lhs} / ${rhs}`);\n    }\n    else if (isMultivector(lhs) && field.isField(rhs)) {\n        return lhs.divByScalar(rhs);\n    }\n    else {\n        if (isMultivector(lhs) && isMultivector(rhs)) {\n            if (isScalar(rhs)) {\n                return lhs.divByScalar(rhs.scalarCoordinate());\n            }\n            else {\n                throw new Error(`Multivector division is not yet supported. ${lhs} / ${rhs}`);\n            }\n        }\n        else {\n            // We'll be using this function for operator overloading.\n            return void 0;\n        }\n    }\n}\n\n/**\n * Returns the basis vector with index in the integer range [0 ... dim)\n */\nfunction getBasisVector<T>(index: number, algebra: Algebra<T>, metric: METRIC<T>, labels: string[]): Multivector<T> {\n    mustBeInteger('index', index);\n    mustBeDefined('algebra', algebra);\n    const field = algebra.field;\n    const B = blade(1 << index, field.one, field);\n    return mv<T>([B], algebra, metric, labels);\n}\n\n/**\n * Returns a scalar Multivector.\n */\nfunction getScalar<T>(weight: T, algebra: Algebra<T>, metric: METRIC<T>, labels: string[]): Multivector<T> {\n    mustBeDefined('algebra', algebra);\n    const field = algebra.field;\n    mustSatisfy('weight', field.isField(weight), () => { return `be a field value`; });\n    const B = blade(0, weight, field);\n    return mv<T>([B], algebra, metric, labels);\n}\n\nfunction mv<T>(blades: Blade<T>[], algebra: Algebra<T>, metric: METRIC<T>, labels: string[]) {\n    if (!isArray(blades)) {\n        throw new Error(\"blades must be Blade<T>[]\");\n    }\n    if (isUndefined(algebra)) {\n        throw new Error(\"algebra must be defined\");\n    }\n    // const metric = G.metric;\n    const field = algebra.field;\n    const extractGrade = function (grade: number): Multivector<T> {\n        const rez: Blade<T>[] = [];\n        for (let i = 0; i < blades.length; i++) {\n            const B = blades[i];\n            if (B.grade() === grade) {\n                rez.push(B);\n            }\n        }\n        return mv(rez, algebra, metric, labels);\n    };\n    const that: Multivector<T> = {\n        get blades() {\n            return blades;\n        },\n        __abs__(): Multivector<T> {\n            return that.scp(that.rev()).sqrt();\n        },\n        add(rhs: Multivector<T>): Multivector<T> {\n            return add(that, rhs, algebra, metric, labels) as Multivector<T>;\n        },\n        __add__(rhs: Multivector<T>): Multivector<T> {\n            return add(that, rhs, algebra, metric, labels) as Multivector<T>;\n        },\n        __radd__(lhs: Multivector<T>): Multivector<T> {\n            return add(lhs, that, algebra, metric, labels) as Multivector<T>;\n        },\n        sub(rhs: Multivector<T>): Multivector<T> {\n            return sub(that, rhs, algebra, metric, labels) as Multivector<T>;\n        },\n        __sub__(rhs: Multivector<T>): Multivector<T> {\n            return sub(that, rhs, algebra, metric, labels) as Multivector<T>;\n        },\n        __rsub__(lhs: Multivector<T>): Multivector<T> {\n            return sub(lhs, that, algebra, metric, labels) as Multivector<T>;\n        },\n        __eq__(rhs: Multivector<T>): boolean {\n            return multivectorEQ(that, rhs, field);\n        },\n        __ge__(rhs: Multivector<T>): boolean {\n            return multivectorGE(that, rhs, field);\n        },\n        __gt__(rhs: Multivector<T>): boolean {\n            return multivectorGT(that, rhs, field);\n        },\n        __le__(rhs: Multivector<T>): boolean {\n            return multivectorLE(that, rhs, field);\n        },\n        __lt__(rhs: Multivector<T>): boolean {\n            return multivectorLT(that, rhs, field);\n        },\n        __ne__(rhs: Multivector<T>): boolean {\n            return !multivectorEQ(that, rhs, field);\n        },\n        inv(): Multivector<T> {\n            // We'll start by trying the versor inverse before doing the general inverse.\n            const reverse = that.rev();\n            const denom = that.mul(reverse);\n            // If we have a scalar, then we can compute the versor inverse\n            if (denom.blades.length === 1 && denom.blades[0].bitmap === 0) {\n                return reverse.divByScalar(denom.scalarCoordinate());\n            }\n            else {\n                throw new Error(`non-invertible multivector (versor inverse) ${that}`);\n            }\n        },\n        isZero(): boolean {\n            return blades.length === 0;\n        },\n        mul(rhs: Multivector<T>): Multivector<T> {\n            return mul(that, rhs, algebra, metric, labels) as Multivector<T>;\n        },\n        mulByScalar(α: T): Multivector<T> {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < blades.length; i++) {\n                const B = blades[i];\n                const scale = field.mul(B.weight, α);\n                if (!field.isZero(scale)) {\n                    rez.push(blade(B.bitmap, scale, field));\n                }\n            }\n            return mv(rez, algebra, metric, labels);\n        },\n        __mul__(rhs: T | Multivector<T>): Multivector<T> {\n            return mul(that, rhs, algebra, metric, labels) as Multivector<T>;\n        },\n        __rmul__(lhs: T | Multivector<T>): Multivector<T> {\n            return mul(lhs, that, algebra, metric, labels) as Multivector<T>;\n        },\n        __div__(rhs: T | Multivector<T>): Multivector<T> {\n            return div(that, rhs, algebra) as Multivector<T>;\n        },\n        __lshift__(rhs: Multivector<T>): Multivector<T> {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < blades.length; i++) {\n                const B1 = blades[i];\n                for (let k = 0; k < rhs.blades.length; k++) {\n                    const B2 = rhs.blades[k];\n                    if (isNumber(metric)) {\n                        const B = lcoE(B1, B2, field);\n                        rez.push(B);\n                    }\n                    else if (isArray(metric)) {\n                        const B = lcoL(B1, B2, <number[]>metric, field);\n                        rez.push(B);\n                    }\n                    else {\n                        const B = lcoG(B1, B2, <Metric<T>>metric, field);\n                        for (let b = 0; b < B.length; b++) {\n                            rez.push(B[b]);\n                        }\n                    }\n                }\n            }\n            return mv(simplify(rez, field), algebra, metric, labels);\n        },\n        __rshift__(rhs: Multivector<T>): Multivector<T> {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < blades.length; i++) {\n                const B1 = blades[i];\n                for (let k = 0; k < rhs.blades.length; k++) {\n                    const B2 = rhs.blades[k];\n                    if (isNumber(metric)) {\n                        const B = rcoE(B1, B2, field);\n                        rez.push(B);\n                    }\n                    else if (isArray(metric)) {\n                        const B = rcoL(B1, B2, metric, field);\n                        rez.push(B);\n                    }\n                    else {\n                        const B = rcoG(B1, B2, <Metric<T>>metric, field);\n                        for (let b = 0; b < B.length; b++) {\n                            rez.push(B[b]);\n                        }\n                    }\n                }\n            }\n            return mv(simplify(rez, field), algebra, metric, labels);\n        },\n        __vbar__(rhs: Multivector<T>): Multivector<T> {\n            // Use the definition of the scalar product in terms of the geometric product.\n            return that.__mul__(rhs).extractGrade(0);\n        },\n        __wedge__(rhs: Multivector<T>): Multivector<T> {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < blades.length; i++) {\n                const B1 = blades[i];\n                for (let k = 0; k < rhs.blades.length; k++) {\n                    const B2 = rhs.blades[k];\n                    const B = B1.__wedge__(B2);\n                    rez.push(B);\n                }\n            }\n            return mv(simplify(rez, field), algebra, metric, labels);\n        },\n        __bang__(): Multivector<T> {\n            return that.inv();\n        },\n        __pos__(): Multivector<T> {\n            return that;\n        },\n        neg(): Multivector<T> {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < blades.length; i++) {\n                const B = blades[i];\n                rez.push(B.__neg__());\n            }\n            return mv(rez, algebra, metric, labels);\n        },\n        __neg__(): Multivector<T> {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < blades.length; i++) {\n                const B = blades[i];\n                rez.push(B.__neg__());\n            }\n            return mv(rez, algebra, metric, labels);\n        },\n        __tilde__(): Multivector<T> {\n            return that.rev();\n        },\n        cliffordConjugate(): Multivector<T> {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < blades.length; i++) {\n                const B = blades[i];\n                rez.push(B.cliffordConjugate());\n            }\n            return mv(rez, algebra, metric, labels);\n        },\n        compress(fraction = 1e-12): Multivector<T> {\n            let eps = field.mulByNumber(field.one, fraction);\n            let max = field.zero;\n            // Find the largest blade in absolute terms.\n            for (let i = 0; i < blades.length; i++) {\n                const B = blades[i];\n                max = field.max(max, field.abs(B.weight));\n            }\n            const cutOff = field.mul(max, eps);\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < blades.length; i++) {\n                const B = blades[i];\n                if (field.ge(field.abs(B.weight), cutOff)) {\n                    rez.push(B);\n                }\n            }\n            return mv(rez, algebra, metric, labels);\n        },\n        direction(): Multivector<T> {\n            const squaredNorm = that.scp(that.rev()).scalarCoordinate();\n            const norm = field.sqrt(squaredNorm);\n            if (!field.isZero(norm)) {\n                return that.divByScalar(norm);\n            }\n            else {\n                return that;\n            }\n        },\n        exp(): Multivector<T> {\n            // TODO: Optimize and Generalize.\n            const B = extractGrade(2);\n            const Brev = B.rev();\n            const θ = field.sqrt(B.__vbar__(Brev).scalarCoordinate());\n            const i = B.divByScalar(θ);\n            const cosθ = mv([blade(0, field.cos(θ), field)], algebra, metric, labels);\n            const sinθ = mv([blade(0, field.sin(θ), field)], algebra, metric, labels);\n            return cosθ.__add__(i.__mul__(sinθ));\n        },\n        extractGrade,\n        div(rhs: Multivector<T>): Multivector<T> {\n            return that.mul(rhs.inv());\n        },\n        divByScalar(α: T): Multivector<T> {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < blades.length; i++) {\n                const B = blades[i];\n                const scale = field.div(B.weight, α);\n                if (!field.isZero(scale)) {\n                    rez.push(blade(B.bitmap, scale, field));\n                }\n            }\n            return mv(rez, algebra, metric, labels);\n        },\n        dual(): Multivector<T> {\n            const n = dim(metric);\n            const I = mv([blade((1 << n) - 1, field.one, field)], algebra, metric, labels);\n            return that.__lshift__(I);\n        },\n        gradeInversion(): Multivector<T> {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < blades.length; i++) {\n                const B = blades[i];\n                rez.push(B.gradeInversion());\n            }\n            return mv(rez, algebra, metric, labels);\n        },\n        rev(): Multivector<T> {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < blades.length; i++) {\n                const B = blades[i];\n                rez.push(B.reverse());\n            }\n            return mv(rez, algebra, metric, labels);\n        },\n        scalarCoordinate(): T {\n            for (let i = 0; i < blades.length; i++) {\n                const B = blades[i];\n                if (B.bitmap === 0) {\n                    return B.weight;\n                }\n            }\n            return field.zero;\n        },\n        scp(rhs: Multivector<T>): Multivector<T> {\n            return that.__vbar__(rhs);\n        },\n        sqrt(): Multivector<T> {\n            const rez: Blade<T>[] = [];\n            for (let i = 0; i < blades.length; i++) {\n                const B = blades[i];\n                if (B.bitmap === 0) {\n                    rez.push(blade(B.bitmap, field.sqrt(B.weight), field));\n                }\n                else {\n                    throw new Error(`sqrt on arbitrary multivectors is not yet supported.`);\n                }\n            }\n            return mv(rez, algebra, metric, labels);\n        },\n        asString(names: string[]): string {\n\n            checkBasisLabels('names', names, dim(metric));\n\n            if (blades.length === 0) {\n                return \"0\";\n            }\n            else {\n                let result = \"\";\n                for (let i = 0; i < blades.length; i++) {\n                    const B = blades[i];\n                    const s = B.asString(names);\n                    if (i === 0) {\n                        result += s;\n                    }\n                    else {\n                        // TODO: Fix this hackery...\n                        if (s.charAt(0) === '-') {\n                            result += ' - ';\n                            result += s.substring(1);\n                        }\n                        else {\n                            result += ' + ';\n                            result += s;\n                        }\n                    }\n                }\n                return result;\n            }\n        },\n        toString(): string {\n            return that.asString(labels);\n        }\n    };\n    return that;\n}\n\n/**\n * Verify that the basis vector labels are strings and that there are the correct number.\n */\nfunction checkBasisLabels(name: string, labels: string[], n: number): void {\n    if (isDefined(labels)) {\n        if (isArray(labels)) {\n            if (labels.length !== n) {\n                throw new Error(`${name}.length must match the dimensionality of the vector space.`);\n            }\n            for (let i = 0; i < labels.length; i++) {\n                const label = labels[i];\n                if (!isString(label)) {\n                    throw new Error(`${name}[${i}] must be a string.`);\n                }\n            }\n        }\n        else {\n            throw new Error(`${name} must be a string[]`);\n        }\n    }\n}\n\nexport function algebra<T>(metric: number | number[] | Metric<T>, field: FieldAdapter<T>, labels: string[]): Algebra<T> {\n    mustBeDefined('metric', metric);\n    const n = dim(metric);\n\n    mustBeDefined('field', field);\n\n    checkBasisLabels('labels', labels, n);\n\n    const scalars: Multivector<T>[] = [];\n\n    /**\n     * A cache of the basis vectors.\n     */\n    const basisVectors: Multivector<T>[] = [];\n\n    const that: Algebra<T> = {\n        get ε() {\n            return scalars[2];\n        },\n        get field() {\n            return field;\n        },\n        get one() {\n            return scalars[1];\n        },\n        get zero() {\n            return scalars[0];\n        },\n        unit(index: number) {\n            mustBeInteger('index', index);\n            if (index >= 0 && index < n) {\n                return basisVectors[index];\n            }\n            else {\n                throw new Error(`index must be in range [0 ... ${n - 1})`);\n            }\n        },\n        get units(): Multivector<T>[] {\n            // For safety, return a copy of the cached array of basis vectors.\n            return basisVectors.map(x => x);\n        }\n    };\n    scalars[0] = getScalar(field.zero, that, metric, labels);\n    scalars[1] = getScalar(field.one, that, metric, labels);\n    scalars[2] = getScalar(field.ε, that, metric, labels);\n    for (let i = 0; i < n; i++) {\n        basisVectors[i] = getBasisVector(i, that, metric, labels);\n    }\n    return that;\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"58d3c6c304521b422ed800b6b254eb35f11c2ce2"},"/home/david/Development/geocas/src/checks/isArray.ts":{"path":"/home/david/Development/geocas/src/checks/isArray.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":66}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}}},"fnMap":{"0":{"name":"isArray","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":16}},"loc":{"start":{"line":4,"column":20},"end":{"line":6,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":802,"3":1},"f":{"0":802},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/checks/isArray.ts","sources":["/home/david/Development/geocas/src/checks/isArray.ts"],"names":[],"mappings":";;;AAAA,SAAgB,OAAO,CAAI,CAAM;IAC7B,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,gBAAgB,CAAC;AAClE,CAAC;AAFD,0BAEC","sourcesContent":["export function isArray<T>(x: any): x is T[] {\n    return Object.prototype.toString.call(x) === '[object Array]';\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ca09b9cd3b764bb3a8198cc51898a5583f5e9c94"},"/home/david/Development/geocas/src/checks/isDefined.ts":{"path":"/home/david/Development/geocas/src/checks/isDefined.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":40}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}}},"fnMap":{"0":{"name":"isDefined","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":24},"end":{"line":6,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":70,"3":1},"f":{"0":70},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/checks/isDefined.ts","sources":["/home/david/Development/geocas/src/checks/isDefined.ts"],"names":[],"mappings":";;;AAAA,SAAgB,SAAS,CAAC,GAAQ;IAC9B,OAAO,CAAC,OAAO,GAAG,KAAK,WAAW,CAAC,CAAC;AACxC,CAAC;AAFD,8BAEC","sourcesContent":["export function isDefined(arg: any): boolean {\n    return (typeof arg !== 'undefined');\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f14ecbaf0d4898141e69c294cd7102260727d84d"},"/home/david/Development/geocas/src/checks/isNumber.ts":{"path":"/home/david/Development/geocas/src/checks/isNumber.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":35}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}}},"fnMap":{"0":{"name":"isNumber","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":17}},"loc":{"start":{"line":4,"column":21},"end":{"line":6,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":395,"3":1},"f":{"0":395},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/checks/isNumber.ts","sources":["/home/david/Development/geocas/src/checks/isNumber.ts"],"names":[],"mappings":";;;AAAA,SAAgB,QAAQ,CAAC,CAAU;IAC/B,OAAO,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC;AACnC,CAAC;AAFD,4BAEC","sourcesContent":["export function isNumber(x: unknown): x is number {\n    return (typeof x === 'number');\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e6a4d947fd64a8be8461d710eb84595a30932356"},"/home/david/Development/geocas/src/checks/isString.ts":{"path":"/home/david/Development/geocas/src/checks/isString.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":35}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}}},"fnMap":{"0":{"name":"isString","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":17}},"loc":{"start":{"line":4,"column":21},"end":{"line":6,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":26,"3":1},"f":{"0":26},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/checks/isString.ts","sources":["/home/david/Development/geocas/src/checks/isString.ts"],"names":[],"mappings":";;;AAAA,SAAgB,QAAQ,CAAC,CAAU;IAC/B,OAAO,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC;AACnC,CAAC;AAFD,4BAEC","sourcesContent":["export function isString(s: unknown): boolean {\n    return (typeof s === 'string');\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9ae17cb04ac276fc9c3dd8c533940ec4f4c5d5be"},"/home/david/Development/geocas/src/checks/isUndefined.ts":{"path":"/home/david/Development/geocas/src/checks/isUndefined.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":40}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}}},"fnMap":{"0":{"name":"isUndefined","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":26},"end":{"line":6,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":588,"3":1},"f":{"0":588},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/checks/isUndefined.ts","sources":["/home/david/Development/geocas/src/checks/isUndefined.ts"],"names":[],"mappings":";;;AAAA,SAAgB,WAAW,CAAC,GAAY;IACtC,OAAO,CAAC,OAAO,GAAG,KAAK,WAAW,CAAC,CAAC;AACtC,CAAC;AAFD,kCAEC","sourcesContent":["export function isUndefined(arg: unknown): boolean {\n  return (typeof arg === 'undefined');\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"99d725f3a0c201808c3bb1101adbd249f3111050"},"/home/david/Development/geocas/src/checks/mustBeDefined.ts":{"path":"/home/david/Development/geocas/src/checks/mustBeDefined.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":48}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":52}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":32}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":103}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}}},"fnMap":{"0":{"name":"beDefined","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":18}},"loc":{"start":{"line":6,"column":21},"end":{"line":8,"column":1}},"line":6},"1":{"name":"mustBeDefined","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":22}},"loc":{"start":{"line":9,"column":52},"end":{"line":12,"column":1}},"line":9}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":58,"6":58,"7":1},"f":{"0":0,"1":58},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/checks/mustBeDefined.ts","sources":["/home/david/Development/geocas/src/checks/mustBeDefined.ts"],"names":[],"mappings":";;;AAAA,iDAAgD;AAChD,qDAAoD;AAEpD,SAAS,SAAS;IACd,OAAO,oBAAoB,CAAC;AAChC,CAAC;AAED,SAAgB,aAAa,CAAC,IAAY,EAAE,KAAU,EAAE,cAA6B;IACjF,IAAA,yBAAW,EAAC,IAAI,EAAE,IAAA,qBAAS,EAAC,KAAK,CAAC,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;IAC/D,OAAO,KAAK,CAAC;AACjB,CAAC;AAHD,sCAGC","sourcesContent":["import { isDefined } from '../checks/isDefined';\nimport { mustSatisfy } from '../checks/mustSatisfy';\n\nfunction beDefined() {\n    return \"not be 'undefined'\";\n}\n\nexport function mustBeDefined(name: string, value: any, contextBuilder?: () => string): any {\n    mustSatisfy(name, isDefined(value), beDefined, contextBuilder);\n    return value;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8e4f909f4826b0116b5746513e3b5fbf71dd81bf"},"/home/david/Development/geocas/src/checks/mustSatisfy.ts":{"path":"/home/david/Development/geocas/src/checks/mustSatisfy.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":8,"column":4},"end":{"line":12,"column":5}},"3":{"start":{"line":9,"column":22},"end":{"line":9,"column":82}},"4":{"start":{"line":10,"column":22},"end":{"line":10,"column":69}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":67}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}}},"fnMap":{"0":{"name":"mustSatisfy","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":20}},"loc":{"start":{"line":7,"column":70},"end":{"line":13,"column":1}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":12,"column":5}},{"start":{"line":8,"column":4},"end":{"line":12,"column":5}}],"line":8},"1":{"loc":{"start":{"line":9,"column":22},"end":{"line":9,"column":82}},"type":"cond-expr","locations":[{"start":{"line":9,"column":39},"end":{"line":9,"column":55}},{"start":{"line":9,"column":58},"end":{"line":9,"column":82}}],"line":9},"2":{"loc":{"start":{"line":10,"column":22},"end":{"line":10,"column":69}},"type":"cond-expr","locations":[{"start":{"line":10,"column":39},"end":{"line":10,"column":64}},{"start":{"line":10,"column":67},"end":{"line":10,"column":69}}],"line":10}},"s":{"0":1,"1":1,"2":123,"3":0,"4":0,"5":0,"6":1},"f":{"0":123},"b":{"0":[0,123],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/checks/mustSatisfy.ts","sources":["/home/david/Development/geocas/src/checks/mustSatisfy.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,SAAgB,WAAW,CAAC,IAAY,EAAE,SAAkB,EAAE,cAA4B,EAAE,cAA6B;IACrH,IAAI,CAAC,SAAS,EAAE;QACZ,IAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,wBAAwB,CAAC;QAC7E,IAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC,MAAM,GAAG,cAAc,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAChE,MAAM,IAAI,KAAK,CAAC,IAAI,GAAG,QAAQ,GAAG,OAAO,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;KAC9D;AACL,CAAC;AAND,kCAMC","sourcesContent":["/**\n * name 'must' message ['in' context].\n */\nexport function mustSatisfy(name: string, condition: boolean, messageBuilder: () => string, contextBuilder?: () => string) {\n    if (!condition) {\n        const message = messageBuilder ? messageBuilder() : \"satisfy some condition\";\n        const context = contextBuilder ? \" in \" + contextBuilder() : \"\";\n        throw new Error(name + \" must \" + message + context + \".\");\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"414446d12a8d67e884f93af0101af408cfd2542b"},"/home/david/Development/geocas/src/checks/mustBeInteger.ts":{"path":"/home/david/Development/geocas/src/checks/mustBeInteger.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":48}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":52}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":27}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":105}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}}},"fnMap":{"0":{"name":"beAnInteger","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":20}},"loc":{"start":{"line":6,"column":23},"end":{"line":8,"column":1}},"line":6},"1":{"name":"mustBeInteger","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":22}},"loc":{"start":{"line":9,"column":52},"end":{"line":12,"column":1}},"line":9}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":36,"6":36,"7":1},"f":{"0":0,"1":36},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/checks/mustBeInteger.ts","sources":["/home/david/Development/geocas/src/checks/mustBeInteger.ts"],"names":[],"mappings":";;;AAAA,iDAAgD;AAChD,qDAAoD;AAEpD,SAAS,WAAW;IAChB,OAAO,eAAe,CAAC;AAC3B,CAAC;AAED,SAAgB,aAAa,CAAC,IAAY,EAAE,KAAa,EAAE,cAA6B;IACpF,IAAA,yBAAW,EAAC,IAAI,EAAE,IAAA,qBAAS,EAAC,KAAK,CAAC,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;IACjE,OAAO,KAAK,CAAC;AACjB,CAAC;AAHD,sCAGC","sourcesContent":["import { isInteger } from '../checks/isInteger';\nimport { mustSatisfy } from '../checks/mustSatisfy';\n\nfunction beAnInteger() {\n    return \"be an integer\";\n}\n\nexport function mustBeInteger(name: string, value: number, contextBuilder?: () => string): number {\n    mustSatisfy(name, isInteger(value), beAnInteger, contextBuilder);\n    return value;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2e6d236ea0275921b095e6b9cec6c9441eb9085c"},"/home/david/Development/geocas/src/checks/isInteger.ts":{"path":"/home/david/Development/geocas/src/checks/isInteger.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":46}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":54}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}}},"fnMap":{"0":{"name":"isInteger","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":18}},"loc":{"start":{"line":5,"column":22},"end":{"line":9,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":53}},"type":"binary-expr","locations":[{"start":{"line":8,"column":11},"end":{"line":8,"column":38}},{"start":{"line":8,"column":42},"end":{"line":8,"column":53}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":36,"4":1},"f":{"0":36},"b":{"0":[36,36]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/checks/isInteger.ts","sources":["/home/david/Development/geocas/src/checks/isInteger.ts"],"names":[],"mappings":";;;AAAA,+CAA8C;AAE9C,SAAgB,SAAS,CAAC,CAAU;IAChC,iEAAiE;IACjE,sDAAsD;IACtD,OAAO,IAAA,mBAAQ,EAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACtC,CAAC;AAJD,8BAIC","sourcesContent":["import { isNumber } from '../checks/isNumber';\n\nexport function isInteger(x: unknown): x is number {\n    // % coerces its operand to numbers so a typeof test is required.\n    // Not ethat ECMAScript 6 provides Number.isInteger().\n    return isNumber(x) && x % 1 === 0;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0d3599dfc3a7a61ead7854f9c260f2931e70ec77"},"/home/david/Development/geocas/src/mother/Blade.ts":{"path":"/home/david/Development/geocas/src/mother/Blade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":32},"end":{"line":6,"column":68}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":44}},"6":{"start":{"line":11,"column":13},"end":{"line":11,"column":14}},"7":{"start":{"line":13,"column":15},"end":{"line":97,"column":5}},"8":{"start":{"line":15,"column":12},"end":{"line":15,"column":21}},"9":{"start":{"line":18,"column":12},"end":{"line":18,"column":26}},"10":{"start":{"line":21,"column":12},"end":{"line":21,"column":58}},"11":{"start":{"line":24,"column":12},"end":{"line":29,"column":13}},"12":{"start":{"line":25,"column":16},"end":{"line":25,"column":60}},"13":{"start":{"line":28,"column":16},"end":{"line":28,"column":79}},"14":{"start":{"line":33,"column":12},"end":{"line":41,"column":13}},"15":{"start":{"line":34,"column":16},"end":{"line":34,"column":60}},"16":{"start":{"line":37,"column":29},"end":{"line":37,"column":43}},"17":{"start":{"line":38,"column":27},"end":{"line":38,"column":96}},"18":{"start":{"line":39,"column":31},"end":{"line":39,"column":62}},"19":{"start":{"line":40,"column":16},"end":{"line":40,"column":91}},"20":{"start":{"line":44,"column":12},"end":{"line":44,"column":47}},"21":{"start":{"line":47,"column":20},"end":{"line":47,"column":32}},"22":{"start":{"line":48,"column":23},"end":{"line":48,"column":70}},"23":{"start":{"line":49,"column":12},"end":{"line":49,"column":78}},"24":{"start":{"line":52,"column":20},"end":{"line":52,"column":32}},"25":{"start":{"line":53,"column":23},"end":{"line":53,"column":56}},"26":{"start":{"line":54,"column":12},"end":{"line":54,"column":78}},"27":{"start":{"line":57,"column":20},"end":{"line":57,"column":32}},"28":{"start":{"line":58,"column":23},"end":{"line":58,"column":70}},"29":{"start":{"line":59,"column":12},"end":{"line":59,"column":78}},"30":{"start":{"line":62,"column":12},"end":{"line":62,"column":56}},"31":{"start":{"line":65,"column":28},"end":{"line":65,"column":30}},"32":{"start":{"line":66,"column":20},"end":{"line":66,"column":21}},"33":{"start":{"line":67,"column":20},"end":{"line":67,"column":21}},"34":{"start":{"line":68,"column":12},"end":{"line":81,"column":13}},"35":{"start":{"line":69,"column":16},"end":{"line":78,"column":17}},"36":{"start":{"line":70,"column":20},"end":{"line":71,"column":43}},"37":{"start":{"line":71,"column":24},"end":{"line":71,"column":43}},"38":{"start":{"line":72,"column":20},"end":{"line":77,"column":21}},"39":{"start":{"line":73,"column":24},"end":{"line":73,"column":56}},"40":{"start":{"line":76,"column":24},"end":{"line":76,"column":61}},"41":{"start":{"line":79,"column":16},"end":{"line":79,"column":24}},"42":{"start":{"line":80,"column":16},"end":{"line":80,"column":20}},"43":{"start":{"line":82,"column":12},"end":{"line":92,"column":13}},"44":{"start":{"line":83,"column":16},"end":{"line":83,"column":48}},"45":{"start":{"line":86,"column":16},"end":{"line":91,"column":17}},"46":{"start":{"line":87,"column":20},"end":{"line":87,"column":37}},"47":{"start":{"line":90,"column":20},"end":{"line":90,"column":72}},"48":{"start":{"line":95,"column":12},"end":{"line":95,"column":41}},"49":{"start":{"line":98,"column":4},"end":{"line":98,"column":16}},"50":{"start":{"line":100,"column":0},"end":{"line":100,"column":22}}},"fnMap":{"0":{"name":"blade","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":14}},"loc":{"start":{"line":12,"column":35},"end":{"line":99,"column":1}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":8},"end":{"line":14,"column":9}},"loc":{"start":{"line":14,"column":21},"end":{"line":16,"column":9}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":8},"end":{"line":17,"column":9}},"loc":{"start":{"line":17,"column":21},"end":{"line":19,"column":9}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":17},"end":{"line":20,"column":18}},"loc":{"start":{"line":20,"column":29},"end":{"line":22,"column":9}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":18},"end":{"line":23,"column":19}},"loc":{"start":{"line":23,"column":37},"end":{"line":30,"column":9}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":31,"column":19},"end":{"line":31,"column":20}},"loc":{"start":{"line":31,"column":34},"end":{"line":42,"column":9}},"line":31},"6":{"name":"(anonymous_6)","decl":{"start":{"line":43,"column":15},"end":{"line":43,"column":16}},"loc":{"start":{"line":43,"column":27},"end":{"line":45,"column":9}},"line":43},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":17},"end":{"line":46,"column":18}},"loc":{"start":{"line":46,"column":29},"end":{"line":50,"column":9}},"line":46},"8":{"name":"(anonymous_8)","decl":{"start":{"line":51,"column":24},"end":{"line":51,"column":25}},"loc":{"start":{"line":51,"column":36},"end":{"line":55,"column":9}},"line":51},"9":{"name":"(anonymous_9)","decl":{"start":{"line":56,"column":27},"end":{"line":56,"column":28}},"loc":{"start":{"line":56,"column":39},"end":{"line":60,"column":9}},"line":56},"10":{"name":"(anonymous_10)","decl":{"start":{"line":61,"column":14},"end":{"line":61,"column":15}},"loc":{"start":{"line":61,"column":26},"end":{"line":63,"column":9}},"line":61},"11":{"name":"(anonymous_11)","decl":{"start":{"line":64,"column":18},"end":{"line":64,"column":19}},"loc":{"start":{"line":64,"column":35},"end":{"line":93,"column":9}},"line":64},"12":{"name":"(anonymous_12)","decl":{"start":{"line":94,"column":18},"end":{"line":94,"column":19}},"loc":{"start":{"line":94,"column":30},"end":{"line":96,"column":9}},"line":94}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":12},"end":{"line":29,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":29,"column":13}},{"start":{"line":24,"column":12},"end":{"line":29,"column":13}}],"line":24},"1":{"loc":{"start":{"line":33,"column":12},"end":{"line":41,"column":13}},"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":41,"column":13}},{"start":{"line":33,"column":12},"end":{"line":41,"column":13}}],"line":33},"2":{"loc":{"start":{"line":40,"column":37},"end":{"line":40,"column":80}},"type":"cond-expr","locations":[{"start":{"line":40,"column":48},"end":{"line":40,"column":56}},{"start":{"line":40,"column":59},"end":{"line":40,"column":80}}],"line":40},"3":{"loc":{"start":{"line":49,"column":28},"end":{"line":49,"column":67}},"type":"cond-expr","locations":[{"start":{"line":49,"column":39},"end":{"line":49,"column":45}},{"start":{"line":49,"column":48},"end":{"line":49,"column":67}}],"line":49},"4":{"loc":{"start":{"line":54,"column":28},"end":{"line":54,"column":67}},"type":"cond-expr","locations":[{"start":{"line":54,"column":39},"end":{"line":54,"column":45}},{"start":{"line":54,"column":48},"end":{"line":54,"column":67}}],"line":54},"5":{"loc":{"start":{"line":59,"column":28},"end":{"line":59,"column":67}},"type":"cond-expr","locations":[{"start":{"line":59,"column":39},"end":{"line":59,"column":45}},{"start":{"line":59,"column":48},"end":{"line":59,"column":67}}],"line":59},"6":{"loc":{"start":{"line":69,"column":16},"end":{"line":78,"column":17}},"type":"if","locations":[{"start":{"line":69,"column":16},"end":{"line":78,"column":17}},{"start":{"line":69,"column":16},"end":{"line":78,"column":17}}],"line":69},"7":{"loc":{"start":{"line":70,"column":20},"end":{"line":71,"column":43}},"type":"if","locations":[{"start":{"line":70,"column":20},"end":{"line":71,"column":43}},{"start":{"line":70,"column":20},"end":{"line":71,"column":43}}],"line":70},"8":{"loc":{"start":{"line":72,"column":20},"end":{"line":77,"column":21}},"type":"if","locations":[{"start":{"line":72,"column":20},"end":{"line":77,"column":21}},{"start":{"line":72,"column":20},"end":{"line":77,"column":21}}],"line":72},"9":{"loc":{"start":{"line":72,"column":24},"end":{"line":72,"column":151}},"type":"binary-expr","locations":[{"start":{"line":72,"column":24},"end":{"line":72,"column":61}},{"start":{"line":72,"column":66},"end":{"line":72,"column":80}},{"start":{"line":72,"column":86},"end":{"line":72,"column":102}},{"start":{"line":72,"column":108},"end":{"line":72,"column":124}},{"start":{"line":72,"column":130},"end":{"line":72,"column":150}}],"line":72},"10":{"loc":{"start":{"line":82,"column":12},"end":{"line":92,"column":13}},"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":92,"column":13}},{"start":{"line":82,"column":12},"end":{"line":92,"column":13}}],"line":82},"11":{"loc":{"start":{"line":86,"column":16},"end":{"line":91,"column":17}},"type":"if","locations":[{"start":{"line":86,"column":16},"end":{"line":91,"column":17}},{"start":{"line":86,"column":16},"end":{"line":91,"column":17}}],"line":86}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":759,"8":3336,"9":1678,"10":64,"11":0,"12":0,"13":0,"14":32,"15":14,"16":18,"17":18,"18":18,"19":18,"20":279,"21":58,"22":58,"23":58,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":28,"31":4,"32":4,"33":4,"34":4,"35":5,"36":4,"37":1,"38":4,"39":0,"40":4,"41":5,"42":5,"43":4,"44":1,"45":3,"46":3,"47":0,"48":0,"49":759,"50":1},"f":{"0":759,"1":3336,"2":1678,"3":64,"4":0,"5":32,"6":279,"7":58,"8":0,"9":0,"10":28,"11":4,"12":0},"b":{"0":[0,0],"1":[14,18],"2":[16,2],"3":[53,5],"4":[0,0],"5":[0,0],"6":[4,1],"7":[1,3],"8":[0,4],"9":[4,4,4,4,4],"10":[1,3],"11":[3,0]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/Blade.ts","sources":["/home/david/Development/geocas/src/mother/Blade.ts"],"names":[],"mappings":";;;AAAA,qDAAoD;AACpD,uCAAsC;AACtC,qEAAoE;AAEpE,6CAA4C;AAG5C;;GAEG;AACH,IAAM,MAAM,GAAG,CAAC,CAAC;AAEjB,SAAgB,KAAK,CAAI,CAAS,EAAE,MAAS,EAAE,OAAwB;IACnE,IAAM,IAAI,GAAa;QACnB,IAAI,MAAM;YACN,OAAO,CAAC,CAAC;QACb,CAAC;QACD,IAAI,MAAM;YACN,OAAO,MAAM,CAAC;QAClB,CAAC;QACD,OAAO,EAAP;YACI,OAAO,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;QAClD,CAAC;QACD,QAAQ,EAAR,UAAS,GAAa,EAAE,EAAiC;YACrD,IAAI,CAAC,KAAK,GAAG,CAAC,MAAM,EAAE;gBAClB,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;aAC/C;iBACI;gBACD,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;aAClE;QACL,CAAC;QACD,SAAS,EAAT,UAAU,GAAa;YACnB,8DAA8D;YAC9D,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE;gBAChB,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;aAC/C;iBACI;gBACD,IAAM,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;gBAC9B,IAAM,IAAI,GAAG,IAAA,iDAAuB,EAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpD,IAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;gBACjD,OAAO,KAAK,CAAC,MAAM,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;aAC9E;QACL,CAAC;QACD,KAAK,EAAL;YACI,OAAO,IAAA,mBAAQ,EAAC,CAAC,CAAC,CAAC;QACvB,CAAC;QACD,OAAO,EAAP;YACI,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACvB,IAAM,IAAI,GAAG,IAAA,yBAAW,EAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1C,OAAO,KAAK,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;QACtE,CAAC;QACD,cAAc,EAAd;YACI,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACvB,IAAM,IAAI,GAAG,IAAA,yBAAW,EAAC,CAAC,CAAC,CAAC;YAC5B,OAAO,KAAK,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;QACtE,CAAC;QACD,iBAAiB,EAAjB;YACI,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACvB,IAAM,IAAI,GAAG,IAAA,yBAAW,EAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1C,OAAO,KAAK,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;QACtE,CAAC;QACD,IAAI,EAAJ;YACI,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,CAAC;QACD,QAAQ,EAAR,UAAS,KAAgB;YACrB,IAAI,SAAS,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,OAAO,CAAC,KAAK,CAAC,EAAE;gBACZ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;oBACf,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC;wBAAE,SAAS,IAAI,KAAK,CAAC;oBAC7C,IAAI,IAAA,yBAAW,EAAC,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE;wBAC9G,SAAS,GAAG,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC;qBACnC;yBACI;wBACD,SAAS,GAAG,SAAS,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBACxC;iBACJ;gBACD,CAAC,KAAK,CAAC,CAAC;gBACR,CAAC,EAAE,CAAC;aACP;YACD,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;aACnC;iBACI;gBACD,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;oBACvB,OAAO,SAAS,CAAC;iBACpB;qBACI;oBACD,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,KAAK,GAAG,SAAS,CAAC;iBACvD;aACJ;QACL,CAAC;QACD,QAAQ,EAAR;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QACjC,CAAC;KACJ,CAAC;IACF,OAAO,IAAI,CAAC;AAChB,CAAC;AAtFD,sBAsFC","sourcesContent":["import { isUndefined } from '../checks/isUndefined';\nimport { bitCount } from './bitCount';\nimport { canonicalReorderingSign } from './canonicalReorderingSign';\nimport { FieldAdapter } from './FieldAdapter';\nimport { minusOnePow } from './minusOnePow';\nimport { Blade, Metric } from './Multivector';\n\n/**\n * The bitmap representation of a scalar.\n */\nconst SCALAR = 0;\n\nexport function blade<T>(b: number, weight: T, adapter: FieldAdapter<T>) {\n    const that: Blade<T> = {\n        get bitmap(): number {\n            return b;\n        },\n        get weight(): T {\n            return weight;\n        },\n        __neg__(): Blade<T> {\n            return blade(b, adapter.neg(weight), adapter);\n        },\n        __vbar__(rhs: Blade<T>, _m: number | number[] | Metric<T>): Blade<T> {\n            if (b !== rhs.bitmap) {\n                return blade(SCALAR, adapter.zero, adapter);\n            }\n            else {\n                return blade(SCALAR, adapter.mul(weight, rhs.weight), adapter);\n            }\n        },\n        __wedge__(rhs: Blade<T>): Blade<T> {\n            // If there are any vectors in common then the result is zero.\n            if (b & rhs.bitmap) {\n                return blade(SCALAR, adapter.zero, adapter);\n            }\n            else {\n                const bitmap = b ^ rhs.bitmap;\n                const sign = canonicalReorderingSign(b, rhs.bitmap);\n                const newScale = adapter.mul(weight, rhs.weight);\n                return blade(bitmap, sign > 0 ? newScale : adapter.neg(newScale), adapter);\n            }\n        },\n        grade(): number {\n            return bitCount(b);\n        },\n        reverse(): Blade<T> {\n            const x = that.grade();\n            const sign = minusOnePow(x * (x - 1) / 2);\n            return blade(b, sign > 0 ? weight : adapter.neg(weight), adapter);\n        },\n        gradeInversion(): Blade<T> {\n            const x = that.grade();\n            const sign = minusOnePow(x);\n            return blade(b, sign > 0 ? weight : adapter.neg(weight), adapter);\n        },\n        cliffordConjugate(): Blade<T> {\n            const x = that.grade();\n            const sign = minusOnePow(x * (x + 1) / 2);\n            return blade(b, sign > 0 ? weight : adapter.neg(weight), adapter);\n        },\n        zero(): Blade<T> {\n            return blade(SCALAR, adapter.zero, adapter);\n        },\n        asString(names?: string[]): string {\n            let bladePart = \"\";\n            let i = 1;\n            let x = b;\n            while (x !== 0) {\n                if ((x & 1) !== 0) {\n                    if (bladePart.length > 0) bladePart += \" ^ \";\n                    if (isUndefined(names) || (names === null) || (names === void 0) || (i > names.length) || (names[i - 1] == null)) {\n                        bladePart = bladePart + \"e\" + i;\n                    }\n                    else {\n                        bladePart = bladePart + names[i - 1];\n                    }\n                }\n                x >>= 1;\n                i++;\n            }\n            if (bladePart.length === 0) {\n                return adapter.asString(weight);\n            }\n            else {\n                if (adapter.isOne(weight)) {\n                    return bladePart;\n                }\n                else {\n                    return adapter.asString(weight) + \" * \" + bladePart;\n                }\n            }\n        },\n        toString(): string {\n            return that.asString(void 0);\n        }\n    };\n    return that;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d61961e8b89866111acb72af293c35fee9142bb3"},"/home/david/Development/geocas/src/mother/bitCount.ts":{"path":"/home/david/Development/geocas/src/mother/bitCount.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":6,"column":4},"end":{"line":6,"column":36}},"3":{"start":{"line":7,"column":4},"end":{"line":7,"column":51}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":36}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":21}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":22}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":26}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}}},"fnMap":{"0":{"name":"bitCount","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":17}},"loc":{"start":{"line":4,"column":21},"end":{"line":12,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":547,"3":547,"4":547,"5":547,"6":547,"7":547,"8":1},"f":{"0":547},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/bitCount.ts","sources":["/home/david/Development/geocas/src/mother/bitCount.ts"],"names":[],"mappings":";;;AAAA,SAAgB,QAAQ,CAAC,CAAS;IAC9B,qDAAqD;IACrD,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;IAChC,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;IAC/C,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;IAChC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IAClB,OAAO,CAAC,GAAG,UAAU,CAAC;AAC1B,CAAC;AARD,4BAQC","sourcesContent":["export function bitCount(i: number): number {\n    // Note that unsigned shifting (>>>) is not required.\n    i = i - ((i >> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >> 2) & 0x33333333);\n    i = (i + (i >> 4)) & 0x0F0F0F0F;\n    i = i + (i >> 8);\n    i = i + (i >> 16);\n    return i & 0x0000003F;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cac9fa76616d5198ac95afebb9a2a2baba2ebb2a"},"/home/david/Development/geocas/src/mother/canonicalReorderingSign.ts":{"path":"/home/david/Development/geocas/src/mother/canonicalReorderingSign.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":38}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":12}},"4":{"start":{"line":13,"column":14},"end":{"line":13,"column":15}},"5":{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":47}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":16}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":38}},"9":{"start":{"line":23,"column":0},"end":{"line":23,"column":58}}},"fnMap":{"0":{"name":"canonicalReorderingSign","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":32}},"loc":{"start":{"line":9,"column":39},"end":{"line":22,"column":1}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":11},"end":{"line":21,"column":37}},"type":"cond-expr","locations":[{"start":{"line":21,"column":31},"end":{"line":21,"column":32}},{"start":{"line":21,"column":35},"end":{"line":21,"column":37}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":266,"4":266,"5":266,"6":216,"7":216,"8":266,"9":1},"f":{"0":266},"b":{"0":[200,66]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/canonicalReorderingSign.ts","sources":["/home/david/Development/geocas/src/mother/canonicalReorderingSign.ts"],"names":[],"mappings":";;;AAAA,uCAAsC;AACtC;;;GAGG;AACH,SAAgB,uBAAuB,CAAC,CAAS,EAAE,CAAS;IACxD,qDAAqD;IACrD,oCAAoC;IACpC,CAAC,KAAK,CAAC,CAAC;IACR,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,OAAO,CAAC,KAAK,CAAC,EAAE;QACZ,GAAG,IAAI,IAAA,mBAAQ,EAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,CAAC,KAAK,CAAC,CAAC;KACX;IAED,oCAAoC;IACpC,mCAAmC;IACnC,+DAA+D;IAC/D,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC;AAdD,0DAcC","sourcesContent":["import { bitCount } from './bitCount';\n/**\n * Returns sign change due to putting the blade blades represented\n * by <code>a<code> and <code>b</code> into canonical order.\n */\nexport function canonicalReorderingSign(a: number, b: number): number {\n    // Count the number of basis vector flips required to\n    // get a and b into canonical order.\n    a >>= 1;\n    let sum = 0;\n    while (a !== 0) {\n        sum += bitCount(a & b);\n        a >>= 1;\n    }\n\n    // even number of flips -> return +1\n    // odd number of flips -> return -1\n    // The test (sum & 1) === 0 evaluates to true for even numbers.\n    return ((sum & 1) === 0) ? 1 : -1;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3390f86d8397287021838e771316fe22542d6505"},"/home/david/Development/geocas/src/mother/minusOnePow.ts":{"path":"/home/david/Development/geocas/src/mother/minusOnePow.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":36}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}}},"fnMap":{"0":{"name":"minusOnePow","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":20}},"loc":{"start":{"line":7,"column":24},"end":{"line":9,"column":1}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":35}},"type":"cond-expr","locations":[{"start":{"line":8,"column":29},"end":{"line":8,"column":30}},{"start":{"line":8,"column":33},"end":{"line":8,"column":35}}],"line":8}},"s":{"0":1,"1":1,"2":58,"3":1},"f":{"0":58},"b":{"0":[53,5]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/minusOnePow.ts","sources":["/home/david/Development/geocas/src/mother/minusOnePow.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,SAAgB,WAAW,CAAC,CAAS;IACjC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC;AAFD,kCAEC","sourcesContent":["/**\n * pow(-1, i), i.e. (-1) raised to the i'th power.\n */\nexport function minusOnePow(i: number): number {\n    return ((i & 1) === 0) ? 1 : -1;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8fd65b4129010f31f8886de715217e5570d0222b"},"/home/david/Development/geocas/src/mother/gpE.ts":{"path":"/home/david/Development/geocas/src/mother/gpE.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"2":{"start":{"line":4,"column":14},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":32},"end":{"line":5,"column":68}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":36}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":89}},"6":{"start":{"line":9,"column":16},"end":{"line":9,"column":47}},"7":{"start":{"line":10,"column":4},"end":{"line":15,"column":5}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":58}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":71}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":18}}},"fnMap":{"0":{"name":"gpE","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":12}},"loc":{"start":{"line":6,"column":28},"end":{"line":16,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":15,"column":5}},{"start":{"line":10,"column":4},"end":{"line":15,"column":5}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":248,"5":248,"6":248,"7":248,"8":184,"9":64,"10":1},"f":{"0":248},"b":{"0":[184,64]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/gpE.ts","sources":["/home/david/Development/geocas/src/mother/gpE.ts"],"names":[],"mappings":";;;AAAA,iCAAgC;AAChC,qEAAoE;AAIpE,SAAgB,GAAG,CAAI,CAAW,EAAE,CAAW,EAAE,OAAwB;IACrE,IAAM,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;IACnC,IAAM,IAAI,GAAG,IAAA,iDAAuB,EAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;IACzD,IAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;IAC9C,IAAI,IAAI,GAAG,CAAC,EAAE;QACV,OAAO,IAAA,aAAK,EAAI,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;KAC3C;SACI;QACD,OAAO,IAAA,aAAK,EAAI,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;KACxD;AACL,CAAC;AAVD,kBAUC","sourcesContent":["import { blade } from './Blade';\nimport { canonicalReorderingSign } from './canonicalReorderingSign';\nimport { FieldAdapter } from './FieldAdapter';\nimport { Blade } from './Multivector';\n\nexport function gpE<T>(a: Blade<T>, b: Blade<T>, adapter: FieldAdapter<T>): Blade<T> {\n    const bitmap = a.bitmap ^ b.bitmap;\n    const sign = canonicalReorderingSign(a.bitmap, b.bitmap);\n    const scale = adapter.mul(a.weight, b.weight);\n    if (sign > 0) {\n        return blade<T>(bitmap, scale, adapter);\n    }\n    else {\n        return blade<T>(bitmap, adapter.neg(scale), adapter);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c76bf306f20bc28f3896b8a9528f89a9a6d9a550"},"/home/david/Development/geocas/src/mother/gpG.ts":{"path":"/home/david/Development/geocas/src/mother/gpG.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"2":{"start":{"line":4,"column":12},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":38}},"4":{"start":{"line":7,"column":12},"end":{"line":7,"column":29}},"5":{"start":{"line":8,"column":12},"end":{"line":8,"column":29}},"6":{"start":{"line":9,"column":12},"end":{"line":9,"column":30}},"7":{"start":{"line":10,"column":14},"end":{"line":10,"column":16}},"8":{"start":{"line":11,"column":4},"end":{"line":15,"column":5}},"9":{"start":{"line":11,"column":17},"end":{"line":11,"column":18}},"10":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"11":{"start":{"line":12,"column":21},"end":{"line":12,"column":22}},"12":{"start":{"line":13,"column":12},"end":{"line":13,"column":61}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":67}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":18}}},"fnMap":{"0":{"name":"gpG","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":12}},"loc":{"start":{"line":6,"column":31},"end":{"line":17,"column":1}},"line":6}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/gpG.ts","sources":["/home/david/Development/geocas/src/mother/gpG.ts"],"names":[],"mappings":";;;AACA,6BAA4B;AAE5B,uCAAsC;AAEtC,SAAgB,GAAG,CAAI,CAAW,EAAE,CAAW,EAAE,CAAY,EAAE,OAAwB;IAEnF,IAAM,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAM,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAM,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,CAAC;IAE7B,IAAM,GAAG,GAAe,EAAE,CAAC;IAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,GAAG,CAAC,IAAI,CAAC,IAAA,SAAG,EAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;SACzC;KACJ;IAED,OAAO,CAAC,CAAC,aAAa,CAAC,IAAA,mBAAQ,EAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;AACnD,CAAC;AAfD,kBAeC","sourcesContent":["import { FieldAdapter } from './FieldAdapter';\nimport { gpL } from './gpL';\nimport { Blade, Metric } from './Multivector';\nimport { simplify } from './simplify';\n\nexport function gpG<T>(a: Blade<T>, b: Blade<T>, m: Metric<T>, adapter: FieldAdapter<T>): Blade<T>[] {\n\n    const A = m.toEigenBasis(a);\n    const B = m.toEigenBasis(b);\n    const M = m.getEigenMetric();\n\n    const rez: Blade<T>[] = [];\n\n    for (let i = 0; i < A.length; i++) {\n        for (let k = 0; k < B.length; k++) {\n            rez.push(gpL(A[i], B[k], M, adapter));\n        }\n    }\n\n    return m.toMetricBasis(simplify(rez, adapter));\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"96d2d20cdbf4c878ae00fce37521e72055414f9f"},"/home/david/Development/geocas/src/mother/gpL.ts":{"path":"/home/david/Development/geocas/src/mother/gpL.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"2":{"start":{"line":4,"column":14},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":12},"end":{"line":5,"column":28}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":44}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":28}},"6":{"start":{"line":10,"column":17},"end":{"line":10,"column":36}},"7":{"start":{"line":12,"column":12},"end":{"line":12,"column":13}},"8":{"start":{"line":13,"column":4},"end":{"line":19,"column":5}},"9":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"10":{"start":{"line":15,"column":12},"end":{"line":15,"column":55}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":12}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":29}},"13":{"start":{"line":20,"column":4},"end":{"line":20,"column":60}},"14":{"start":{"line":22,"column":0},"end":{"line":22,"column":18}}},"fnMap":{"0":{"name":"gpL","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":12}},"loc":{"start":{"line":6,"column":31},"end":{"line":21,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":183,"5":183,"6":183,"7":183,"8":183,"9":188,"10":102,"11":188,"12":188,"13":183,"14":1},"f":{"0":183},"b":{"0":[102,86]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/gpL.ts","sources":["/home/david/Development/geocas/src/mother/gpL.ts"],"names":[],"mappings":";;;AAAA,iCAAgC;AAEhC,6BAA4B;AAG5B,SAAgB,GAAG,CAAI,CAAW,EAAE,CAAW,EAAE,CAAW,EAAE,OAAwB;IAElF,IAAM,IAAI,GAAG,IAAA,SAAG,EAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;IAChC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAEzB,oDAAoD;IACpD,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;IAEjC,4CAA4C;IAC5C,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,OAAO,MAAM,KAAK,CAAC,EAAE;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;YACpB,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9C;QACD,CAAC,EAAE,CAAC;QACJ,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;KACxB;IACD,OAAO,IAAA,aAAK,EAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AAC/C,CAAC;AAlBD,kBAkBC","sourcesContent":["import { blade } from './Blade';\nimport { FieldAdapter } from './FieldAdapter';\nimport { gpE } from './gpE';\nimport { Blade } from './Multivector';\n\nexport function gpL<T>(a: Blade<T>, b: Blade<T>, m: number[], adapter: FieldAdapter<T>): Blade<T> {\n\n    const temp = gpE(a, b, adapter);\n    let weight = temp.weight;\n\n    // compute the meet (bitmap of annihilated vectors):\n    let bitmap = a.bitmap & b.bitmap;\n\n    // change the scale according to the metric.\n    let i = 0;\n    while (bitmap !== 0) {\n        if ((bitmap & 1) !== 0) {\n            weight = adapter.mulByNumber(weight, m[i]);\n        }\n        i++;\n        bitmap = bitmap >> 1;\n    }\n    return blade(temp.bitmap, weight, adapter);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"94b3074b65b51ecb5b6e06a61662501781cef67c"},"/home/david/Development/geocas/src/mother/simplify.ts":{"path":"/home/david/Development/geocas/src/mother/simplify.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":14},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":48}},"4":{"start":{"line":8,"column":14},"end":{"line":8,"column":16}},"5":{"start":{"line":9,"column":4},"end":{"line":26,"column":5}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":18}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":25}},"8":{"start":{"line":11,"column":23},"end":{"line":11,"column":36}},"9":{"start":{"line":12,"column":8},"end":{"line":25,"column":9}},"10":{"start":{"line":13,"column":24},"end":{"line":13,"column":62}},"11":{"start":{"line":14,"column":12},"end":{"line":19,"column":13}},"12":{"start":{"line":15,"column":16},"end":{"line":15,"column":37}},"13":{"start":{"line":18,"column":16},"end":{"line":18,"column":77}},"14":{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},"15":{"start":{"line":23,"column":16},"end":{"line":23,"column":34}},"16":{"start":{"line":27,"column":4},"end":{"line":27,"column":51}},"17":{"start":{"line":29,"column":0},"end":{"line":29,"column":28}}},"fnMap":{"0":{"name":"simplify","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":17}},"loc":{"start":{"line":7,"column":35},"end":{"line":28,"column":1}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":25,"column":9}},{"start":{"line":12,"column":8},"end":{"line":25,"column":9}}],"line":12},"1":{"loc":{"start":{"line":14,"column":12},"end":{"line":19,"column":13}},"type":"if","locations":[{"start":{"line":14,"column":12},"end":{"line":19,"column":13}},{"start":{"line":14,"column":12},"end":{"line":19,"column":13}}],"line":14},"2":{"loc":{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},{"start":{"line":22,"column":12},"end":{"line":24,"column":13}}],"line":22}},"s":{"0":1,"1":1,"2":1,"3":1,"4":339,"5":339,"6":339,"7":493,"8":493,"9":493,"10":67,"11":67,"12":36,"13":31,"14":426,"15":383,"16":339,"17":1},"f":{"0":339},"b":{"0":[67,426],"1":[36,31],"2":[383,43]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/simplify.ts","sources":["/home/david/Development/geocas/src/mother/simplify.ts"],"names":[],"mappings":";;;AAAA,iCAAgC;AAChC,iDAAgD;AAIhD,iFAAiF;AACjF,SAAgB,QAAQ,CAAI,MAAkB,EAAE,OAAwB;IACpE,IAAM,GAAG,GAAmC,EAAE,CAAC;IAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,IAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACpB,IAAM,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC/B,IAAI,QAAQ,EAAE;YACV,IAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;YACrD,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBACvB,OAAO,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;aACxB;iBACI;gBACD,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,IAAA,aAAK,EAAC,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aACnD;SACJ;aACI;YACD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;gBAC3B,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACrB;SACJ;KACJ;IACD,OAAO,IAAA,6BAAa,EAAC,GAAG,CAAC,CAAC;AAC9B,CAAC;AArBD,4BAqBC","sourcesContent":["import { blade } from './Blade';\nimport { bladesToArray } from './bladesToArray';\nimport { FieldAdapter } from './FieldAdapter';\nimport { Blade } from './Multivector';\n\n// TODO: This could be replaced by a more functional implementation using reduce?\nexport function simplify<T>(blades: Blade<T>[], adapter: FieldAdapter<T>): Blade<T>[] {\n    const map: { [bitmap: number]: Blade<T> } = {};\n    for (let i = 0; i < blades.length; i++) {\n        const B = blades[i];\n        const existing = map[B.bitmap];\n        if (existing) {\n            const scale = adapter.add(existing.weight, B.weight);\n            if (adapter.isZero(scale)) {\n                delete map[B.bitmap];\n            }\n            else {\n                map[B.bitmap] = blade(B.bitmap, scale, adapter);\n            }\n        }\n        else {\n            if (!adapter.isZero(B.weight)) {\n                map[B.bitmap] = B;\n            }\n        }\n    }\n    return bladesToArray(map);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"98919455b763688ad7dfa1afa9052d98e9dd667f"},"/home/david/Development/geocas/src/mother/bladesToArray.ts":{"path":"/home/david/Development/geocas/src/mother/bladesToArray.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":18},"end":{"line":5,"column":96}},"3":{"start":{"line":5,"column":64},"end":{"line":5,"column":93}},"4":{"start":{"line":6,"column":14},"end":{"line":6,"column":16}},"5":{"start":{"line":7,"column":4},"end":{"line":11,"column":5}},"6":{"start":{"line":7,"column":17},"end":{"line":7,"column":18}},"7":{"start":{"line":8,"column":21},"end":{"line":8,"column":31}},"8":{"start":{"line":9,"column":20},"end":{"line":9,"column":31}},"9":{"start":{"line":10,"column":8},"end":{"line":10,"column":24}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":15}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":38}}},"fnMap":{"0":{"name":"bladesToArray","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":22}},"loc":{"start":{"line":4,"column":28},"end":{"line":13,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":39},"end":{"line":5,"column":40}},"loc":{"start":{"line":5,"column":62},"end":{"line":5,"column":95}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":339,"3":347,"4":339,"5":339,"6":339,"7":347,"8":347,"9":347,"10":339,"11":1},"f":{"0":339,"1":347},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/bladesToArray.ts","sources":["/home/david/Development/geocas/src/mother/bladesToArray.ts"],"names":[],"mappings":";;;AAEA,SAAgB,aAAa,CAAI,GAAmC;IAChE,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,WAAW,IAAI,OAAO,QAAQ,CAAC,WAAW,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC;IAC9F,IAAM,GAAG,GAAe,EAAE,CAAC;IAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,IAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnB;IACD,OAAO,GAAG,CAAC;AACf,CAAC;AATD,sCASC","sourcesContent":["import { Blade } from './Multivector';\n\nexport function bladesToArray<T>(map: { [bitmap: number]: Blade<T> }) {\n    const bitmaps = Object.keys(map).map(function (keyAsString) { return parseInt(keyAsString) });\n    const rez: Blade<T>[] = [];\n    for (let i = 0; i < bitmaps.length; i++) {\n        const bitmap = bitmaps[i];\n        const blade = map[bitmap];\n        rez.push(blade);\n    }\n    return rez;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2b668d84ceffbf4db4ddd20ad75fde4dfffc8c1f"},"/home/david/Development/geocas/src/mother/isScalar.ts":{"path":"/home/david/Development/geocas/src/mother/isScalar.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":17},"end":{"line":5,"column":27}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":4},"end":{"line":12,"column":5}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":18}},"6":{"start":{"line":8,"column":20},"end":{"line":8,"column":29}},"7":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"8":{"start":{"line":10,"column":12},"end":{"line":10,"column":25}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":16}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":28}}},"fnMap":{"0":{"name":"isScalar","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":17}},"loc":{"start":{"line":4,"column":23},"end":{"line":14,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},{"start":{"line":9,"column":8},"end":{"line":11,"column":9}}],"line":9}},"s":{"0":1,"1":1,"2":24,"3":24,"4":24,"5":24,"6":24,"7":24,"8":0,"9":24,"10":1},"f":{"0":24},"b":{"0":[0,24]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/isScalar.ts","sources":["/home/david/Development/geocas/src/mother/isScalar.ts"],"names":[],"mappings":";;;AAEA,SAAgB,QAAQ,CAAI,GAAmB;IAC3C,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7B,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACpB,OAAO,KAAK,CAAC;SAChB;KACJ;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAVD,4BAUC","sourcesContent":["import { Multivector } from './Multivector';\n\nexport function isScalar<T>(arg: Multivector<T>): boolean {\n    const blades = arg.blades;\n    const length = blades.length;\n    for (let k = 0; k < length; k++) {\n        const blade = blades[k];\n        if (blade.bitmap !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a2b557f2af4f32629ce683924840d9cd4c636e41"},"/home/david/Development/geocas/src/mother/lcoE.ts":{"path":"/home/david/Development/geocas/src/mother/lcoE.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":12},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":32}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":22}},"5":{"start":{"line":8,"column":13},"end":{"line":8,"column":22}},"6":{"start":{"line":9,"column":4},"end":{"line":23,"column":5}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":24}},"8":{"start":{"line":14,"column":21},"end":{"line":14,"column":40}},"9":{"start":{"line":15,"column":16},"end":{"line":15,"column":42}},"10":{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":28}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":49}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":20}}},"fnMap":{"0":{"name":"lcoE","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":13}},"loc":{"start":{"line":6,"column":29},"end":{"line":24,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":23,"column":5}},{"start":{"line":9,"column":4},"end":{"line":23,"column":5}}],"line":9},"1":{"loc":{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},{"start":{"line":16,"column":8},"end":{"line":22,"column":9}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":20,"5":20,"6":20,"7":5,"8":15,"9":15,"10":15,"11":2,"12":13,"13":1},"f":{"0":20},"b":{"0":[5,15],"1":[2,13]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/lcoE.ts","sources":["/home/david/Development/geocas/src/mother/lcoE.ts"],"names":[],"mappings":";;;AACA,6BAA4B;AAC5B,iCAAgC;AAGhC,SAAgB,IAAI,CAAI,CAAW,EAAE,CAAW,EAAE,OAAwB;IACtE,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACrB,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACrB,IAAI,EAAE,GAAG,EAAE,EAAE;QACT,wCAAwC;QACxC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;KACnB;SACI;QACD,IAAM,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QAEnC,IAAM,CAAC,GAAG,IAAA,aAAK,EAAC,MAAM,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;YACjB,wCAAwC;YACxC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;SACnB;aACI;YACD,OAAO,IAAA,SAAG,EAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;SAC7B;KACJ;AACL,CAAC;AApBD,oBAoBC","sourcesContent":["import { FieldAdapter } from './FieldAdapter';\nimport { gpE } from './gpE';\nimport { grade } from './grade';\nimport { Blade } from './Multivector';\n\nexport function lcoE<T>(a: Blade<T>, b: Blade<T>, adapter: FieldAdapter<T>): Blade<T> {\n    const ga = a.grade();\n    const gb = b.grade();\n    if (ga > gb) {\n        // May be more efficient to return null?\n        return a.zero();\n    }\n    else {\n        const bitmap = a.bitmap ^ b.bitmap;\n\n        const g = grade(bitmap);\n\n        if (g !== (gb - ga)) {\n            // May be more efficient to return null?\n            return a.zero();\n        }\n        else {\n            return gpE(a, b, adapter);\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"77c264ef281c7051cf69e70887b387482c99429c"},"/home/david/Development/geocas/src/mother/grade.ts":{"path":"/home/david/Development/geocas/src/mother/grade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":38}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":44}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":22}}},"fnMap":{"0":{"name":"grade","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":14}},"loc":{"start":{"line":5,"column":23},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":52,"4":1},"f":{"0":52},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/grade.ts","sources":["/home/david/Development/geocas/src/mother/grade.ts"],"names":[],"mappings":";;;AAAA,uCAAsC;AAEtC,SAAgB,KAAK,CAAC,MAAc;IAChC,OAAO,IAAA,mBAAQ,EAAC,MAAM,CAAC,CAAC;AAC5B,CAAC;AAFD,sBAEC","sourcesContent":["import { bitCount } from './bitCount';\n\nexport function grade(bitmap: number): number {\n    return bitCount(bitmap);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d88a1105d79a90dc1a428770d29ab42498175f50"},"/home/david/Development/geocas/src/mother/lcoG.ts":{"path":"/home/david/Development/geocas/src/mother/lcoG.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":12},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":32}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":22}},"5":{"start":{"line":8,"column":13},"end":{"line":8,"column":22}},"6":{"start":{"line":9,"column":4},"end":{"line":21,"column":5}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":18}},"8":{"start":{"line":13,"column":21},"end":{"line":13,"column":40}},"9":{"start":{"line":14,"column":16},"end":{"line":14,"column":42}},"10":{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},"11":{"start":{"line":16,"column":12},"end":{"line":16,"column":22}},"12":{"start":{"line":19,"column":12},"end":{"line":19,"column":52}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":20}}},"fnMap":{"0":{"name":"lcoG","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":13}},"loc":{"start":{"line":6,"column":32},"end":{"line":22,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":21,"column":5}},{"start":{"line":9,"column":4},"end":{"line":21,"column":5}}],"line":9},"1":{"loc":{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},{"start":{"line":15,"column":8},"end":{"line":20,"column":9}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"f":{"0":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/lcoG.ts","sources":["/home/david/Development/geocas/src/mother/lcoG.ts"],"names":[],"mappings":";;;AACA,6BAA4B;AAC5B,iCAAgC;AAGhC,SAAgB,IAAI,CAAI,CAAW,EAAE,CAAW,EAAE,CAAY,EAAE,OAAwB;IACpF,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACrB,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACrB,IAAI,EAAE,GAAG,EAAE,EAAE;QACT,OAAO,EAAE,CAAC;KACb;SACI;QACD,IAAM,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QAEnC,IAAM,CAAC,GAAG,IAAA,aAAK,EAAC,MAAM,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;YACjB,OAAO,EAAE,CAAC;SACb;aACI;YACD,OAAO,IAAA,SAAG,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;SAChC;KACJ;AACL,CAAC;AAlBD,oBAkBC","sourcesContent":["import { FieldAdapter } from './FieldAdapter';\nimport { gpG } from './gpG';\nimport { grade } from './grade';\nimport { Blade, Metric } from './Multivector';\n\nexport function lcoG<T>(a: Blade<T>, b: Blade<T>, m: Metric<T>, adapter: FieldAdapter<T>): Blade<T>[] {\n    const ga = a.grade();\n    const gb = b.grade();\n    if (ga > gb) {\n        return [];\n    }\n    else {\n        const bitmap = a.bitmap ^ b.bitmap;\n\n        const g = grade(bitmap);\n\n        if (g !== (gb - ga)) {\n            return [];\n        }\n        else {\n            return gpG(a, b, m, adapter);\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"439454bd1127a9fe74a7d298dc6410e5048a6498"},"/home/david/Development/geocas/src/mother/lcoL.ts":{"path":"/home/david/Development/geocas/src/mother/lcoL.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":12},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":32}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":22}},"5":{"start":{"line":8,"column":13},"end":{"line":8,"column":22}},"6":{"start":{"line":9,"column":4},"end":{"line":23,"column":5}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":24}},"8":{"start":{"line":14,"column":21},"end":{"line":14,"column":40}},"9":{"start":{"line":15,"column":16},"end":{"line":15,"column":42}},"10":{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":28}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":52}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":20}}},"fnMap":{"0":{"name":"lcoL","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":13}},"loc":{"start":{"line":6,"column":32},"end":{"line":24,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":23,"column":5}},{"start":{"line":9,"column":4},"end":{"line":23,"column":5}}],"line":9},"1":{"loc":{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},{"start":{"line":16,"column":8},"end":{"line":22,"column":9}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":20,"5":20,"6":20,"7":5,"8":15,"9":15,"10":15,"11":2,"12":13,"13":1},"f":{"0":20},"b":{"0":[5,15],"1":[2,13]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/lcoL.ts","sources":["/home/david/Development/geocas/src/mother/lcoL.ts"],"names":[],"mappings":";;;AACA,6BAA4B;AAC5B,iCAAgC;AAGhC,SAAgB,IAAI,CAAI,CAAW,EAAE,CAAW,EAAE,CAAW,EAAE,OAAwB;IACnF,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACrB,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACrB,IAAI,EAAE,GAAG,EAAE,EAAE;QACT,wCAAwC;QACxC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;KACnB;SACI;QACD,IAAM,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QAEnC,IAAM,CAAC,GAAG,IAAA,aAAK,EAAC,MAAM,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;YACjB,wCAAwC;YACxC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;SACnB;aACI;YACD,OAAO,IAAA,SAAG,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;SAChC;KACJ;AACL,CAAC;AApBD,oBAoBC","sourcesContent":["import { FieldAdapter } from './FieldAdapter';\nimport { gpL } from './gpL';\nimport { grade } from './grade';\nimport { Blade } from './Multivector';\n\nexport function lcoL<T>(a: Blade<T>, b: Blade<T>, m: number[], adapter: FieldAdapter<T>): Blade<T> {\n    const ga = a.grade();\n    const gb = b.grade();\n    if (ga > gb) {\n        // May be more efficient to return null?\n        return a.zero();\n    }\n    else {\n        const bitmap = a.bitmap ^ b.bitmap;\n\n        const g = grade(bitmap);\n\n        if (g !== (gb - ga)) {\n            // May be more efficient to return null?\n            return a.zero();\n        }\n        else {\n            return gpL(a, b, m, adapter);\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cf515168e512f17614ea4ca6038c66824c4d3d78"},"/home/david/Development/geocas/src/mother/multivectorEQ.ts":{"path":"/home/david/Development/geocas/src/mother/multivectorEQ.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":42}},"3":{"start":{"line":6,"column":4},"end":{"line":24,"column":5}},"4":{"start":{"line":7,"column":22},"end":{"line":7,"column":62}},"5":{"start":{"line":8,"column":22},"end":{"line":8,"column":62}},"6":{"start":{"line":9,"column":21},"end":{"line":9,"column":35}},"7":{"start":{"line":10,"column":8},"end":{"line":19,"column":9}},"8":{"start":{"line":10,"column":21},"end":{"line":10,"column":22}},"9":{"start":{"line":11,"column":25},"end":{"line":11,"column":35}},"10":{"start":{"line":12,"column":25},"end":{"line":12,"column":35}},"11":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"12":{"start":{"line":14,"column":16},"end":{"line":14,"column":29}},"13":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"14":{"start":{"line":17,"column":16},"end":{"line":17,"column":29}},"15":{"start":{"line":20,"column":8},"end":{"line":20,"column":20}},"16":{"start":{"line":23,"column":8},"end":{"line":23,"column":21}},"17":{"start":{"line":26,"column":0},"end":{"line":26,"column":38}}},"fnMap":{"0":{"name":"multivectorEQ","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":22}},"loc":{"start":{"line":5,"column":40},"end":{"line":25,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":24,"column":5}},{"start":{"line":6,"column":4},"end":{"line":24,"column":5}}],"line":6},"1":{"loc":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"type":"if","locations":[{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},{"start":{"line":13,"column":12},"end":{"line":15,"column":13}}],"line":13},"2":{"loc":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},{"start":{"line":16,"column":12},"end":{"line":18,"column":13}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":10,"4":8,"5":8,"6":8,"7":8,"8":8,"9":8,"10":8,"11":8,"12":2,"13":6,"14":2,"15":4,"16":2,"17":1},"f":{"0":10},"b":{"0":[8,2],"1":[2,6],"2":[2,4]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/multivectorEQ.ts","sources":["/home/david/Development/geocas/src/mother/multivectorEQ.ts"],"names":[],"mappings":";;;AAEA,2CAA0C;AAE1C,SAAgB,aAAa,CAAI,GAAmB,EAAE,GAAmB,EAAE,KAAsB;IAC7F,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACzC,IAAM,OAAO,GAAG,IAAA,uBAAU,EAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,IAAM,OAAO,GAAG,IAAA,uBAAU,EAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,IAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE;gBACjC,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE;gBACxC,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,IAAI,CAAC;KACf;SACI;QACD,OAAO,KAAK,CAAC;KAChB;AACL,CAAC;AApBD,sCAoBC","sourcesContent":["import { FieldAdapter } from './FieldAdapter';\nimport { Multivector } from './Multivector';\nimport { sortBlades } from './sortBlades';\n\nexport function multivectorEQ<T>(lhs: Multivector<T>, rhs: Multivector<T>, field: FieldAdapter<T>): boolean {\n    if (lhs.blades.length === rhs.blades.length) {\n        const bladesL = sortBlades(lhs.blades);\n        const bladesR = sortBlades(rhs.blades);\n        const length = bladesL.length;\n        for (let i = 0; i < length; i++) {\n            const bladeL = bladesL[i];\n            const bladeR = bladesR[i];\n            if (bladeL.bitmap !== bladeR.bitmap) {\n                return false;\n            }\n            if (field.ne(bladeL.weight, bladeR.weight)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e7e7970b055f66be83a76b391d16ec1eea912874"},"/home/david/Development/geocas/src/mother/sortBlades.ts":{"path":"/home/david/Development/geocas/src/mother/sortBlades.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":4},"end":{"line":13,"column":5}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":18}},"4":{"start":{"line":8,"column":9},"end":{"line":13,"column":5}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":18}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":17}},"7":{"start":{"line":17,"column":14},"end":{"line":17,"column":16}},"8":{"start":{"line":18,"column":4},"end":{"line":21,"column":5}},"9":{"start":{"line":18,"column":17},"end":{"line":18,"column":18}},"10":{"start":{"line":19,"column":16},"end":{"line":19,"column":25}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":20}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":24}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":15}},"14":{"start":{"line":25,"column":0},"end":{"line":25,"column":32}}},"fnMap":{"0":{"name":"compareFn","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":25},"end":{"line":14,"column":1}},"line":4},"1":{"name":"sortBlades","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":19}},"loc":{"start":{"line":16,"column":28},"end":{"line":24,"column":1}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":13,"column":5}},{"start":{"line":5,"column":4},"end":{"line":13,"column":5}}],"line":5},"1":{"loc":{"start":{"line":8,"column":9},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":9},"end":{"line":13,"column":5}},{"start":{"line":8,"column":9},"end":{"line":13,"column":5}}],"line":8}},"s":{"0":1,"1":1,"2":49,"3":0,"4":49,"5":49,"6":0,"7":81,"8":81,"9":81,"10":122,"11":122,"12":81,"13":81,"14":1},"f":{"0":49,"1":81},"b":{"0":[0,49],"1":[49,0]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/sortBlades.ts","sources":["/home/david/Development/geocas/src/mother/sortBlades.ts"],"names":[],"mappings":";;;AAEA,SAAS,SAAS,CAAI,CAAW,EAAE,CAAW;IAC1C,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE;QACrB,OAAO,CAAC,CAAC,CAAC;KACb;SACI,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE;QAC1B,OAAO,CAAC,CAAC,CAAC;KACb;SACI;QACD,OAAO,CAAC,CAAC;KACZ;AACL,CAAC;AAED,iFAAiF;AACjF,SAAgB,UAAU,CAAI,MAAkB;IAC5C,IAAM,GAAG,GAAe,EAAE,CAAC;IAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,IAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACpB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACf;IACD,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpB,OAAO,GAAG,CAAC;AACf,CAAC;AARD,gCAQC","sourcesContent":["import { Blade } from './Multivector';\n\nfunction compareFn<T>(a: Blade<T>, b: Blade<T>): number {\n    if (a.bitmap < b.bitmap) {\n        return -1;\n    }\n    else if (a.bitmap > b.bitmap) {\n        return +1;\n    }\n    else {\n        return 0;\n    }\n}\n\n// TODO: This could be replaced by a more functional implementation using reduce?\nexport function sortBlades<T>(blades: Blade<T>[]): Blade<T>[] {\n    const rez: Blade<T>[] = [];\n    for (let i = 0; i < blades.length; i++) {\n        const B = blades[i];\n        rez.push(B);\n    }\n    rez.sort(compareFn);\n    return rez;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"82e26e347f90280c5dbb20c294178820e19cb870"},"/home/david/Development/geocas/src/mother/multivectorGE.ts":{"path":"/home/david/Development/geocas/src/mother/multivectorGE.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":38}},"3":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":38}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":38}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":30}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":84}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}}},"fnMap":{"0":{"name":"multivectorGE","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":22}},"loc":{"start":{"line":5,"column":40},"end":{"line":14,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},{"start":{"line":6,"column":4},"end":{"line":13,"column":5}}],"line":6},"1":{"loc":{"start":{"line":6,"column":8},"end":{"line":6,"column":70}},"type":"binary-expr","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":37}},{"start":{"line":6,"column":41},"end":{"line":6,"column":70}}],"line":6}},"s":{"0":1,"1":1,"2":1,"3":4,"4":4,"5":4,"6":4,"7":0,"8":1},"f":{"0":4},"b":{"0":[4,0],"1":[4,4]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/multivectorGE.ts","sources":["/home/david/Development/geocas/src/mother/multivectorGE.ts"],"names":[],"mappings":";;;AACA,uCAAsC;AAGtC,SAAgB,aAAa,CAAI,GAAmB,EAAE,GAAmB,EAAE,KAAsB;IAC7F,IAAI,IAAA,mBAAQ,EAAC,GAAG,CAAC,IAAI,IAAA,mBAAQ,EAAC,GAAG,CAAC,EAAE;QAChC,IAAM,CAAC,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACjC,IAAM,CAAC,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACjC,OAAO,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACzB;SACI;QACD,MAAM,IAAI,KAAK,CAAC,UAAG,GAAG,iBAAO,GAAG,yBAAsB,CAAC,CAAC;KAC3D;AACL,CAAC;AATD,sCASC","sourcesContent":["import { FieldAdapter } from './FieldAdapter';\nimport { isScalar } from './isScalar';\nimport { Multivector } from './Multivector';\n\nexport function multivectorGE<T>(lhs: Multivector<T>, rhs: Multivector<T>, field: FieldAdapter<T>): boolean {\n    if (isScalar(lhs) && isScalar(rhs)) {\n        const l = lhs.scalarCoordinate();\n        const r = rhs.scalarCoordinate();\n        return field.ge(l, r);\n    }\n    else {\n        throw new Error(`${lhs} >= ${rhs} is not implemented.`);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2492164f629997535deeae7766dc3c1a64e66740"},"/home/david/Development/geocas/src/mother/multivectorGT.ts":{"path":"/home/david/Development/geocas/src/mother/multivectorGT.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":38}},"3":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":38}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":38}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":30}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":83}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}}},"fnMap":{"0":{"name":"multivectorGT","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":22}},"loc":{"start":{"line":5,"column":40},"end":{"line":14,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},{"start":{"line":6,"column":4},"end":{"line":13,"column":5}}],"line":6},"1":{"loc":{"start":{"line":6,"column":8},"end":{"line":6,"column":70}},"type":"binary-expr","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":37}},{"start":{"line":6,"column":41},"end":{"line":6,"column":70}}],"line":6}},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":2,"6":2,"7":0,"8":1},"f":{"0":2},"b":{"0":[2,0],"1":[2,2]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/multivectorGT.ts","sources":["/home/david/Development/geocas/src/mother/multivectorGT.ts"],"names":[],"mappings":";;;AACA,uCAAsC;AAGtC,SAAgB,aAAa,CAAI,GAAmB,EAAE,GAAmB,EAAE,KAAsB;IAC7F,IAAI,IAAA,mBAAQ,EAAC,GAAG,CAAC,IAAI,IAAA,mBAAQ,EAAC,GAAG,CAAC,EAAE;QAChC,IAAM,CAAC,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACjC,IAAM,CAAC,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACjC,OAAO,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACzB;SACI;QACD,MAAM,IAAI,KAAK,CAAC,UAAG,GAAG,gBAAM,GAAG,yBAAsB,CAAC,CAAC;KAC1D;AACL,CAAC;AATD,sCASC","sourcesContent":["import { FieldAdapter } from './FieldAdapter';\nimport { isScalar } from './isScalar';\nimport { Multivector } from './Multivector';\n\nexport function multivectorGT<T>(lhs: Multivector<T>, rhs: Multivector<T>, field: FieldAdapter<T>): boolean {\n    if (isScalar(lhs) && isScalar(rhs)) {\n        const l = lhs.scalarCoordinate();\n        const r = rhs.scalarCoordinate();\n        return field.gt(l, r);\n    }\n    else {\n        throw new Error(`${lhs} > ${rhs} is not implemented.`);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"373c853bbad9e074832a32a533cd51c323e6da62"},"/home/david/Development/geocas/src/mother/multivectorLE.ts":{"path":"/home/david/Development/geocas/src/mother/multivectorLE.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":38}},"3":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":38}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":38}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":30}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":84}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}}},"fnMap":{"0":{"name":"multivectorLE","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":22}},"loc":{"start":{"line":5,"column":40},"end":{"line":14,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},{"start":{"line":6,"column":4},"end":{"line":13,"column":5}}],"line":6},"1":{"loc":{"start":{"line":6,"column":8},"end":{"line":6,"column":70}},"type":"binary-expr","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":37}},{"start":{"line":6,"column":41},"end":{"line":6,"column":70}}],"line":6}},"s":{"0":1,"1":1,"2":1,"3":3,"4":3,"5":3,"6":3,"7":0,"8":1},"f":{"0":3},"b":{"0":[3,0],"1":[3,3]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/multivectorLE.ts","sources":["/home/david/Development/geocas/src/mother/multivectorLE.ts"],"names":[],"mappings":";;;AACA,uCAAsC;AAGtC,SAAgB,aAAa,CAAI,GAAmB,EAAE,GAAmB,EAAE,KAAsB;IAC7F,IAAI,IAAA,mBAAQ,EAAC,GAAG,CAAC,IAAI,IAAA,mBAAQ,EAAC,GAAG,CAAC,EAAE;QAChC,IAAM,CAAC,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACjC,IAAM,CAAC,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACjC,OAAO,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACzB;SACI;QACD,MAAM,IAAI,KAAK,CAAC,UAAG,GAAG,iBAAO,GAAG,yBAAsB,CAAC,CAAC;KAC3D;AACL,CAAC;AATD,sCASC","sourcesContent":["import { FieldAdapter } from './FieldAdapter';\nimport { isScalar } from './isScalar';\nimport { Multivector } from './Multivector';\n\nexport function multivectorLE<T>(lhs: Multivector<T>, rhs: Multivector<T>, field: FieldAdapter<T>): boolean {\n    if (isScalar(lhs) && isScalar(rhs)) {\n        const l = lhs.scalarCoordinate();\n        const r = rhs.scalarCoordinate();\n        return field.le(l, r);\n    }\n    else {\n        throw new Error(`${lhs} <= ${rhs} is not implemented.`);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b260bbedb3c883832ca8cdce683f76aa8a5a347e"},"/home/david/Development/geocas/src/mother/multivectorLT.ts":{"path":"/home/david/Development/geocas/src/mother/multivectorLT.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":38}},"3":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":38}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":38}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":30}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":83}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}}},"fnMap":{"0":{"name":"multivectorLT","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":22}},"loc":{"start":{"line":5,"column":40},"end":{"line":14,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},{"start":{"line":6,"column":4},"end":{"line":13,"column":5}}],"line":6},"1":{"loc":{"start":{"line":6,"column":8},"end":{"line":6,"column":70}},"type":"binary-expr","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":37}},{"start":{"line":6,"column":41},"end":{"line":6,"column":70}}],"line":6}},"s":{"0":1,"1":1,"2":1,"3":3,"4":3,"5":3,"6":3,"7":0,"8":1},"f":{"0":3},"b":{"0":[3,0],"1":[3,3]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/multivectorLT.ts","sources":["/home/david/Development/geocas/src/mother/multivectorLT.ts"],"names":[],"mappings":";;;AACA,uCAAsC;AAGtC,SAAgB,aAAa,CAAI,GAAmB,EAAE,GAAmB,EAAE,KAAsB;IAC7F,IAAI,IAAA,mBAAQ,EAAC,GAAG,CAAC,IAAI,IAAA,mBAAQ,EAAC,GAAG,CAAC,EAAE;QAChC,IAAM,CAAC,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACjC,IAAM,CAAC,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACjC,OAAO,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACzB;SACI;QACD,MAAM,IAAI,KAAK,CAAC,UAAG,GAAG,gBAAM,GAAG,yBAAsB,CAAC,CAAC;KAC1D;AACL,CAAC;AATD,sCASC","sourcesContent":["import { FieldAdapter } from './FieldAdapter';\nimport { isScalar } from './isScalar';\nimport { Multivector } from './Multivector';\n\nexport function multivectorLT<T>(lhs: Multivector<T>, rhs: Multivector<T>, field: FieldAdapter<T>): boolean {\n    if (isScalar(lhs) && isScalar(rhs)) {\n        const l = lhs.scalarCoordinate();\n        const r = rhs.scalarCoordinate();\n        return field.lt(l, r);\n    }\n    else {\n        throw new Error(`${lhs} < ${rhs} is not implemented.`);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"88ed64d2573d9d29301ec37a5450a35a0183463f"},"/home/david/Development/geocas/src/mother/rcoE.ts":{"path":"/home/david/Development/geocas/src/mother/rcoE.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":12},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":32}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":22}},"5":{"start":{"line":8,"column":13},"end":{"line":8,"column":22}},"6":{"start":{"line":9,"column":4},"end":{"line":23,"column":5}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":24}},"8":{"start":{"line":14,"column":21},"end":{"line":14,"column":40}},"9":{"start":{"line":15,"column":16},"end":{"line":15,"column":42}},"10":{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":28}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":49}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":20}}},"fnMap":{"0":{"name":"rcoE","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":13}},"loc":{"start":{"line":6,"column":29},"end":{"line":24,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":23,"column":5}},{"start":{"line":9,"column":4},"end":{"line":23,"column":5}}],"line":9},"1":{"loc":{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},{"start":{"line":16,"column":8},"end":{"line":22,"column":9}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":16,"5":16,"6":16,"7":5,"8":11,"9":11,"10":11,"11":2,"12":9,"13":1},"f":{"0":16},"b":{"0":[5,11],"1":[2,9]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/rcoE.ts","sources":["/home/david/Development/geocas/src/mother/rcoE.ts"],"names":[],"mappings":";;;AACA,6BAA4B;AAC5B,iCAAgC;AAGhC,SAAgB,IAAI,CAAI,CAAW,EAAE,CAAW,EAAE,OAAwB;IACtE,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACrB,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACrB,IAAI,EAAE,GAAG,EAAE,EAAE;QACT,wCAAwC;QACxC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;KACnB;SACI;QACD,IAAM,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QAEnC,IAAM,CAAC,GAAG,IAAA,aAAK,EAAC,MAAM,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;YACjB,wCAAwC;YACxC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;SACnB;aACI;YACD,OAAO,IAAA,SAAG,EAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;SAC7B;KACJ;AACL,CAAC;AApBD,oBAoBC","sourcesContent":["import { FieldAdapter } from './FieldAdapter';\nimport { gpE } from './gpE';\nimport { grade } from './grade';\nimport { Blade } from './Multivector';\n\nexport function rcoE<T>(a: Blade<T>, b: Blade<T>, adapter: FieldAdapter<T>): Blade<T> {\n    const ga = a.grade();\n    const gb = b.grade();\n    if (ga < gb) {\n        // May be more efficient to return null?\n        return a.zero();\n    }\n    else {\n        const bitmap = a.bitmap ^ b.bitmap;\n\n        const g = grade(bitmap);\n\n        if (g !== (ga - gb)) {\n            // May be more efficient to return null?\n            return a.zero();\n        }\n        else {\n            return gpE(a, b, adapter);\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac4c29f3553c1fdb1b15eea216b119fc6836a55a"},"/home/david/Development/geocas/src/mother/rcoG.ts":{"path":"/home/david/Development/geocas/src/mother/rcoG.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":12},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":32}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":22}},"5":{"start":{"line":8,"column":13},"end":{"line":8,"column":22}},"6":{"start":{"line":9,"column":4},"end":{"line":21,"column":5}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":18}},"8":{"start":{"line":13,"column":21},"end":{"line":13,"column":40}},"9":{"start":{"line":14,"column":16},"end":{"line":14,"column":42}},"10":{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},"11":{"start":{"line":16,"column":12},"end":{"line":16,"column":22}},"12":{"start":{"line":19,"column":12},"end":{"line":19,"column":52}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":20}}},"fnMap":{"0":{"name":"rcoG","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":13}},"loc":{"start":{"line":6,"column":32},"end":{"line":22,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":21,"column":5}},{"start":{"line":9,"column":4},"end":{"line":21,"column":5}}],"line":9},"1":{"loc":{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},{"start":{"line":15,"column":8},"end":{"line":20,"column":9}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"f":{"0":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/rcoG.ts","sources":["/home/david/Development/geocas/src/mother/rcoG.ts"],"names":[],"mappings":";;;AACA,6BAA4B;AAC5B,iCAAgC;AAGhC,SAAgB,IAAI,CAAI,CAAW,EAAE,CAAW,EAAE,CAAY,EAAE,OAAwB;IACpF,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACrB,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACrB,IAAI,EAAE,GAAG,EAAE,EAAE;QACT,OAAO,EAAE,CAAC;KACb;SACI;QACD,IAAM,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QAEnC,IAAM,CAAC,GAAG,IAAA,aAAK,EAAC,MAAM,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;YACjB,OAAO,EAAE,CAAC;SACb;aACI;YACD,OAAO,IAAA,SAAG,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;SAChC;KACJ;AACL,CAAC;AAlBD,oBAkBC","sourcesContent":["import { FieldAdapter } from './FieldAdapter';\nimport { gpG } from './gpG';\nimport { grade } from './grade';\nimport { Blade, Metric } from './Multivector';\n\nexport function rcoG<T>(a: Blade<T>, b: Blade<T>, m: Metric<T>, adapter: FieldAdapter<T>): Blade<T>[] {\n    const ga = a.grade();\n    const gb = b.grade();\n    if (ga < gb) {\n        return [];\n    }\n    else {\n        const bitmap = a.bitmap ^ b.bitmap;\n\n        const g = grade(bitmap);\n\n        if (g !== (ga - gb)) {\n            return [];\n        }\n        else {\n            return gpG(a, b, m, adapter);\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"340e790b3d7cdd08abe72d6236d327f4038321f2"},"/home/david/Development/geocas/src/mother/rcoL.ts":{"path":"/home/david/Development/geocas/src/mother/rcoL.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":12},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":32}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":22}},"5":{"start":{"line":8,"column":13},"end":{"line":8,"column":22}},"6":{"start":{"line":9,"column":4},"end":{"line":23,"column":5}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":24}},"8":{"start":{"line":14,"column":21},"end":{"line":14,"column":40}},"9":{"start":{"line":15,"column":16},"end":{"line":15,"column":42}},"10":{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":28}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":52}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":20}}},"fnMap":{"0":{"name":"rcoL","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":13}},"loc":{"start":{"line":6,"column":32},"end":{"line":24,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":23,"column":5}},{"start":{"line":9,"column":4},"end":{"line":23,"column":5}}],"line":9},"1":{"loc":{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},{"start":{"line":16,"column":8},"end":{"line":22,"column":9}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":16,"5":16,"6":16,"7":5,"8":11,"9":11,"10":11,"11":2,"12":9,"13":1},"f":{"0":16},"b":{"0":[5,11],"1":[2,9]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/rcoL.ts","sources":["/home/david/Development/geocas/src/mother/rcoL.ts"],"names":[],"mappings":";;;AACA,6BAA4B;AAC5B,iCAAgC;AAGhC,SAAgB,IAAI,CAAI,CAAW,EAAE,CAAW,EAAE,CAAW,EAAE,OAAwB;IACnF,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACrB,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACrB,IAAI,EAAE,GAAG,EAAE,EAAE;QACT,wCAAwC;QACxC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;KACnB;SACI;QACD,IAAM,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QAEnC,IAAM,CAAC,GAAG,IAAA,aAAK,EAAC,MAAM,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;YACjB,wCAAwC;YACxC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;SACnB;aACI;YACD,OAAO,IAAA,SAAG,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;SAChC;KACJ;AACL,CAAC;AApBD,oBAoBC","sourcesContent":["import { FieldAdapter } from './FieldAdapter';\nimport { gpL } from './gpL';\nimport { grade } from './grade';\nimport { Blade } from './Multivector';\n\nexport function rcoL<T>(a: Blade<T>, b: Blade<T>, m: number[], adapter: FieldAdapter<T>): Blade<T> {\n    const ga = a.grade();\n    const gb = b.grade();\n    if (ga < gb) {\n        // May be more efficient to return null?\n        return a.zero();\n    }\n    else {\n        const bitmap = a.bitmap ^ b.bitmap;\n\n        const g = grade(bitmap);\n\n        if (g !== (ga - gb)) {\n            // May be more efficient to return null?\n            return a.zero();\n        }\n        else {\n            return gpL(a, b, m, adapter);\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7be066648d2b97e5c6e4387ecb2875147ff94fd9"},"/home/david/Development/geocas/src/mother/ComplexFieldAdapter.ts":{"path":"/home/david/Development/geocas/src/mother/ComplexFieldAdapter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":46}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":54}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":11},"end":{"line":7,"column":39}},"6":{"start":{"line":8,"column":41},"end":{"line":121,"column":3}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":39}},"8":{"start":{"line":10,"column":28},"end":{"line":10,"column":37}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":86}},"10":{"start":{"line":13,"column":4},"end":{"line":19,"column":7}},"11":{"start":{"line":15,"column":12},"end":{"line":15,"column":27}},"12":{"start":{"line":20,"column":4},"end":{"line":22,"column":6}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":27}},"14":{"start":{"line":23,"column":4},"end":{"line":25,"column":6}},"15":{"start":{"line":24,"column":8},"end":{"line":24,"column":32}},"16":{"start":{"line":26,"column":4},"end":{"line":28,"column":6}},"17":{"start":{"line":27,"column":8},"end":{"line":27,"column":50}},"18":{"start":{"line":29,"column":4},"end":{"line":31,"column":6}},"19":{"start":{"line":30,"column":8},"end":{"line":30,"column":50}},"20":{"start":{"line":32,"column":4},"end":{"line":34,"column":6}},"21":{"start":{"line":33,"column":8},"end":{"line":33,"column":30}},"22":{"start":{"line":35,"column":4},"end":{"line":37,"column":6}},"23":{"start":{"line":36,"column":8},"end":{"line":36,"column":29}},"24":{"start":{"line":38,"column":4},"end":{"line":40,"column":6}},"25":{"start":{"line":39,"column":8},"end":{"line":39,"column":30}},"26":{"start":{"line":41,"column":4},"end":{"line":43,"column":6}},"27":{"start":{"line":42,"column":8},"end":{"line":42,"column":29}},"28":{"start":{"line":44,"column":4},"end":{"line":46,"column":6}},"29":{"start":{"line":45,"column":8},"end":{"line":45,"column":32}},"30":{"start":{"line":47,"column":4},"end":{"line":49,"column":6}},"31":{"start":{"line":48,"column":8},"end":{"line":48,"column":44}},"32":{"start":{"line":50,"column":4},"end":{"line":52,"column":6}},"33":{"start":{"line":51,"column":8},"end":{"line":51,"column":44}},"34":{"start":{"line":53,"column":4},"end":{"line":55,"column":6}},"35":{"start":{"line":54,"column":8},"end":{"line":54,"column":32}},"36":{"start":{"line":56,"column":4},"end":{"line":58,"column":6}},"37":{"start":{"line":57,"column":8},"end":{"line":57,"column":30}},"38":{"start":{"line":59,"column":4},"end":{"line":61,"column":6}},"39":{"start":{"line":60,"column":8},"end":{"line":60,"column":32}},"40":{"start":{"line":62,"column":4},"end":{"line":64,"column":6}},"41":{"start":{"line":63,"column":8},"end":{"line":63,"column":27}},"42":{"start":{"line":65,"column":4},"end":{"line":67,"column":6}},"43":{"start":{"line":66,"column":8},"end":{"line":66,"column":28}},"44":{"start":{"line":68,"column":4},"end":{"line":70,"column":6}},"45":{"start":{"line":69,"column":8},"end":{"line":69,"column":27}},"46":{"start":{"line":71,"column":4},"end":{"line":73,"column":6}},"47":{"start":{"line":72,"column":8},"end":{"line":72,"column":78}},"48":{"start":{"line":74,"column":4},"end":{"line":76,"column":6}},"49":{"start":{"line":75,"column":8},"end":{"line":75,"column":38}},"50":{"start":{"line":77,"column":4},"end":{"line":79,"column":6}},"51":{"start":{"line":78,"column":8},"end":{"line":78,"column":38}},"52":{"start":{"line":80,"column":4},"end":{"line":86,"column":7}},"53":{"start":{"line":82,"column":12},"end":{"line":82,"column":48}},"54":{"start":{"line":87,"column":4},"end":{"line":89,"column":6}},"55":{"start":{"line":88,"column":8},"end":{"line":88,"column":27}},"56":{"start":{"line":90,"column":4},"end":{"line":112,"column":6}},"57":{"start":{"line":91,"column":8},"end":{"line":111,"column":9}},"58":{"start":{"line":92,"column":12},"end":{"line":97,"column":13}},"59":{"start":{"line":93,"column":16},"end":{"line":93,"column":28}},"60":{"start":{"line":96,"column":16},"end":{"line":96,"column":67}},"61":{"start":{"line":100,"column":12},"end":{"line":110,"column":13}},"62":{"start":{"line":101,"column":16},"end":{"line":106,"column":17}},"63":{"start":{"line":102,"column":20},"end":{"line":102,"column":69}},"64":{"start":{"line":105,"column":20},"end":{"line":105,"column":70}},"65":{"start":{"line":109,"column":16},"end":{"line":109,"column":67}},"66":{"start":{"line":113,"column":4},"end":{"line":119,"column":7}},"67":{"start":{"line":115,"column":12},"end":{"line":115,"column":24}},"68":{"start":{"line":120,"column":4},"end":{"line":120,"column":31}},"69":{"start":{"line":122,"column":0},"end":{"line":122,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":41},"end":{"line":8,"column":42}},"loc":{"start":{"line":8,"column":53},"end":{"line":121,"column":1}},"line":8},"1":{"name":"ComplexFieldAdapter","decl":{"start":{"line":9,"column":13},"end":{"line":9,"column":32}},"loc":{"start":{"line":9,"column":36},"end":{"line":12,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":13},"end":{"line":14,"column":14}},"loc":{"start":{"line":14,"column":25},"end":{"line":16,"column":9}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":40},"end":{"line":20,"column":41}},"loc":{"start":{"line":20,"column":53},"end":{"line":22,"column":5}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":40},"end":{"line":23,"column":41}},"loc":{"start":{"line":23,"column":60},"end":{"line":25,"column":5}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":39},"end":{"line":26,"column":40}},"loc":{"start":{"line":26,"column":59},"end":{"line":28,"column":5}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":29,"column":39},"end":{"line":29,"column":40}},"loc":{"start":{"line":29,"column":59},"end":{"line":31,"column":5}},"line":29},"7":{"name":"(anonymous_7)","decl":{"start":{"line":32,"column":39},"end":{"line":32,"column":40}},"loc":{"start":{"line":32,"column":59},"end":{"line":34,"column":5}},"line":32},"8":{"name":"(anonymous_8)","decl":{"start":{"line":35,"column":39},"end":{"line":35,"column":40}},"loc":{"start":{"line":35,"column":59},"end":{"line":37,"column":5}},"line":35},"9":{"name":"(anonymous_9)","decl":{"start":{"line":38,"column":39},"end":{"line":38,"column":40}},"loc":{"start":{"line":38,"column":59},"end":{"line":40,"column":5}},"line":38},"10":{"name":"(anonymous_10)","decl":{"start":{"line":41,"column":39},"end":{"line":41,"column":40}},"loc":{"start":{"line":41,"column":59},"end":{"line":43,"column":5}},"line":41},"11":{"name":"(anonymous_11)","decl":{"start":{"line":44,"column":40},"end":{"line":44,"column":41}},"loc":{"start":{"line":44,"column":60},"end":{"line":46,"column":5}},"line":44},"12":{"name":"(anonymous_12)","decl":{"start":{"line":47,"column":40},"end":{"line":47,"column":41}},"loc":{"start":{"line":47,"column":60},"end":{"line":49,"column":5}},"line":47},"13":{"name":"(anonymous_13)","decl":{"start":{"line":50,"column":40},"end":{"line":50,"column":41}},"loc":{"start":{"line":50,"column":60},"end":{"line":52,"column":5}},"line":50},"14":{"name":"(anonymous_14)","decl":{"start":{"line":53,"column":40},"end":{"line":53,"column":41}},"loc":{"start":{"line":53,"column":60},"end":{"line":55,"column":5}},"line":53},"15":{"name":"(anonymous_15)","decl":{"start":{"line":56,"column":48},"end":{"line":56,"column":49}},"loc":{"start":{"line":56,"column":66},"end":{"line":58,"column":5}},"line":56},"16":{"name":"(anonymous_16)","decl":{"start":{"line":59,"column":40},"end":{"line":59,"column":41}},"loc":{"start":{"line":59,"column":60},"end":{"line":61,"column":5}},"line":59},"17":{"name":"(anonymous_17)","decl":{"start":{"line":62,"column":40},"end":{"line":62,"column":41}},"loc":{"start":{"line":62,"column":53},"end":{"line":64,"column":5}},"line":62},"18":{"name":"(anonymous_18)","decl":{"start":{"line":65,"column":45},"end":{"line":65,"column":46}},"loc":{"start":{"line":65,"column":58},"end":{"line":67,"column":5}},"line":65},"19":{"name":"(anonymous_19)","decl":{"start":{"line":68,"column":40},"end":{"line":68,"column":41}},"loc":{"start":{"line":68,"column":53},"end":{"line":70,"column":5}},"line":68},"20":{"name":"(anonymous_20)","decl":{"start":{"line":71,"column":44},"end":{"line":71,"column":45}},"loc":{"start":{"line":71,"column":57},"end":{"line":73,"column":5}},"line":71},"21":{"name":"(anonymous_21)","decl":{"start":{"line":74,"column":42},"end":{"line":74,"column":43}},"loc":{"start":{"line":74,"column":55},"end":{"line":76,"column":5}},"line":74},"22":{"name":"(anonymous_22)","decl":{"start":{"line":77,"column":43},"end":{"line":77,"column":44}},"loc":{"start":{"line":77,"column":56},"end":{"line":79,"column":5}},"line":77},"23":{"name":"(anonymous_23)","decl":{"start":{"line":81,"column":13},"end":{"line":81,"column":14}},"loc":{"start":{"line":81,"column":25},"end":{"line":83,"column":9}},"line":81},"24":{"name":"(anonymous_24)","decl":{"start":{"line":87,"column":40},"end":{"line":87,"column":41}},"loc":{"start":{"line":87,"column":53},"end":{"line":89,"column":5}},"line":87},"25":{"name":"(anonymous_25)","decl":{"start":{"line":90,"column":41},"end":{"line":90,"column":42}},"loc":{"start":{"line":90,"column":54},"end":{"line":112,"column":5}},"line":90},"26":{"name":"(anonymous_26)","decl":{"start":{"line":114,"column":13},"end":{"line":114,"column":14}},"loc":{"start":{"line":114,"column":25},"end":{"line":116,"column":9}},"line":114}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":39}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":39}},{"start":{"line":10,"column":8},"end":{"line":10,"column":39}}],"line":10},"1":{"loc":{"start":{"line":27,"column":15},"end":{"line":27,"column":49}},"type":"binary-expr","locations":[{"start":{"line":27,"column":15},"end":{"line":27,"column":30}},{"start":{"line":27,"column":34},"end":{"line":27,"column":49}}],"line":27},"2":{"loc":{"start":{"line":30,"column":15},"end":{"line":30,"column":49}},"type":"binary-expr","locations":[{"start":{"line":30,"column":15},"end":{"line":30,"column":30}},{"start":{"line":30,"column":34},"end":{"line":30,"column":49}}],"line":30},"3":{"loc":{"start":{"line":48,"column":15},"end":{"line":48,"column":43}},"type":"cond-expr","locations":[{"start":{"line":48,"column":34},"end":{"line":48,"column":37}},{"start":{"line":48,"column":40},"end":{"line":48,"column":43}}],"line":48},"4":{"loc":{"start":{"line":51,"column":15},"end":{"line":51,"column":43}},"type":"cond-expr","locations":[{"start":{"line":51,"column":34},"end":{"line":51,"column":37}},{"start":{"line":51,"column":40},"end":{"line":51,"column":43}}],"line":51},"5":{"loc":{"start":{"line":72,"column":15},"end":{"line":72,"column":77}},"type":"binary-expr","locations":[{"start":{"line":72,"column":15},"end":{"line":72,"column":44}},{"start":{"line":72,"column":48},"end":{"line":72,"column":77}}],"line":72},"6":{"loc":{"start":{"line":75,"column":15},"end":{"line":75,"column":37}},"type":"binary-expr","locations":[{"start":{"line":75,"column":15},"end":{"line":75,"column":24}},{"start":{"line":75,"column":28},"end":{"line":75,"column":37}}],"line":75},"7":{"loc":{"start":{"line":78,"column":15},"end":{"line":78,"column":37}},"type":"binary-expr","locations":[{"start":{"line":78,"column":15},"end":{"line":78,"column":24}},{"start":{"line":78,"column":28},"end":{"line":78,"column":37}}],"line":78},"8":{"loc":{"start":{"line":91,"column":8},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":111,"column":9}},{"start":{"line":91,"column":8},"end":{"line":111,"column":9}}],"line":91},"9":{"loc":{"start":{"line":92,"column":12},"end":{"line":97,"column":13}},"type":"if","locations":[{"start":{"line":92,"column":12},"end":{"line":97,"column":13}},{"start":{"line":92,"column":12},"end":{"line":97,"column":13}}],"line":92},"10":{"loc":{"start":{"line":100,"column":12},"end":{"line":110,"column":13}},"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":110,"column":13}},{"start":{"line":100,"column":12},"end":{"line":110,"column":13}}],"line":100},"11":{"loc":{"start":{"line":101,"column":16},"end":{"line":106,"column":17}},"type":"if","locations":[{"start":{"line":101,"column":16},"end":{"line":106,"column":17}},{"start":{"line":101,"column":16},"end":{"line":106,"column":17}}],"line":101}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":2,"12":1,"13":0,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":1,"21":0,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":10,"36":1,"37":8,"38":1,"39":8,"40":1,"41":4,"42":1,"43":0,"44":1,"45":0,"46":1,"47":26,"48":1,"49":0,"50":1,"51":26,"52":1,"53":6,"54":1,"55":0,"56":1,"57":8,"58":0,"59":0,"60":0,"61":8,"62":8,"63":6,"64":2,"65":0,"66":1,"67":2,"68":1,"69":1},"f":{"0":1,"1":1,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":10,"15":8,"16":8,"17":4,"18":0,"19":0,"20":26,"21":0,"22":26,"23":6,"24":0,"25":8,"26":2},"b":{"0":[1,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[26,6],"6":[0,0],"7":[26,4],"8":[0,8],"9":[0,0],"10":[8,0],"11":[6,2]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/ComplexFieldAdapter.ts","sources":["/home/david/Development/geocas/src/mother/ComplexFieldAdapter.ts"],"names":[],"mappings":"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","sourcesContent":["import { isNumber } from '../checks/isNumber';\nimport { mustBeNumber } from '../checks/mustBeNumber';\nimport { complex, Complex } from './Complex';\nimport { FieldAdapter } from './FieldAdapter';\n\nconst ZERO: Complex = complex(0, 0);\n\nexport class ComplexFieldAdapter implements FieldAdapter<Complex> {\n    private _ε: Complex;\n    constructor(ε = 1e-6) {\n        this._ε = complex(mustBeNumber('ε', ε), 0);\n    }\n    get ε(): Complex {\n        return this._ε;\n    }\n    abs(z: Complex): Complex {\n        return z.__abs__();\n    }\n    add(lhs: Complex, rhs: Complex): Complex {\n        return lhs.__add__(rhs);\n    }\n    eq(lhs: Complex, rhs: Complex): boolean {\n        return lhs.x === rhs.x && lhs.y === rhs.y;\n    }\n    ne(lhs: Complex, rhs: Complex): boolean {\n        return lhs.x !== rhs.x || lhs.y !== rhs.y;\n    }\n    le(lhs: Complex, rhs: Complex): boolean {\n        return lhs.x <= rhs.x;\n    }\n    lt(lhs: Complex, rhs: Complex): boolean {\n        return lhs.x < rhs.x;\n    }\n    ge(lhs: Complex, rhs: Complex): boolean {\n        return lhs.x >= rhs.x;\n    }\n    gt(lhs: Complex, rhs: Complex): boolean {\n        return lhs.x > rhs.x;\n    }\n    sub(lhs: Complex, rhs: Complex): Complex {\n        return lhs.__sub__(rhs);\n    }\n    max(lhs: Complex, rhs: Complex): Complex {\n        return (lhs.x >= rhs.x) ? lhs : rhs;\n    }\n    min(lhs: Complex, rhs: Complex): Complex {\n        return (lhs.x <= rhs.x) ? lhs : rhs;\n    }\n    mul(lhs: Complex, rhs: Complex): Complex {\n        return lhs.__mul__(rhs);\n    }\n    mulByNumber(arg: Complex, α: number): Complex {\n        return arg.__mul__(α);\n    }\n    div(lhs: Complex, rhs: Complex): Complex {\n        return lhs.__div__(rhs);\n    }\n    neg(z: Complex): Complex {\n        return z.__neg__();\n    }\n    asString(z: Complex): string {\n        return z.toString();\n    }\n    cos(z: Complex): Complex {\n        return z.__cos__();\n    }\n    isField(z: Complex): z is Complex {\n        return isNumber(z.x) && isNumber(z.y);\n    }\n    isOne(z: Complex): boolean {\n        return z.x === 1 && z.y === 0;\n    }\n    isZero(z: Complex): boolean {\n        return z.x === 0 && z.y === 0;\n    }\n    get one(): Complex {\n        return complex(1, 0);\n    }\n    sin(z: Complex): Complex {\n        return z.__sin__();\n    }\n    sqrt(z: Complex): Complex {\n        if (z.x === 0) {\n            if (z.y === 0) {\n                return ZERO;\n            }\n            else {\n                throw new Error(`TODO: sqrt${z.toString()}`);\n            }\n        }\n        else {\n            if (z.y === 0) {\n                if (z.x > 0) {\n                    return complex(Math.sqrt(z.x), 0);\n                }\n                else {\n                    return complex(0, Math.sqrt(-z.x));\n                }\n            }\n            else {\n                throw new Error(`TODO: sqrt${z.toString()}`);\n            }\n        }\n    }\n    get zero(): Complex {\n        return ZERO;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b550f1e54bbee2375f6ec6aed1390cc0473d24a0"},"/home/david/Development/geocas/src/checks/mustBeNumber.ts":{"path":"/home/david/Development/geocas/src/checks/mustBeNumber.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":46}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":52}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":27}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":101}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}}},"fnMap":{"0":{"name":"beANumber","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":18}},"loc":{"start":{"line":6,"column":21},"end":{"line":8,"column":1}},"line":6},"1":{"name":"mustBeNumber","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":21}},"loc":{"start":{"line":9,"column":51},"end":{"line":12,"column":1}},"line":9}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":5,"6":5,"7":1},"f":{"0":0,"1":5},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/checks/mustBeNumber.ts","sources":["/home/david/Development/geocas/src/checks/mustBeNumber.ts"],"names":[],"mappings":";;;AAAA,+CAA8C;AAC9C,qDAAoD;AAEpD,SAAS,SAAS;IACd,OAAO,eAAe,CAAC;AAC3B,CAAC;AAED,SAAgB,YAAY,CAAC,IAAY,EAAE,KAAa,EAAE,cAA6B;IACnF,IAAA,yBAAW,EAAC,IAAI,EAAE,IAAA,mBAAQ,EAAC,KAAK,CAAC,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;IAC9D,OAAO,KAAK,CAAC;AACjB,CAAC;AAHD,oCAGC","sourcesContent":["import { isNumber } from '../checks/isNumber';\nimport { mustSatisfy } from '../checks/mustSatisfy';\n\nfunction beANumber() {\n    return \"be a `number`\";\n}\n\nexport function mustBeNumber(name: string, value: number, contextBuilder?: () => string): number {\n    mustSatisfy(name, isNumber(value), beANumber, contextBuilder);\n    return value;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"339c9ae7b3f93a26ea51740ce7cb8ebd2fba1b27"},"/home/david/Development/geocas/src/mother/Complex.ts":{"path":"/home/david/Development/geocas/src/mother/Complex.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":46}},"3":{"start":{"line":6,"column":15},"end":{"line":51,"column":5}},"4":{"start":{"line":8,"column":12},"end":{"line":8,"column":21}},"5":{"start":{"line":11,"column":12},"end":{"line":11,"column":21}},"6":{"start":{"line":14,"column":12},"end":{"line":14,"column":56}},"7":{"start":{"line":17,"column":12},"end":{"line":17,"column":49}},"8":{"start":{"line":20,"column":12},"end":{"line":20,"column":49}},"9":{"start":{"line":23,"column":12},"end":{"line":28,"column":13}},"10":{"start":{"line":24,"column":16},"end":{"line":24,"column":49}},"11":{"start":{"line":27,"column":16},"end":{"line":27,"column":77}},"12":{"start":{"line":31,"column":12},"end":{"line":37,"column":13}},"13":{"start":{"line":32,"column":16},"end":{"line":32,"column":49}},"14":{"start":{"line":35,"column":28},"end":{"line":35,"column":57}},"15":{"start":{"line":36,"column":16},"end":{"line":36,"column":97}},"16":{"start":{"line":40,"column":12},"end":{"line":40,"column":35}},"17":{"start":{"line":43,"column":12},"end":{"line":43,"column":54}},"18":{"start":{"line":46,"column":12},"end":{"line":46,"column":41}},"19":{"start":{"line":49,"column":12},"end":{"line":49,"column":41}},"20":{"start":{"line":52,"column":4},"end":{"line":52,"column":16}},"21":{"start":{"line":54,"column":0},"end":{"line":54,"column":26}}},"fnMap":{"0":{"name":"complex","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":16}},"loc":{"start":{"line":5,"column":23},"end":{"line":53,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":8},"end":{"line":7,"column":9}},"loc":{"start":{"line":7,"column":16},"end":{"line":9,"column":9}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":8},"end":{"line":10,"column":9}},"loc":{"start":{"line":10,"column":16},"end":{"line":12,"column":9}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":17},"end":{"line":13,"column":18}},"loc":{"start":{"line":13,"column":29},"end":{"line":15,"column":9}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":16,"column":17},"end":{"line":16,"column":18}},"loc":{"start":{"line":16,"column":32},"end":{"line":18,"column":9}},"line":16},"5":{"name":"(anonymous_5)","decl":{"start":{"line":19,"column":17},"end":{"line":19,"column":18}},"loc":{"start":{"line":19,"column":32},"end":{"line":21,"column":9}},"line":19},"6":{"name":"(anonymous_6)","decl":{"start":{"line":22,"column":17},"end":{"line":22,"column":18}},"loc":{"start":{"line":22,"column":32},"end":{"line":29,"column":9}},"line":22},"7":{"name":"(anonymous_7)","decl":{"start":{"line":30,"column":17},"end":{"line":30,"column":18}},"loc":{"start":{"line":30,"column":32},"end":{"line":38,"column":9}},"line":30},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":17},"end":{"line":39,"column":18}},"loc":{"start":{"line":39,"column":29},"end":{"line":41,"column":9}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":42,"column":18},"end":{"line":42,"column":19}},"loc":{"start":{"line":42,"column":30},"end":{"line":44,"column":9}},"line":42},"10":{"name":"(anonymous_10)","decl":{"start":{"line":45,"column":17},"end":{"line":45,"column":18}},"loc":{"start":{"line":45,"column":29},"end":{"line":47,"column":9}},"line":45},"11":{"name":"(anonymous_11)","decl":{"start":{"line":48,"column":17},"end":{"line":48,"column":18}},"loc":{"start":{"line":48,"column":29},"end":{"line":50,"column":9}},"line":48}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":12},"end":{"line":28,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":28,"column":13}},{"start":{"line":23,"column":12},"end":{"line":28,"column":13}}],"line":23},"1":{"loc":{"start":{"line":31,"column":12},"end":{"line":37,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":37,"column":13}},{"start":{"line":31,"column":12},"end":{"line":37,"column":13}}],"line":31}},"s":{"0":1,"1":1,"2":1,"3":46,"4":124,"5":86,"6":0,"7":0,"8":0,"9":18,"10":8,"11":10,"12":8,"13":0,"14":8,"15":8,"16":4,"17":0,"18":0,"19":0,"20":46,"21":1},"f":{"0":46,"1":124,"2":86,"3":0,"4":0,"5":0,"6":18,"7":8,"8":4,"9":0,"10":0,"11":0},"b":{"0":[8,10],"1":[0,8]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/Complex.ts","sources":["/home/david/Development/geocas/src/mother/Complex.ts"],"names":[],"mappings":";;;AAAA,+CAA8C;AAgB9C,SAAgB,OAAO,CAAC,CAAS,EAAE,CAAS;IACxC,IAAM,IAAI,GAAY;QAClB,IAAI,CAAC;YACD,OAAO,CAAC,CAAC;QACb,CAAC;QACD,IAAI,CAAC;YACD,OAAO,CAAC,CAAC;QACb,CAAC;QACD,OAAO,EAAP;YACI,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChD,CAAC;QACD,OAAO,EAAP,UAAQ,GAAY;YAChB,OAAO,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC;QACD,OAAO,EAAP,UAAQ,GAAY;YAChB,OAAO,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC;QACD,OAAO,EAAP,UAAQ,GAAqB;YACzB,IAAI,IAAA,mBAAQ,EAAC,GAAG,CAAC,EAAE;gBACf,OAAO,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;aACpC;iBACI;gBACD,OAAO,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;aAChE;QACL,CAAC;QACD,OAAO,EAAP,UAAQ,GAAqB;YACzB,IAAI,IAAA,mBAAQ,EAAC,GAAG,CAAC,EAAE;gBACf,OAAO,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;aACpC;iBACI;gBACD,IAAM,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC5C,OAAO,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;aACpF;QACL,CAAC;QACD,OAAO,EAAP;YACI,OAAO,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC;QACD,QAAQ,EAAR;YACI,OAAO,WAAI,CAAC,eAAK,CAAC,MAAG,CAAC;QAC1B,CAAC;QACD,OAAO,EAAP;YACI,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QACD,OAAO,EAAP;YACI,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;KACJ,CAAC;IACF,OAAO,IAAI,CAAC;AAChB,CAAC;AAhDD,0BAgDC","sourcesContent":["import { isNumber } from '../checks/isNumber';\n\nexport interface Complex {\n    x: number;\n    y: number;\n    __abs__(): Complex;\n    __add__(rhs: Complex): Complex;\n    __sub__(rhs: Complex): Complex;\n    __mul__(rhs: number | Complex): Complex;\n    __div__(rhs: number | Complex): Complex;\n    __neg__(): Complex;\n    toString(): string;\n    __cos__(): Complex;\n    __sin__(): Complex;\n}\n\nexport function complex(x: number, y: number): Complex {\n    const that: Complex = {\n        get x() {\n            return x;\n        },\n        get y() {\n            return y;\n        },\n        __abs__(): Complex {\n            return complex(Math.sqrt(x * x + y * y), 0);\n        },\n        __add__(rhs: Complex): Complex {\n            return complex(x + rhs.x, y + rhs.y);\n        },\n        __sub__(rhs: Complex): Complex {\n            return complex(x - rhs.x, y - rhs.y);\n        },\n        __mul__(rhs: number | Complex): Complex {\n            if (isNumber(rhs)) {\n                return complex(x * rhs, y * rhs);\n            }\n            else {\n                return complex(x * rhs.x - y * rhs.y, y * rhs.x + x * rhs.y);\n            }\n        },\n        __div__(rhs: number | Complex): Complex {\n            if (isNumber(rhs)) {\n                return complex(x / rhs, y / rhs);\n            }\n            else {\n                const denom = rhs.x * rhs.x + rhs.y * rhs.y;\n                return complex((x * rhs.x + y * rhs.y) / denom, (y * rhs.x - x * rhs.y) / denom);\n            }\n        },\n        __neg__(): Complex {\n            return complex(-x, -y);\n        },\n        toString(): string {\n            return `[${x}, ${y}]`;\n        },\n        __cos__(): Complex {\n            throw new Error(\"TODO: cos\");\n        },\n        __sin__(): Complex {\n            throw new Error(\"TODO: sin\");\n        }\n    };\n    return that;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"81faae2d949c5e20ec34013e36b504070fadaf31"},"/home/david/Development/geocas/src/mother/NumberFieldAdapter.ts":{"path":"/home/david/Development/geocas/src/mother/NumberFieldAdapter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":54}},"3":{"start":{"line":5,"column":40},"end":{"line":98,"column":3}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":39}},"5":{"start":{"line":7,"column":28},"end":{"line":7,"column":37}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":59}},"7":{"start":{"line":10,"column":4},"end":{"line":16,"column":7}},"8":{"start":{"line":12,"column":12},"end":{"line":12,"column":27}},"9":{"start":{"line":17,"column":4},"end":{"line":19,"column":6}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":29}},"11":{"start":{"line":20,"column":4},"end":{"line":22,"column":6}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":25}},"13":{"start":{"line":23,"column":4},"end":{"line":25,"column":6}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"15":{"start":{"line":26,"column":4},"end":{"line":28,"column":6}},"16":{"start":{"line":27,"column":8},"end":{"line":27,"column":27}},"17":{"start":{"line":29,"column":4},"end":{"line":31,"column":6}},"18":{"start":{"line":30,"column":8},"end":{"line":30,"column":26}},"19":{"start":{"line":32,"column":4},"end":{"line":34,"column":6}},"20":{"start":{"line":33,"column":8},"end":{"line":33,"column":25}},"21":{"start":{"line":35,"column":4},"end":{"line":37,"column":6}},"22":{"start":{"line":36,"column":8},"end":{"line":36,"column":26}},"23":{"start":{"line":38,"column":4},"end":{"line":40,"column":6}},"24":{"start":{"line":39,"column":8},"end":{"line":39,"column":25}},"25":{"start":{"line":41,"column":4},"end":{"line":43,"column":6}},"26":{"start":{"line":42,"column":8},"end":{"line":42,"column":25}},"27":{"start":{"line":44,"column":4},"end":{"line":46,"column":6}},"28":{"start":{"line":45,"column":8},"end":{"line":45,"column":34}},"29":{"start":{"line":47,"column":4},"end":{"line":49,"column":6}},"30":{"start":{"line":48,"column":8},"end":{"line":48,"column":34}},"31":{"start":{"line":50,"column":4},"end":{"line":52,"column":6}},"32":{"start":{"line":51,"column":8},"end":{"line":51,"column":25}},"33":{"start":{"line":53,"column":4},"end":{"line":55,"column":6}},"34":{"start":{"line":54,"column":8},"end":{"line":54,"column":27}},"35":{"start":{"line":56,"column":4},"end":{"line":58,"column":6}},"36":{"start":{"line":57,"column":8},"end":{"line":57,"column":25}},"37":{"start":{"line":59,"column":4},"end":{"line":61,"column":6}},"38":{"start":{"line":60,"column":8},"end":{"line":60,"column":20}},"39":{"start":{"line":62,"column":4},"end":{"line":64,"column":6}},"40":{"start":{"line":63,"column":8},"end":{"line":63,"column":30}},"41":{"start":{"line":65,"column":4},"end":{"line":67,"column":6}},"42":{"start":{"line":66,"column":8},"end":{"line":66,"column":29}},"43":{"start":{"line":68,"column":4},"end":{"line":70,"column":6}},"44":{"start":{"line":69,"column":8},"end":{"line":69,"column":39}},"45":{"start":{"line":71,"column":4},"end":{"line":73,"column":6}},"46":{"start":{"line":72,"column":8},"end":{"line":72,"column":25}},"47":{"start":{"line":74,"column":4},"end":{"line":76,"column":6}},"48":{"start":{"line":75,"column":8},"end":{"line":75,"column":25}},"49":{"start":{"line":77,"column":4},"end":{"line":83,"column":7}},"50":{"start":{"line":79,"column":12},"end":{"line":79,"column":21}},"51":{"start":{"line":84,"column":4},"end":{"line":86,"column":6}},"52":{"start":{"line":85,"column":8},"end":{"line":85,"column":29}},"53":{"start":{"line":87,"column":4},"end":{"line":89,"column":6}},"54":{"start":{"line":88,"column":8},"end":{"line":88,"column":30}},"55":{"start":{"line":90,"column":4},"end":{"line":96,"column":7}},"56":{"start":{"line":92,"column":12},"end":{"line":92,"column":21}},"57":{"start":{"line":97,"column":4},"end":{"line":97,"column":30}},"58":{"start":{"line":99,"column":0},"end":{"line":99,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":40},"end":{"line":5,"column":41}},"loc":{"start":{"line":5,"column":52},"end":{"line":98,"column":1}},"line":5},"1":{"name":"NumberFieldAdapter","decl":{"start":{"line":6,"column":13},"end":{"line":6,"column":31}},"loc":{"start":{"line":6,"column":35},"end":{"line":9,"column":5}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":13},"end":{"line":11,"column":14}},"loc":{"start":{"line":11,"column":25},"end":{"line":13,"column":9}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":39},"end":{"line":17,"column":40}},"loc":{"start":{"line":17,"column":54},"end":{"line":19,"column":5}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":39},"end":{"line":20,"column":40}},"loc":{"start":{"line":20,"column":59},"end":{"line":22,"column":5}},"line":20},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":38},"end":{"line":23,"column":39}},"loc":{"start":{"line":23,"column":58},"end":{"line":25,"column":5}},"line":23},"6":{"name":"(anonymous_6)","decl":{"start":{"line":26,"column":38},"end":{"line":26,"column":39}},"loc":{"start":{"line":26,"column":58},"end":{"line":28,"column":5}},"line":26},"7":{"name":"(anonymous_7)","decl":{"start":{"line":29,"column":38},"end":{"line":29,"column":39}},"loc":{"start":{"line":29,"column":58},"end":{"line":31,"column":5}},"line":29},"8":{"name":"(anonymous_8)","decl":{"start":{"line":32,"column":38},"end":{"line":32,"column":39}},"loc":{"start":{"line":32,"column":58},"end":{"line":34,"column":5}},"line":32},"9":{"name":"(anonymous_9)","decl":{"start":{"line":35,"column":38},"end":{"line":35,"column":39}},"loc":{"start":{"line":35,"column":58},"end":{"line":37,"column":5}},"line":35},"10":{"name":"(anonymous_10)","decl":{"start":{"line":38,"column":38},"end":{"line":38,"column":39}},"loc":{"start":{"line":38,"column":58},"end":{"line":40,"column":5}},"line":38},"11":{"name":"(anonymous_11)","decl":{"start":{"line":41,"column":39},"end":{"line":41,"column":40}},"loc":{"start":{"line":41,"column":59},"end":{"line":43,"column":5}},"line":41},"12":{"name":"(anonymous_12)","decl":{"start":{"line":44,"column":39},"end":{"line":44,"column":40}},"loc":{"start":{"line":44,"column":59},"end":{"line":46,"column":5}},"line":44},"13":{"name":"(anonymous_13)","decl":{"start":{"line":47,"column":39},"end":{"line":47,"column":40}},"loc":{"start":{"line":47,"column":59},"end":{"line":49,"column":5}},"line":47},"14":{"name":"(anonymous_14)","decl":{"start":{"line":50,"column":39},"end":{"line":50,"column":40}},"loc":{"start":{"line":50,"column":59},"end":{"line":52,"column":5}},"line":50},"15":{"name":"(anonymous_15)","decl":{"start":{"line":53,"column":47},"end":{"line":53,"column":48}},"loc":{"start":{"line":53,"column":69},"end":{"line":55,"column":5}},"line":53},"16":{"name":"(anonymous_16)","decl":{"start":{"line":56,"column":39},"end":{"line":56,"column":40}},"loc":{"start":{"line":56,"column":59},"end":{"line":58,"column":5}},"line":56},"17":{"name":"(anonymous_17)","decl":{"start":{"line":59,"column":39},"end":{"line":59,"column":40}},"loc":{"start":{"line":59,"column":54},"end":{"line":61,"column":5}},"line":59},"18":{"name":"(anonymous_18)","decl":{"start":{"line":62,"column":44},"end":{"line":62,"column":45}},"loc":{"start":{"line":62,"column":59},"end":{"line":64,"column":5}},"line":62},"19":{"name":"(anonymous_19)","decl":{"start":{"line":65,"column":39},"end":{"line":65,"column":40}},"loc":{"start":{"line":65,"column":54},"end":{"line":67,"column":5}},"line":65},"20":{"name":"(anonymous_20)","decl":{"start":{"line":68,"column":43},"end":{"line":68,"column":44}},"loc":{"start":{"line":68,"column":58},"end":{"line":70,"column":5}},"line":68},"21":{"name":"(anonymous_21)","decl":{"start":{"line":71,"column":41},"end":{"line":71,"column":42}},"loc":{"start":{"line":71,"column":56},"end":{"line":73,"column":5}},"line":71},"22":{"name":"(anonymous_22)","decl":{"start":{"line":74,"column":42},"end":{"line":74,"column":43}},"loc":{"start":{"line":74,"column":57},"end":{"line":76,"column":5}},"line":74},"23":{"name":"(anonymous_23)","decl":{"start":{"line":78,"column":13},"end":{"line":78,"column":14}},"loc":{"start":{"line":78,"column":25},"end":{"line":80,"column":9}},"line":78},"24":{"name":"(anonymous_24)","decl":{"start":{"line":84,"column":39},"end":{"line":84,"column":40}},"loc":{"start":{"line":84,"column":54},"end":{"line":86,"column":5}},"line":84},"25":{"name":"(anonymous_25)","decl":{"start":{"line":87,"column":40},"end":{"line":87,"column":41}},"loc":{"start":{"line":87,"column":55},"end":{"line":89,"column":5}},"line":87},"26":{"name":"(anonymous_26)","decl":{"start":{"line":91,"column":13},"end":{"line":91,"column":14}},"loc":{"start":{"line":91,"column":25},"end":{"line":93,"column":9}},"line":91}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":8},"end":{"line":7,"column":39}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":7,"column":39}},{"start":{"line":7,"column":8},"end":{"line":7,"column":39}}],"line":7}},"s":{"0":1,"1":1,"2":1,"3":1,"4":4,"5":4,"6":4,"7":1,"8":6,"9":1,"10":6,"11":1,"12":67,"13":1,"14":0,"15":1,"16":6,"17":1,"18":3,"19":1,"20":9,"21":1,"22":4,"23":1,"24":15,"25":1,"26":0,"27":1,"28":0,"29":1,"30":0,"31":1,"32":257,"33":1,"34":100,"35":1,"36":33,"37":1,"38":131,"39":1,"40":1,"41":1,"42":0,"43":1,"44":460,"45":1,"46":3,"47":1,"48":523,"49":1,"50":34,"51":1,"52":0,"53":1,"54":22,"55":1,"56":54,"57":1,"58":1},"f":{"0":1,"1":4,"2":6,"3":6,"4":67,"5":0,"6":6,"7":3,"8":9,"9":4,"10":15,"11":0,"12":0,"13":0,"14":257,"15":100,"16":33,"17":131,"18":1,"19":0,"20":460,"21":3,"22":523,"23":34,"24":0,"25":22,"26":54},"b":{"0":[4,0]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/NumberFieldAdapter.ts","sources":["/home/david/Development/geocas/src/mother/NumberFieldAdapter.ts"],"names":[],"mappings":"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","sourcesContent":["import { mustBeNumber } from '../checks/mustBeNumber';\nimport { FieldAdapter } from './FieldAdapter';\n\nexport class NumberFieldAdapter implements FieldAdapter<number> {\n    private _ε: number;\n    constructor(ε = 1e-6) {\n        this._ε = mustBeNumber('ε', ε);\n    }\n    get ε() {\n        return this._ε;\n    }\n    abs(arg: number): number {\n        return Math.abs(arg);\n    }\n    add(lhs: number, rhs: number): number {\n        return lhs + rhs;\n    }\n    eq(lhs: number, rhs: number): boolean {\n        return lhs === rhs;\n    }\n    ne(lhs: number, rhs: number): boolean {\n        return lhs !== rhs;\n    }\n    le(lhs: number, rhs: number): boolean {\n        return lhs <= rhs;\n    }\n    lt(lhs: number, rhs: number): boolean {\n        return lhs < rhs;\n    }\n    ge(lhs: number, rhs: number): boolean {\n        return lhs >= rhs;\n    }\n    gt(lhs: number, rhs: number): boolean {\n        return lhs > rhs;\n    }\n    sub(lhs: number, rhs: number): number {\n        return lhs - rhs;\n    }\n    max(lhs: number, rhs: number): number {\n        return Math.max(lhs, rhs);\n    }\n    min(lhs: number, rhs: number): number {\n        return Math.min(lhs, rhs);\n    }\n    mul(lhs: number, rhs: number): number {\n        return lhs * rhs;\n    }\n    mulByNumber(arg: number, alpha: number): number {\n        return arg * alpha;\n    }\n    div(lhs: number, rhs: number): number {\n        return lhs / rhs;\n    }\n    neg(arg: number): number {\n        return -arg;\n    }\n    asString(arg: number): string {\n        return arg.toString();\n    }\n    cos(arg: number): number {\n        return Math.cos(arg);\n    }\n    isField(arg: any): arg is number {\n        return typeof arg === 'number';\n    }\n    isOne(arg: number): boolean {\n        return arg === 1;\n    }\n    isZero(arg: number): boolean {\n        return arg === 0;\n    }\n    get one(): number {\n        return 1;\n    }\n    sin(arg: number): number {\n        return Math.sin(arg);\n    }\n    sqrt(arg: number): number {\n        return Math.sqrt(arg);\n    }\n    get zero(): number {\n        return 0;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c4029e478aa3ca3d8bdc513d603533875465ca43"},"/home/david/Development/geocas/src/math/gauss.ts":{"path":"/home/david/Development/geocas/src/math/gauss.ts","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":4,"column":62}},"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":23}},"2":{"start":{"line":6,"column":10},"end":{"line":6,"column":18}},"3":{"start":{"line":8,"column":12},"end":{"line":8,"column":14}},"4":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"5":{"start":{"line":9,"column":17},"end":{"line":9,"column":18}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":18}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":13}},"8":{"start":{"line":15,"column":18},"end":{"line":15,"column":40}},"9":{"start":{"line":16,"column":17},"end":{"line":16,"column":23}},"10":{"start":{"line":17,"column":4},"end":{"line":22,"column":5}},"11":{"start":{"line":17,"column":19},"end":{"line":17,"column":29}},"12":{"start":{"line":18,"column":8},"end":{"line":21,"column":9}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":42}},"14":{"start":{"line":20,"column":12},"end":{"line":20,"column":25}},"15":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"16":{"start":{"line":26,"column":20},"end":{"line":26,"column":25}},"17":{"start":{"line":27,"column":4},"end":{"line":31,"column":5}},"18":{"start":{"line":27,"column":22},"end":{"line":27,"column":23}},"19":{"start":{"line":28,"column":19},"end":{"line":28,"column":31}},"20":{"start":{"line":29,"column":8},"end":{"line":29,"column":36}},"21":{"start":{"line":30,"column":8},"end":{"line":30,"column":28}},"22":{"start":{"line":34,"column":4},"end":{"line":44,"column":5}},"23":{"start":{"line":34,"column":19},"end":{"line":34,"column":24}},"24":{"start":{"line":35,"column":16},"end":{"line":35,"column":36}},"25":{"start":{"line":36,"column":8},"end":{"line":43,"column":9}},"26":{"start":{"line":36,"column":26},"end":{"line":36,"column":27}},"27":{"start":{"line":37,"column":12},"end":{"line":42,"column":13}},"28":{"start":{"line":38,"column":16},"end":{"line":38,"column":35}},"29":{"start":{"line":41,"column":16},"end":{"line":41,"column":51}},"30":{"start":{"line":47,"column":12},"end":{"line":47,"column":34}},"31":{"start":{"line":48,"column":4},"end":{"line":53,"column":5}},"32":{"start":{"line":48,"column":17},"end":{"line":48,"column":22}},"33":{"start":{"line":49,"column":8},"end":{"line":49,"column":33}},"34":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"35":{"start":{"line":50,"column":21},"end":{"line":50,"column":26}},"36":{"start":{"line":51,"column":12},"end":{"line":51,"column":38}},"37":{"start":{"line":54,"column":4},"end":{"line":54,"column":13}},"38":{"start":{"line":61,"column":12},"end":{"line":61,"column":20}},"39":{"start":{"line":63,"column":4},"end":{"line":69,"column":5}},"40":{"start":{"line":63,"column":17},"end":{"line":63,"column":18}},"41":{"start":{"line":64,"column":17},"end":{"line":64,"column":21}},"42":{"start":{"line":65,"column":17},"end":{"line":65,"column":21}},"43":{"start":{"line":68,"column":8},"end":{"line":68,"column":20}},"44":{"start":{"line":70,"column":4},"end":{"line":73,"column":5}},"45":{"start":{"line":70,"column":17},"end":{"line":70,"column":18}},"46":{"start":{"line":71,"column":8},"end":{"line":71,"column":59}},"47":{"start":{"line":72,"column":8},"end":{"line":72,"column":31}},"48":{"start":{"line":74,"column":4},"end":{"line":74,"column":23}},"49":{"start":{"line":76,"column":0},"end":{"line":76,"column":22}}},"fnMap":{"0":{"name":"makeColumnVector","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":25}},"loc":{"start":{"line":7,"column":32},"end":{"line":13,"column":1}},"line":7},"1":{"name":"rowWithMaximumInColumn","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":46},"end":{"line":24,"column":1}},"line":14},"2":{"name":"swapRows","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":17}},"loc":{"start":{"line":25,"column":30},"end":{"line":32,"column":1}},"line":25},"3":{"name":"makeZeroBelow","decl":{"start":{"line":33,"column":9},"end":{"line":33,"column":22}},"loc":{"start":{"line":33,"column":32},"end":{"line":45,"column":1}},"line":33},"4":{"name":"solve","decl":{"start":{"line":46,"column":9},"end":{"line":46,"column":14}},"loc":{"start":{"line":46,"column":21},"end":{"line":55,"column":1}},"line":46},"5":{"name":"gauss","decl":{"start":{"line":60,"column":9},"end":{"line":60,"column":14}},"loc":{"start":{"line":60,"column":21},"end":{"line":75,"column":1}},"line":60}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":21,"column":9}},{"start":{"line":18,"column":8},"end":{"line":21,"column":9}}],"line":18},"1":{"loc":{"start":{"line":37,"column":12},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":42,"column":13}},{"start":{"line":37,"column":12},"end":{"line":42,"column":13}}],"line":37}},"s":{"0":1,"1":1,"2":1,"3":4,"4":4,"5":4,"6":8,"7":4,"8":8,"9":8,"10":8,"11":8,"12":5,"13":3,"14":3,"15":8,"16":8,"17":8,"18":8,"19":21,"20":21,"21":21,"22":8,"23":8,"24":5,"25":5,"26":5,"27":17,"28":5,"29":12,"30":4,"31":4,"32":4,"33":8,"34":8,"35":8,"36":5,"37":4,"38":4,"39":4,"40":4,"41":8,"42":8,"43":8,"44":4,"45":4,"46":8,"47":8,"48":4,"49":1},"f":{"0":4,"1":8,"2":8,"3":8,"4":4,"5":4},"b":{"0":[3,2],"1":[5,12]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/math/gauss.ts","sources":["/home/david/Development/geocas/src/math/gauss.ts"],"names":[],"mappings":"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","sourcesContent":["// import mustBeEQ from '../checks/mustBeEQ'\n// import mustBeNumber from '../checks/mustBeNumber'\n\nconst abs = Math.abs;\n\nfunction makeColumnVector(n: number, v: number): number[] {\n    const a: number[] = [];\n    for (let i = 0; i < n; i++) {\n        a.push(v);\n    }\n    return a;\n}\n\nfunction rowWithMaximumInColumn(A: number[][], column: number, N: number): number {\n    let biggest = abs(A[column][column]);\n    let maxRow = column;\n    for (let row = column + 1; row < N; row++) {\n        if (abs(A[row][column]) > biggest) {\n            biggest = abs(A[row][column]);\n            maxRow = row;\n        }\n    }\n    return maxRow;\n}\n\nfunction swapRows(A: number[][], i: number, j: number, N: number) {\n    const colLength = N + 1;\n    for (let column = i; column < colLength; column++) {\n        const temp = A[j][column];\n        A[j][column] = A[i][column];\n        A[i][column] = temp;\n    }\n}\n\nfunction makeZeroBelow(A: number[][], i: number, N: number): void {\n    for (let row = i + 1; row < N; row++) {\n        const c = -A[row][i] / A[i][i];\n        for (let column = i; column < N + 1; column++) {\n            if (i === column) {\n                A[row][column] = 0;\n            }\n            else {\n                A[row][column] += c * A[i][column];\n            }\n        }\n    }\n}\n\nfunction solve(A: number[][], N: number) {\n    const x = makeColumnVector(N, 0);\n    for (let i = N - 1; i > -1; i--) {\n        x[i] = A[i][N] / A[i][i];\n        for (let k = i - 1; k > -1; k--) {\n            A[k][N] -= A[k][i] * x[i];\n        }\n    }\n    return x;\n}\n\n\n/**\n * Gaussian elimination\n * Ax = b\n */\nexport function gauss(A: number[][], b: number[]): number[] {\n\n    const N = A.length;\n\n    // mustBeEQ('A.length', N, b.length)\n\n    for (let i = 0; i < N; i++) {\n        const Ai = A[i];\n        const bi = b[i];\n        // mustBeEQ(`A[${i}].length`, Ai.length, N)\n        // mustBeNumber(`b[${i}].length`, bi)\n        Ai.push(bi);\n    }\n\n    for (let j = 0; j < N; j++) {\n\n        swapRows(A, j, rowWithMaximumInColumn(A, j, N), N);\n\n        makeZeroBelow(A, j, N);\n    }\n\n    return solve(A, N);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b41f3c97bccbcf06e75e50722155668086d8c297"},"/home/david/Development/geocas/src/math/Algebra.ts":{"path":"/home/david/Development/geocas/src/math/Algebra.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":354}},"2":{"start":{"line":4,"column":14},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":18},"end":{"line":22,"column":1}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":19}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":23}},"6":{"start":{"line":8,"column":15},"end":{"line":8,"column":23}},"7":{"start":{"line":9,"column":4},"end":{"line":17,"column":5}},"8":{"start":{"line":9,"column":17},"end":{"line":9,"column":18}},"9":{"start":{"line":10,"column":17},"end":{"line":10,"column":21}},"10":{"start":{"line":11,"column":8},"end":{"line":16,"column":9}},"11":{"start":{"line":12,"column":12},"end":{"line":12,"column":28}},"12":{"start":{"line":15,"column":12},"end":{"line":15,"column":24}},"13":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"14":{"start":{"line":18,"column":17},"end":{"line":18,"column":18}},"15":{"start":{"line":19,"column":8},"end":{"line":19,"column":26}},"16":{"start":{"line":21,"column":4},"end":{"line":21,"column":18}},"17":{"start":{"line":23,"column":26},"end":{"line":235,"column":3}},"18":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"19":{"start":{"line":26,"column":8},"end":{"line":26,"column":25}},"20":{"start":{"line":28,"column":4},"end":{"line":30,"column":6}},"21":{"start":{"line":29,"column":8},"end":{"line":29,"column":80}},"22":{"start":{"line":31,"column":4},"end":{"line":33,"column":6}},"23":{"start":{"line":32,"column":8},"end":{"line":32,"column":75}},"24":{"start":{"line":34,"column":4},"end":{"line":36,"column":6}},"25":{"start":{"line":35,"column":8},"end":{"line":35,"column":76}},"26":{"start":{"line":37,"column":4},"end":{"line":39,"column":6}},"27":{"start":{"line":38,"column":8},"end":{"line":38,"column":79}},"28":{"start":{"line":40,"column":4},"end":{"line":42,"column":6}},"29":{"start":{"line":41,"column":8},"end":{"line":41,"column":79}},"30":{"start":{"line":43,"column":4},"end":{"line":45,"column":6}},"31":{"start":{"line":44,"column":8},"end":{"line":44,"column":79}},"32":{"start":{"line":46,"column":4},"end":{"line":56,"column":6}},"33":{"start":{"line":47,"column":8},"end":{"line":55,"column":9}},"34":{"start":{"line":48,"column":12},"end":{"line":48,"column":42}},"35":{"start":{"line":50,"column":13},"end":{"line":55,"column":9}},"36":{"start":{"line":51,"column":12},"end":{"line":51,"column":68}},"37":{"start":{"line":54,"column":12},"end":{"line":54,"column":26}},"38":{"start":{"line":57,"column":4},"end":{"line":67,"column":6}},"39":{"start":{"line":58,"column":8},"end":{"line":66,"column":9}},"40":{"start":{"line":59,"column":12},"end":{"line":59,"column":42}},"41":{"start":{"line":61,"column":13},"end":{"line":66,"column":9}},"42":{"start":{"line":62,"column":12},"end":{"line":62,"column":68}},"43":{"start":{"line":65,"column":12},"end":{"line":65,"column":26}},"44":{"start":{"line":68,"column":4},"end":{"line":78,"column":6}},"45":{"start":{"line":69,"column":8},"end":{"line":77,"column":9}},"46":{"start":{"line":70,"column":12},"end":{"line":70,"column":42}},"47":{"start":{"line":72,"column":13},"end":{"line":77,"column":9}},"48":{"start":{"line":73,"column":12},"end":{"line":73,"column":68}},"49":{"start":{"line":76,"column":12},"end":{"line":76,"column":26}},"50":{"start":{"line":79,"column":4},"end":{"line":89,"column":6}},"51":{"start":{"line":80,"column":8},"end":{"line":88,"column":9}},"52":{"start":{"line":81,"column":12},"end":{"line":81,"column":42}},"53":{"start":{"line":83,"column":13},"end":{"line":88,"column":9}},"54":{"start":{"line":84,"column":12},"end":{"line":84,"column":68}},"55":{"start":{"line":87,"column":12},"end":{"line":87,"column":26}},"56":{"start":{"line":90,"column":4},"end":{"line":100,"column":6}},"57":{"start":{"line":91,"column":8},"end":{"line":99,"column":9}},"58":{"start":{"line":92,"column":12},"end":{"line":92,"column":47}},"59":{"start":{"line":94,"column":13},"end":{"line":99,"column":9}},"60":{"start":{"line":95,"column":12},"end":{"line":95,"column":73}},"61":{"start":{"line":98,"column":12},"end":{"line":98,"column":26}},"62":{"start":{"line":101,"column":4},"end":{"line":111,"column":6}},"63":{"start":{"line":102,"column":8},"end":{"line":110,"column":9}},"64":{"start":{"line":103,"column":12},"end":{"line":103,"column":47}},"65":{"start":{"line":105,"column":13},"end":{"line":110,"column":9}},"66":{"start":{"line":106,"column":12},"end":{"line":106,"column":73}},"67":{"start":{"line":109,"column":12},"end":{"line":109,"column":26}},"68":{"start":{"line":112,"column":4},"end":{"line":122,"column":6}},"69":{"start":{"line":113,"column":8},"end":{"line":121,"column":9}},"70":{"start":{"line":114,"column":12},"end":{"line":114,"column":45}},"71":{"start":{"line":116,"column":13},"end":{"line":121,"column":9}},"72":{"start":{"line":117,"column":12},"end":{"line":117,"column":71}},"73":{"start":{"line":120,"column":12},"end":{"line":120,"column":26}},"74":{"start":{"line":123,"column":4},"end":{"line":133,"column":6}},"75":{"start":{"line":124,"column":8},"end":{"line":132,"column":9}},"76":{"start":{"line":125,"column":12},"end":{"line":125,"column":45}},"77":{"start":{"line":127,"column":13},"end":{"line":132,"column":9}},"78":{"start":{"line":128,"column":12},"end":{"line":128,"column":71}},"79":{"start":{"line":131,"column":12},"end":{"line":131,"column":26}},"80":{"start":{"line":134,"column":4},"end":{"line":144,"column":6}},"81":{"start":{"line":135,"column":8},"end":{"line":143,"column":9}},"82":{"start":{"line":136,"column":12},"end":{"line":136,"column":43}},"83":{"start":{"line":138,"column":13},"end":{"line":143,"column":9}},"84":{"start":{"line":139,"column":12},"end":{"line":139,"column":69}},"85":{"start":{"line":142,"column":12},"end":{"line":142,"column":26}},"86":{"start":{"line":145,"column":4},"end":{"line":155,"column":6}},"87":{"start":{"line":146,"column":8},"end":{"line":154,"column":9}},"88":{"start":{"line":147,"column":12},"end":{"line":147,"column":43}},"89":{"start":{"line":149,"column":13},"end":{"line":154,"column":9}},"90":{"start":{"line":150,"column":12},"end":{"line":150,"column":69}},"91":{"start":{"line":153,"column":12},"end":{"line":153,"column":26}},"92":{"start":{"line":156,"column":4},"end":{"line":166,"column":6}},"93":{"start":{"line":157,"column":8},"end":{"line":165,"column":9}},"94":{"start":{"line":158,"column":12},"end":{"line":158,"column":48}},"95":{"start":{"line":160,"column":13},"end":{"line":165,"column":9}},"96":{"start":{"line":161,"column":12},"end":{"line":161,"column":74}},"97":{"start":{"line":164,"column":12},"end":{"line":164,"column":26}},"98":{"start":{"line":167,"column":4},"end":{"line":177,"column":6}},"99":{"start":{"line":168,"column":8},"end":{"line":176,"column":9}},"100":{"start":{"line":169,"column":12},"end":{"line":169,"column":48}},"101":{"start":{"line":171,"column":13},"end":{"line":176,"column":9}},"102":{"start":{"line":172,"column":12},"end":{"line":172,"column":74}},"103":{"start":{"line":175,"column":12},"end":{"line":175,"column":26}},"104":{"start":{"line":178,"column":4},"end":{"line":188,"column":6}},"105":{"start":{"line":179,"column":8},"end":{"line":187,"column":9}},"106":{"start":{"line":180,"column":12},"end":{"line":180,"column":48}},"107":{"start":{"line":182,"column":13},"end":{"line":187,"column":9}},"108":{"start":{"line":183,"column":12},"end":{"line":183,"column":74}},"109":{"start":{"line":186,"column":12},"end":{"line":186,"column":26}},"110":{"start":{"line":189,"column":4},"end":{"line":199,"column":6}},"111":{"start":{"line":190,"column":8},"end":{"line":198,"column":9}},"112":{"start":{"line":191,"column":12},"end":{"line":191,"column":48}},"113":{"start":{"line":193,"column":13},"end":{"line":198,"column":9}},"114":{"start":{"line":194,"column":12},"end":{"line":194,"column":74}},"115":{"start":{"line":197,"column":12},"end":{"line":197,"column":26}},"116":{"start":{"line":200,"column":4},"end":{"line":210,"column":6}},"117":{"start":{"line":201,"column":8},"end":{"line":209,"column":9}},"118":{"start":{"line":202,"column":12},"end":{"line":202,"column":44}},"119":{"start":{"line":204,"column":13},"end":{"line":209,"column":9}},"120":{"start":{"line":205,"column":12},"end":{"line":205,"column":70}},"121":{"start":{"line":208,"column":12},"end":{"line":208,"column":26}},"122":{"start":{"line":211,"column":4},"end":{"line":221,"column":6}},"123":{"start":{"line":212,"column":8},"end":{"line":220,"column":9}},"124":{"start":{"line":213,"column":12},"end":{"line":213,"column":44}},"125":{"start":{"line":215,"column":13},"end":{"line":220,"column":9}},"126":{"start":{"line":216,"column":12},"end":{"line":216,"column":70}},"127":{"start":{"line":219,"column":12},"end":{"line":219,"column":26}},"128":{"start":{"line":222,"column":4},"end":{"line":224,"column":6}},"129":{"start":{"line":223,"column":8},"end":{"line":223,"column":37}},"130":{"start":{"line":225,"column":4},"end":{"line":227,"column":6}},"131":{"start":{"line":226,"column":8},"end":{"line":226,"column":37}},"132":{"start":{"line":228,"column":4},"end":{"line":230,"column":6}},"133":{"start":{"line":229,"column":8},"end":{"line":229,"column":33}},"134":{"start":{"line":231,"column":4},"end":{"line":233,"column":6}},"135":{"start":{"line":232,"column":8},"end":{"line":232,"column":33}},"136":{"start":{"line":234,"column":4},"end":{"line":234,"column":16}},"137":{"start":{"line":236,"column":0},"end":{"line":236,"column":20}},"138":{"start":{"line":237,"column":32},"end":{"line":252,"column":7}},"139":{"start":{"line":238,"column":4},"end":{"line":238,"column":47}},"140":{"start":{"line":240,"column":20},"end":{"line":240,"column":60}},"141":{"start":{"line":241,"column":8},"end":{"line":241,"column":24}},"142":{"start":{"line":242,"column":8},"end":{"line":242,"column":24}},"143":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"144":{"start":{"line":244,"column":12},"end":{"line":244,"column":90}},"145":{"start":{"line":246,"column":8},"end":{"line":248,"column":9}},"146":{"start":{"line":247,"column":12},"end":{"line":247,"column":90}},"147":{"start":{"line":249,"column":8},"end":{"line":249,"column":21}},"148":{"start":{"line":251,"column":4},"end":{"line":251,"column":22}},"149":{"start":{"line":253,"column":0},"end":{"line":253,"column":32}},"150":{"start":{"line":254,"column":29},"end":{"line":312,"column":13}},"151":{"start":{"line":255,"column":4},"end":{"line":255,"column":44}},"152":{"start":{"line":257,"column":8},"end":{"line":257,"column":48}},"153":{"start":{"line":257,"column":32},"end":{"line":257,"column":46}},"154":{"start":{"line":258,"column":20},"end":{"line":258,"column":66}},"155":{"start":{"line":259,"column":8},"end":{"line":259,"column":28}},"156":{"start":{"line":260,"column":8},"end":{"line":260,"column":21}},"157":{"start":{"line":262,"column":4},"end":{"line":264,"column":6}},"158":{"start":{"line":263,"column":8},"end":{"line":263,"column":74}},"159":{"start":{"line":265,"column":4},"end":{"line":267,"column":6}},"160":{"start":{"line":266,"column":8},"end":{"line":266,"column":54}},"161":{"start":{"line":268,"column":4},"end":{"line":270,"column":6}},"162":{"start":{"line":269,"column":8},"end":{"line":269,"column":63}},"163":{"start":{"line":271,"column":4},"end":{"line":304,"column":6}},"164":{"start":{"line":272,"column":16},"end":{"line":272,"column":35}},"165":{"start":{"line":273,"column":16},"end":{"line":273,"column":35}},"166":{"start":{"line":274,"column":8},"end":{"line":303,"column":9}},"167":{"start":{"line":275,"column":12},"end":{"line":275,"column":32}},"168":{"start":{"line":277,"column":13},"end":{"line":303,"column":9}},"169":{"start":{"line":278,"column":12},"end":{"line":291,"column":13}},"170":{"start":{"line":279,"column":25},"end":{"line":279,"column":30}},"171":{"start":{"line":280,"column":25},"end":{"line":280,"column":30}},"172":{"start":{"line":281,"column":16},"end":{"line":287,"column":17}},"173":{"start":{"line":282,"column":28},"end":{"line":282,"column":73}},"174":{"start":{"line":283,"column":20},"end":{"line":283,"column":60}},"175":{"start":{"line":286,"column":20},"end":{"line":286,"column":45}},"176":{"start":{"line":290,"column":16},"end":{"line":290,"column":41}},"177":{"start":{"line":293,"column":13},"end":{"line":303,"column":9}},"178":{"start":{"line":294,"column":12},"end":{"line":299,"column":13}},"179":{"start":{"line":295,"column":16},"end":{"line":295,"column":73}},"180":{"start":{"line":298,"column":16},"end":{"line":298,"column":41}},"181":{"start":{"line":302,"column":12},"end":{"line":302,"column":37}},"182":{"start":{"line":305,"column":4},"end":{"line":307,"column":6}},"183":{"start":{"line":306,"column":8},"end":{"line":306,"column":89}},"184":{"start":{"line":308,"column":4},"end":{"line":310,"column":6}},"185":{"start":{"line":309,"column":8},"end":{"line":309,"column":59}},"186":{"start":{"line":311,"column":4},"end":{"line":311,"column":19}},"187":{"start":{"line":313,"column":0},"end":{"line":313,"column":26}},"188":{"start":{"line":314,"column":29},"end":{"line":343,"column":13}},"189":{"start":{"line":315,"column":4},"end":{"line":315,"column":44}},"190":{"start":{"line":317,"column":8},"end":{"line":317,"column":48}},"191":{"start":{"line":317,"column":32},"end":{"line":317,"column":46}},"192":{"start":{"line":318,"column":20},"end":{"line":318,"column":66}},"193":{"start":{"line":319,"column":8},"end":{"line":319,"column":28}},"194":{"start":{"line":320,"column":8},"end":{"line":320,"column":21}},"195":{"start":{"line":322,"column":4},"end":{"line":324,"column":6}},"196":{"start":{"line":323,"column":8},"end":{"line":323,"column":74}},"197":{"start":{"line":325,"column":4},"end":{"line":327,"column":6}},"198":{"start":{"line":326,"column":8},"end":{"line":326,"column":54}},"199":{"start":{"line":328,"column":4},"end":{"line":330,"column":6}},"200":{"start":{"line":329,"column":8},"end":{"line":329,"column":63}},"201":{"start":{"line":331,"column":4},"end":{"line":335,"column":6}},"202":{"start":{"line":332,"column":16},"end":{"line":332,"column":35}},"203":{"start":{"line":333,"column":16},"end":{"line":333,"column":35}},"204":{"start":{"line":334,"column":8},"end":{"line":334,"column":33}},"205":{"start":{"line":336,"column":4},"end":{"line":338,"column":6}},"206":{"start":{"line":337,"column":8},"end":{"line":337,"column":89}},"207":{"start":{"line":339,"column":4},"end":{"line":341,"column":6}},"208":{"start":{"line":340,"column":8},"end":{"line":340,"column":59}},"209":{"start":{"line":342,"column":4},"end":{"line":342,"column":19}},"210":{"start":{"line":344,"column":0},"end":{"line":344,"column":26}},"211":{"start":{"line":345,"column":34},"end":{"line":455,"column":13}},"212":{"start":{"line":346,"column":4},"end":{"line":346,"column":49}},"213":{"start":{"line":348,"column":8},"end":{"line":348,"column":48}},"214":{"start":{"line":348,"column":32},"end":{"line":348,"column":46}},"215":{"start":{"line":349,"column":20},"end":{"line":349,"column":71}},"216":{"start":{"line":350,"column":8},"end":{"line":350,"column":28}},"217":{"start":{"line":351,"column":8},"end":{"line":351,"column":21}},"218":{"start":{"line":353,"column":4},"end":{"line":355,"column":6}},"219":{"start":{"line":354,"column":8},"end":{"line":354,"column":74}},"220":{"start":{"line":356,"column":4},"end":{"line":358,"column":6}},"221":{"start":{"line":357,"column":8},"end":{"line":357,"column":59}},"222":{"start":{"line":359,"column":4},"end":{"line":361,"column":6}},"223":{"start":{"line":360,"column":8},"end":{"line":360,"column":68}},"224":{"start":{"line":362,"column":4},"end":{"line":447,"column":6}},"225":{"start":{"line":363,"column":16},"end":{"line":363,"column":35}},"226":{"start":{"line":364,"column":16},"end":{"line":364,"column":35}},"227":{"start":{"line":365,"column":8},"end":{"line":446,"column":9}},"228":{"start":{"line":366,"column":12},"end":{"line":366,"column":48}},"229":{"start":{"line":368,"column":13},"end":{"line":446,"column":9}},"230":{"start":{"line":369,"column":21},"end":{"line":369,"column":26}},"231":{"start":{"line":370,"column":21},"end":{"line":370,"column":26}},"232":{"start":{"line":371,"column":12},"end":{"line":376,"column":13}},"233":{"start":{"line":372,"column":16},"end":{"line":372,"column":75}},"234":{"start":{"line":375,"column":16},"end":{"line":375,"column":46}},"235":{"start":{"line":378,"column":13},"end":{"line":446,"column":9}},"236":{"start":{"line":379,"column":21},"end":{"line":379,"column":26}},"237":{"start":{"line":380,"column":21},"end":{"line":380,"column":26}},"238":{"start":{"line":381,"column":12},"end":{"line":386,"column":13}},"239":{"start":{"line":382,"column":16},"end":{"line":382,"column":75}},"240":{"start":{"line":385,"column":16},"end":{"line":385,"column":46}},"241":{"start":{"line":388,"column":13},"end":{"line":446,"column":9}},"242":{"start":{"line":389,"column":12},"end":{"line":411,"column":13}},"243":{"start":{"line":390,"column":16},"end":{"line":390,"column":36}},"244":{"start":{"line":392,"column":17},"end":{"line":411,"column":13}},"245":{"start":{"line":393,"column":16},"end":{"line":393,"column":36}},"246":{"start":{"line":395,"column":17},"end":{"line":411,"column":13}},"247":{"start":{"line":396,"column":16},"end":{"line":407,"column":17}},"248":{"start":{"line":397,"column":20},"end":{"line":397,"column":29}},"249":{"start":{"line":399,"column":21},"end":{"line":407,"column":17}},"250":{"start":{"line":400,"column":20},"end":{"line":400,"column":77}},"251":{"start":{"line":402,"column":21},"end":{"line":407,"column":17}},"252":{"start":{"line":403,"column":20},"end":{"line":403,"column":56}},"253":{"start":{"line":406,"column":20},"end":{"line":406,"column":50}},"254":{"start":{"line":410,"column":16},"end":{"line":410,"column":46}},"255":{"start":{"line":413,"column":13},"end":{"line":446,"column":9}},"256":{"start":{"line":414,"column":12},"end":{"line":442,"column":13}},"257":{"start":{"line":415,"column":25},"end":{"line":415,"column":30}},"258":{"start":{"line":416,"column":25},"end":{"line":416,"column":30}},"259":{"start":{"line":417,"column":16},"end":{"line":427,"column":17}},"260":{"start":{"line":418,"column":20},"end":{"line":423,"column":21}},"261":{"start":{"line":419,"column":24},"end":{"line":419,"column":83}},"262":{"start":{"line":422,"column":24},"end":{"line":422,"column":54}},"263":{"start":{"line":426,"column":20},"end":{"line":426,"column":50}},"264":{"start":{"line":429,"column":17},"end":{"line":442,"column":13}},"265":{"start":{"line":430,"column":16},"end":{"line":435,"column":17}},"266":{"start":{"line":431,"column":20},"end":{"line":431,"column":52}},"267":{"start":{"line":434,"column":20},"end":{"line":434,"column":50}},"268":{"start":{"line":437,"column":17},"end":{"line":442,"column":13}},"269":{"start":{"line":438,"column":16},"end":{"line":438,"column":52}},"270":{"start":{"line":441,"column":16},"end":{"line":441,"column":46}},"271":{"start":{"line":445,"column":12},"end":{"line":445,"column":42}},"272":{"start":{"line":448,"column":4},"end":{"line":450,"column":6}},"273":{"start":{"line":449,"column":8},"end":{"line":449,"column":89}},"274":{"start":{"line":451,"column":4},"end":{"line":453,"column":6}},"275":{"start":{"line":452,"column":8},"end":{"line":452,"column":59}},"276":{"start":{"line":454,"column":4},"end":{"line":454,"column":24}},"277":{"start":{"line":456,"column":0},"end":{"line":456,"column":36}},"278":{"start":{"line":457,"column":32},"end":{"line":486,"column":13}},"279":{"start":{"line":458,"column":4},"end":{"line":458,"column":47}},"280":{"start":{"line":460,"column":8},"end":{"line":460,"column":48}},"281":{"start":{"line":460,"column":32},"end":{"line":460,"column":46}},"282":{"start":{"line":461,"column":20},"end":{"line":461,"column":66}},"283":{"start":{"line":462,"column":8},"end":{"line":462,"column":28}},"284":{"start":{"line":463,"column":8},"end":{"line":463,"column":21}},"285":{"start":{"line":465,"column":4},"end":{"line":467,"column":6}},"286":{"start":{"line":466,"column":8},"end":{"line":466,"column":74}},"287":{"start":{"line":468,"column":4},"end":{"line":470,"column":6}},"288":{"start":{"line":469,"column":8},"end":{"line":469,"column":57}},"289":{"start":{"line":471,"column":4},"end":{"line":473,"column":6}},"290":{"start":{"line":472,"column":8},"end":{"line":472,"column":66}},"291":{"start":{"line":474,"column":4},"end":{"line":478,"column":6}},"292":{"start":{"line":475,"column":16},"end":{"line":475,"column":35}},"293":{"start":{"line":476,"column":16},"end":{"line":476,"column":35}},"294":{"start":{"line":477,"column":8},"end":{"line":477,"column":36}},"295":{"start":{"line":479,"column":4},"end":{"line":481,"column":6}},"296":{"start":{"line":480,"column":8},"end":{"line":480,"column":89}},"297":{"start":{"line":482,"column":4},"end":{"line":484,"column":6}},"298":{"start":{"line":483,"column":8},"end":{"line":483,"column":59}},"299":{"start":{"line":485,"column":4},"end":{"line":485,"column":22}},"300":{"start":{"line":487,"column":0},"end":{"line":487,"column":32}},"301":{"start":{"line":488,"column":35},"end":{"line":517,"column":13}},"302":{"start":{"line":489,"column":4},"end":{"line":489,"column":50}},"303":{"start":{"line":491,"column":8},"end":{"line":491,"column":48}},"304":{"start":{"line":491,"column":32},"end":{"line":491,"column":46}},"305":{"start":{"line":492,"column":20},"end":{"line":492,"column":72}},"306":{"start":{"line":493,"column":8},"end":{"line":493,"column":28}},"307":{"start":{"line":494,"column":8},"end":{"line":494,"column":21}},"308":{"start":{"line":496,"column":4},"end":{"line":498,"column":6}},"309":{"start":{"line":497,"column":8},"end":{"line":497,"column":74}},"310":{"start":{"line":499,"column":4},"end":{"line":501,"column":6}},"311":{"start":{"line":500,"column":8},"end":{"line":500,"column":60}},"312":{"start":{"line":502,"column":4},"end":{"line":504,"column":6}},"313":{"start":{"line":503,"column":8},"end":{"line":503,"column":69}},"314":{"start":{"line":505,"column":4},"end":{"line":509,"column":6}},"315":{"start":{"line":506,"column":16},"end":{"line":506,"column":35}},"316":{"start":{"line":507,"column":16},"end":{"line":507,"column":35}},"317":{"start":{"line":508,"column":8},"end":{"line":508,"column":39}},"318":{"start":{"line":510,"column":4},"end":{"line":512,"column":6}},"319":{"start":{"line":511,"column":8},"end":{"line":511,"column":89}},"320":{"start":{"line":513,"column":4},"end":{"line":515,"column":6}},"321":{"start":{"line":514,"column":8},"end":{"line":514,"column":60}},"322":{"start":{"line":516,"column":4},"end":{"line":516,"column":25}},"323":{"start":{"line":518,"column":0},"end":{"line":518,"column":38}},"324":{"start":{"line":519,"column":35},"end":{"line":548,"column":13}},"325":{"start":{"line":520,"column":4},"end":{"line":520,"column":50}},"326":{"start":{"line":522,"column":8},"end":{"line":522,"column":48}},"327":{"start":{"line":522,"column":32},"end":{"line":522,"column":46}},"328":{"start":{"line":523,"column":20},"end":{"line":523,"column":72}},"329":{"start":{"line":524,"column":8},"end":{"line":524,"column":28}},"330":{"start":{"line":525,"column":8},"end":{"line":525,"column":21}},"331":{"start":{"line":527,"column":4},"end":{"line":529,"column":6}},"332":{"start":{"line":528,"column":8},"end":{"line":528,"column":74}},"333":{"start":{"line":530,"column":4},"end":{"line":532,"column":6}},"334":{"start":{"line":531,"column":8},"end":{"line":531,"column":60}},"335":{"start":{"line":533,"column":4},"end":{"line":535,"column":6}},"336":{"start":{"line":534,"column":8},"end":{"line":534,"column":69}},"337":{"start":{"line":536,"column":4},"end":{"line":540,"column":6}},"338":{"start":{"line":537,"column":16},"end":{"line":537,"column":35}},"339":{"start":{"line":538,"column":16},"end":{"line":538,"column":35}},"340":{"start":{"line":539,"column":8},"end":{"line":539,"column":39}},"341":{"start":{"line":541,"column":4},"end":{"line":543,"column":6}},"342":{"start":{"line":542,"column":8},"end":{"line":542,"column":89}},"343":{"start":{"line":544,"column":4},"end":{"line":546,"column":6}},"344":{"start":{"line":545,"column":8},"end":{"line":545,"column":60}},"345":{"start":{"line":547,"column":4},"end":{"line":547,"column":25}},"346":{"start":{"line":549,"column":0},"end":{"line":549,"column":38}},"347":{"start":{"line":554,"column":36},"end":{"line":590,"column":7}},"348":{"start":{"line":555,"column":4},"end":{"line":555,"column":51}},"349":{"start":{"line":557,"column":8},"end":{"line":557,"column":48}},"350":{"start":{"line":557,"column":32},"end":{"line":557,"column":46}},"351":{"start":{"line":558,"column":20},"end":{"line":558,"column":68}},"352":{"start":{"line":559,"column":8},"end":{"line":559,"column":32}},"353":{"start":{"line":560,"column":8},"end":{"line":560,"column":28}},"354":{"start":{"line":561,"column":8},"end":{"line":563,"column":9}},"355":{"start":{"line":562,"column":12},"end":{"line":562,"column":58}},"356":{"start":{"line":564,"column":8},"end":{"line":564,"column":21}},"357":{"start":{"line":566,"column":4},"end":{"line":568,"column":6}},"358":{"start":{"line":567,"column":8},"end":{"line":567,"column":26}},"359":{"start":{"line":569,"column":4},"end":{"line":571,"column":6}},"360":{"start":{"line":570,"column":8},"end":{"line":570,"column":65}},"361":{"start":{"line":572,"column":4},"end":{"line":579,"column":6}},"362":{"start":{"line":573,"column":8},"end":{"line":578,"column":9}},"363":{"start":{"line":574,"column":12},"end":{"line":574,"column":69}},"364":{"start":{"line":577,"column":12},"end":{"line":577,"column":24}},"365":{"start":{"line":580,"column":4},"end":{"line":582,"column":6}},"366":{"start":{"line":581,"column":8},"end":{"line":581,"column":20}},"367":{"start":{"line":583,"column":4},"end":{"line":585,"column":6}},"368":{"start":{"line":584,"column":8},"end":{"line":584,"column":48}},"369":{"start":{"line":586,"column":4},"end":{"line":588,"column":6}},"370":{"start":{"line":587,"column":8},"end":{"line":587,"column":48}},"371":{"start":{"line":589,"column":4},"end":{"line":589,"column":26}},"372":{"start":{"line":591,"column":0},"end":{"line":591,"column":40}},"373":{"start":{"line":592,"column":32},"end":{"line":628,"column":7}},"374":{"start":{"line":593,"column":4},"end":{"line":593,"column":47}},"375":{"start":{"line":595,"column":8},"end":{"line":595,"column":48}},"376":{"start":{"line":595,"column":32},"end":{"line":595,"column":46}},"377":{"start":{"line":596,"column":20},"end":{"line":596,"column":64}},"378":{"start":{"line":597,"column":8},"end":{"line":597,"column":28}},"379":{"start":{"line":598,"column":8},"end":{"line":598,"column":28}},"380":{"start":{"line":599,"column":8},"end":{"line":599,"column":21}},"381":{"start":{"line":601,"column":4},"end":{"line":603,"column":6}},"382":{"start":{"line":602,"column":8},"end":{"line":602,"column":21}},"383":{"start":{"line":604,"column":4},"end":{"line":606,"column":6}},"384":{"start":{"line":605,"column":8},"end":{"line":605,"column":59}},"385":{"start":{"line":607,"column":4},"end":{"line":614,"column":6}},"386":{"start":{"line":608,"column":8},"end":{"line":613,"column":9}},"387":{"start":{"line":609,"column":12},"end":{"line":609,"column":63}},"388":{"start":{"line":612,"column":12},"end":{"line":612,"column":24}},"389":{"start":{"line":615,"column":4},"end":{"line":617,"column":6}},"390":{"start":{"line":616,"column":8},"end":{"line":616,"column":20}},"391":{"start":{"line":618,"column":4},"end":{"line":620,"column":6}},"392":{"start":{"line":619,"column":8},"end":{"line":619,"column":37}},"393":{"start":{"line":621,"column":4},"end":{"line":623,"column":6}},"394":{"start":{"line":622,"column":8},"end":{"line":622,"column":55}},"395":{"start":{"line":624,"column":4},"end":{"line":626,"column":6}},"396":{"start":{"line":625,"column":8},"end":{"line":625,"column":37}},"397":{"start":{"line":627,"column":4},"end":{"line":627,"column":22}},"398":{"start":{"line":629,"column":0},"end":{"line":629,"column":32}},"399":{"start":{"line":630,"column":30},"end":{"line":691,"column":13}},"400":{"start":{"line":631,"column":4},"end":{"line":631,"column":45}},"401":{"start":{"line":633,"column":8},"end":{"line":633,"column":48}},"402":{"start":{"line":633,"column":32},"end":{"line":633,"column":46}},"403":{"start":{"line":634,"column":20},"end":{"line":634,"column":67}},"404":{"start":{"line":635,"column":8},"end":{"line":635,"column":28}},"405":{"start":{"line":636,"column":8},"end":{"line":636,"column":21}},"406":{"start":{"line":638,"column":4},"end":{"line":640,"column":6}},"407":{"start":{"line":639,"column":8},"end":{"line":639,"column":74}},"408":{"start":{"line":641,"column":4},"end":{"line":643,"column":6}},"409":{"start":{"line":642,"column":8},"end":{"line":642,"column":64}},"410":{"start":{"line":644,"column":4},"end":{"line":683,"column":6}},"411":{"start":{"line":645,"column":16},"end":{"line":645,"column":35}},"412":{"start":{"line":646,"column":16},"end":{"line":646,"column":35}},"413":{"start":{"line":647,"column":8},"end":{"line":682,"column":9}},"414":{"start":{"line":648,"column":12},"end":{"line":648,"column":36}},"415":{"start":{"line":650,"column":13},"end":{"line":682,"column":9}},"416":{"start":{"line":651,"column":21},"end":{"line":651,"column":26}},"417":{"start":{"line":652,"column":21},"end":{"line":652,"column":26}},"418":{"start":{"line":653,"column":12},"end":{"line":653,"column":79}},"419":{"start":{"line":655,"column":13},"end":{"line":682,"column":9}},"420":{"start":{"line":656,"column":21},"end":{"line":656,"column":26}},"421":{"start":{"line":657,"column":21},"end":{"line":657,"column":26}},"422":{"start":{"line":658,"column":12},"end":{"line":658,"column":79}},"423":{"start":{"line":660,"column":13},"end":{"line":682,"column":9}},"424":{"start":{"line":661,"column":21},"end":{"line":661,"column":26}},"425":{"start":{"line":662,"column":21},"end":{"line":662,"column":26}},"426":{"start":{"line":663,"column":12},"end":{"line":668,"column":13}},"427":{"start":{"line":664,"column":16},"end":{"line":664,"column":71}},"428":{"start":{"line":667,"column":16},"end":{"line":667,"column":42}},"429":{"start":{"line":670,"column":13},"end":{"line":682,"column":9}},"430":{"start":{"line":671,"column":21},"end":{"line":671,"column":26}},"431":{"start":{"line":672,"column":21},"end":{"line":672,"column":26}},"432":{"start":{"line":673,"column":12},"end":{"line":678,"column":13}},"433":{"start":{"line":674,"column":16},"end":{"line":674,"column":71}},"434":{"start":{"line":677,"column":16},"end":{"line":677,"column":42}},"435":{"start":{"line":681,"column":12},"end":{"line":681,"column":38}},"436":{"start":{"line":684,"column":4},"end":{"line":686,"column":6}},"437":{"start":{"line":685,"column":8},"end":{"line":685,"column":89}},"438":{"start":{"line":687,"column":4},"end":{"line":689,"column":6}},"439":{"start":{"line":688,"column":8},"end":{"line":688,"column":59}},"440":{"start":{"line":690,"column":4},"end":{"line":690,"column":20}},"441":{"start":{"line":692,"column":0},"end":{"line":692,"column":28}},"442":{"start":{"line":693,"column":31},"end":{"line":765,"column":13}},"443":{"start":{"line":694,"column":4},"end":{"line":694,"column":46}},"444":{"start":{"line":696,"column":8},"end":{"line":696,"column":48}},"445":{"start":{"line":696,"column":32},"end":{"line":696,"column":46}},"446":{"start":{"line":697,"column":20},"end":{"line":697,"column":68}},"447":{"start":{"line":698,"column":8},"end":{"line":698,"column":28}},"448":{"start":{"line":699,"column":8},"end":{"line":699,"column":21}},"449":{"start":{"line":701,"column":4},"end":{"line":703,"column":6}},"450":{"start":{"line":702,"column":8},"end":{"line":702,"column":74}},"451":{"start":{"line":704,"column":4},"end":{"line":706,"column":6}},"452":{"start":{"line":705,"column":8},"end":{"line":705,"column":65}},"453":{"start":{"line":707,"column":4},"end":{"line":757,"column":6}},"454":{"start":{"line":708,"column":16},"end":{"line":708,"column":35}},"455":{"start":{"line":709,"column":16},"end":{"line":709,"column":35}},"456":{"start":{"line":710,"column":8},"end":{"line":756,"column":9}},"457":{"start":{"line":711,"column":12},"end":{"line":719,"column":13}},"458":{"start":{"line":712,"column":16},"end":{"line":712,"column":57}},"459":{"start":{"line":714,"column":17},"end":{"line":719,"column":13}},"460":{"start":{"line":715,"column":16},"end":{"line":715,"column":36}},"461":{"start":{"line":718,"column":16},"end":{"line":718,"column":43}},"462":{"start":{"line":721,"column":13},"end":{"line":756,"column":9}},"463":{"start":{"line":722,"column":12},"end":{"line":735,"column":13}},"464":{"start":{"line":723,"column":16},"end":{"line":723,"column":57}},"465":{"start":{"line":725,"column":17},"end":{"line":735,"column":13}},"466":{"start":{"line":726,"column":16},"end":{"line":731,"column":17}},"467":{"start":{"line":727,"column":20},"end":{"line":727,"column":40}},"468":{"start":{"line":730,"column":20},"end":{"line":730,"column":47}},"469":{"start":{"line":734,"column":16},"end":{"line":734,"column":43}},"470":{"start":{"line":737,"column":13},"end":{"line":756,"column":9}},"471":{"start":{"line":738,"column":24},"end":{"line":738,"column":57}},"472":{"start":{"line":739,"column":12},"end":{"line":744,"column":13}},"473":{"start":{"line":740,"column":16},"end":{"line":740,"column":65}},"474":{"start":{"line":743,"column":16},"end":{"line":743,"column":57}},"475":{"start":{"line":746,"column":13},"end":{"line":756,"column":9}},"476":{"start":{"line":747,"column":12},"end":{"line":752,"column":13}},"477":{"start":{"line":748,"column":16},"end":{"line":748,"column":57}},"478":{"start":{"line":751,"column":16},"end":{"line":751,"column":133}},"479":{"start":{"line":755,"column":12},"end":{"line":755,"column":39}},"480":{"start":{"line":758,"column":4},"end":{"line":760,"column":6}},"481":{"start":{"line":759,"column":8},"end":{"line":759,"column":67}},"482":{"start":{"line":761,"column":4},"end":{"line":763,"column":6}},"483":{"start":{"line":762,"column":8},"end":{"line":762,"column":59}},"484":{"start":{"line":764,"column":4},"end":{"line":764,"column":21}},"485":{"start":{"line":766,"column":0},"end":{"line":766,"column":30}},"486":{"start":{"line":767,"column":33},"end":{"line":795,"column":7}},"487":{"start":{"line":768,"column":4},"end":{"line":768,"column":48}},"488":{"start":{"line":770,"column":8},"end":{"line":770,"column":48}},"489":{"start":{"line":770,"column":32},"end":{"line":770,"column":46}},"490":{"start":{"line":771,"column":20},"end":{"line":771,"column":71}},"491":{"start":{"line":772,"column":8},"end":{"line":772,"column":28}},"492":{"start":{"line":773,"column":8},"end":{"line":773,"column":28}},"493":{"start":{"line":774,"column":8},"end":{"line":774,"column":21}},"494":{"start":{"line":776,"column":4},"end":{"line":778,"column":6}},"495":{"start":{"line":777,"column":8},"end":{"line":777,"column":52}},"496":{"start":{"line":779,"column":4},"end":{"line":781,"column":6}},"497":{"start":{"line":780,"column":8},"end":{"line":780,"column":50}},"498":{"start":{"line":782,"column":4},"end":{"line":784,"column":6}},"499":{"start":{"line":783,"column":8},"end":{"line":783,"column":58}},"500":{"start":{"line":785,"column":4},"end":{"line":787,"column":6}},"501":{"start":{"line":786,"column":8},"end":{"line":786,"column":54}},"502":{"start":{"line":788,"column":4},"end":{"line":790,"column":6}},"503":{"start":{"line":789,"column":8},"end":{"line":789,"column":50}},"504":{"start":{"line":791,"column":4},"end":{"line":793,"column":6}},"505":{"start":{"line":792,"column":8},"end":{"line":792,"column":38}},"506":{"start":{"line":794,"column":4},"end":{"line":794,"column":23}},"507":{"start":{"line":796,"column":0},"end":{"line":796,"column":34}},"508":{"start":{"line":797,"column":33},"end":{"line":825,"column":7}},"509":{"start":{"line":798,"column":4},"end":{"line":798,"column":48}},"510":{"start":{"line":800,"column":8},"end":{"line":800,"column":48}},"511":{"start":{"line":800,"column":32},"end":{"line":800,"column":46}},"512":{"start":{"line":801,"column":20},"end":{"line":801,"column":71}},"513":{"start":{"line":802,"column":8},"end":{"line":802,"column":28}},"514":{"start":{"line":803,"column":8},"end":{"line":803,"column":28}},"515":{"start":{"line":804,"column":8},"end":{"line":804,"column":21}},"516":{"start":{"line":806,"column":4},"end":{"line":808,"column":6}},"517":{"start":{"line":807,"column":8},"end":{"line":807,"column":52}},"518":{"start":{"line":809,"column":4},"end":{"line":811,"column":6}},"519":{"start":{"line":810,"column":8},"end":{"line":810,"column":50}},"520":{"start":{"line":812,"column":4},"end":{"line":814,"column":6}},"521":{"start":{"line":813,"column":8},"end":{"line":813,"column":58}},"522":{"start":{"line":815,"column":4},"end":{"line":817,"column":6}},"523":{"start":{"line":816,"column":8},"end":{"line":816,"column":54}},"524":{"start":{"line":818,"column":4},"end":{"line":820,"column":6}},"525":{"start":{"line":819,"column":8},"end":{"line":819,"column":50}},"526":{"start":{"line":821,"column":4},"end":{"line":823,"column":6}},"527":{"start":{"line":822,"column":8},"end":{"line":822,"column":38}},"528":{"start":{"line":824,"column":4},"end":{"line":824,"column":23}},"529":{"start":{"line":826,"column":0},"end":{"line":826,"column":34}},"530":{"start":{"line":827,"column":29},"end":{"line":855,"column":7}},"531":{"start":{"line":828,"column":4},"end":{"line":828,"column":44}},"532":{"start":{"line":830,"column":8},"end":{"line":830,"column":48}},"533":{"start":{"line":830,"column":32},"end":{"line":830,"column":46}},"534":{"start":{"line":831,"column":20},"end":{"line":831,"column":67}},"535":{"start":{"line":832,"column":8},"end":{"line":832,"column":28}},"536":{"start":{"line":833,"column":8},"end":{"line":833,"column":28}},"537":{"start":{"line":834,"column":8},"end":{"line":834,"column":21}},"538":{"start":{"line":836,"column":4},"end":{"line":838,"column":6}},"539":{"start":{"line":837,"column":8},"end":{"line":837,"column":52}},"540":{"start":{"line":839,"column":4},"end":{"line":841,"column":6}},"541":{"start":{"line":840,"column":8},"end":{"line":840,"column":46}},"542":{"start":{"line":842,"column":4},"end":{"line":844,"column":6}},"543":{"start":{"line":843,"column":8},"end":{"line":843,"column":54}},"544":{"start":{"line":845,"column":4},"end":{"line":847,"column":6}},"545":{"start":{"line":846,"column":8},"end":{"line":846,"column":50}},"546":{"start":{"line":848,"column":4},"end":{"line":850,"column":6}},"547":{"start":{"line":849,"column":8},"end":{"line":849,"column":46}},"548":{"start":{"line":851,"column":4},"end":{"line":853,"column":6}},"549":{"start":{"line":852,"column":8},"end":{"line":852,"column":38}},"550":{"start":{"line":854,"column":4},"end":{"line":854,"column":19}},"551":{"start":{"line":856,"column":0},"end":{"line":856,"column":26}},"552":{"start":{"line":857,"column":29},"end":{"line":885,"column":7}},"553":{"start":{"line":858,"column":4},"end":{"line":858,"column":44}},"554":{"start":{"line":860,"column":8},"end":{"line":860,"column":48}},"555":{"start":{"line":860,"column":32},"end":{"line":860,"column":46}},"556":{"start":{"line":861,"column":20},"end":{"line":861,"column":67}},"557":{"start":{"line":862,"column":8},"end":{"line":862,"column":28}},"558":{"start":{"line":863,"column":8},"end":{"line":863,"column":28}},"559":{"start":{"line":864,"column":8},"end":{"line":864,"column":21}},"560":{"start":{"line":866,"column":4},"end":{"line":868,"column":6}},"561":{"start":{"line":867,"column":8},"end":{"line":867,"column":52}},"562":{"start":{"line":869,"column":4},"end":{"line":871,"column":6}},"563":{"start":{"line":870,"column":8},"end":{"line":870,"column":46}},"564":{"start":{"line":872,"column":4},"end":{"line":874,"column":6}},"565":{"start":{"line":873,"column":8},"end":{"line":873,"column":54}},"566":{"start":{"line":875,"column":4},"end":{"line":877,"column":6}},"567":{"start":{"line":876,"column":8},"end":{"line":876,"column":50}},"568":{"start":{"line":878,"column":4},"end":{"line":880,"column":6}},"569":{"start":{"line":879,"column":8},"end":{"line":879,"column":46}},"570":{"start":{"line":881,"column":4},"end":{"line":883,"column":6}},"571":{"start":{"line":882,"column":8},"end":{"line":882,"column":38}},"572":{"start":{"line":884,"column":4},"end":{"line":884,"column":19}},"573":{"start":{"line":886,"column":0},"end":{"line":886,"column":26}},"574":{"start":{"line":887,"column":29},"end":{"line":964,"column":3}},"575":{"start":{"line":889,"column":8},"end":{"line":889,"column":24}},"576":{"start":{"line":890,"column":8},"end":{"line":890,"column":26}},"577":{"start":{"line":891,"column":8},"end":{"line":891,"column":25}},"578":{"start":{"line":896,"column":8},"end":{"line":896,"column":54}},"579":{"start":{"line":897,"column":8},"end":{"line":897,"column":30}},"580":{"start":{"line":900,"column":8},"end":{"line":917,"column":9}},"581":{"start":{"line":900,"column":21},"end":{"line":900,"column":22}},"582":{"start":{"line":902,"column":25},"end":{"line":902,"column":54}},"583":{"start":{"line":905,"column":26},"end":{"line":905,"column":43}},"584":{"start":{"line":906,"column":12},"end":{"line":916,"column":13}},"585":{"start":{"line":906,"column":25},"end":{"line":906,"column":26}},"586":{"start":{"line":907,"column":31},"end":{"line":907,"column":44}},"587":{"start":{"line":908,"column":31},"end":{"line":908,"column":62}},"588":{"start":{"line":909,"column":28},"end":{"line":909,"column":51}},"589":{"start":{"line":910,"column":16},"end":{"line":915,"column":17}},"590":{"start":{"line":911,"column":20},"end":{"line":911,"column":43}},"591":{"start":{"line":914,"column":20},"end":{"line":914,"column":95}},"592":{"start":{"line":919,"column":4},"end":{"line":936,"column":6}},"593":{"start":{"line":920,"column":20},"end":{"line":920,"column":24}},"594":{"start":{"line":921,"column":8},"end":{"line":935,"column":9}},"595":{"start":{"line":922,"column":12},"end":{"line":930,"column":27}},"596":{"start":{"line":923,"column":16},"end":{"line":928,"column":17}},"597":{"start":{"line":924,"column":37},"end":{"line":924,"column":51}},"598":{"start":{"line":925,"column":20},"end":{"line":927,"column":21}},"599":{"start":{"line":926,"column":24},"end":{"line":926,"column":57}},"600":{"start":{"line":929,"column":16},"end":{"line":929,"column":41}},"601":{"start":{"line":934,"column":12},"end":{"line":934,"column":35}},"602":{"start":{"line":937,"column":4},"end":{"line":941,"column":6}},"603":{"start":{"line":938,"column":16},"end":{"line":938,"column":28}},"604":{"start":{"line":939,"column":16},"end":{"line":939,"column":28}},"605":{"start":{"line":940,"column":8},"end":{"line":940,"column":56}},"606":{"start":{"line":942,"column":4},"end":{"line":944,"column":6}},"607":{"start":{"line":943,"column":8},"end":{"line":943,"column":43}},"608":{"start":{"line":945,"column":4},"end":{"line":962,"column":6}},"609":{"start":{"line":946,"column":20},"end":{"line":946,"column":21}},"610":{"start":{"line":947,"column":8},"end":{"line":961,"column":9}},"611":{"start":{"line":948,"column":12},"end":{"line":948,"column":32}},"612":{"start":{"line":949,"column":12},"end":{"line":949,"column":35}},"613":{"start":{"line":950,"column":12},"end":{"line":956,"column":13}},"614":{"start":{"line":951,"column":16},"end":{"line":951,"column":36}},"615":{"start":{"line":952,"column":16},"end":{"line":952,"column":24}},"616":{"start":{"line":953,"column":16},"end":{"line":955,"column":17}},"617":{"start":{"line":954,"column":20},"end":{"line":954,"column":43}},"618":{"start":{"line":957,"column":12},"end":{"line":957,"column":24}},"619":{"start":{"line":960,"column":12},"end":{"line":960,"column":52}},"620":{"start":{"line":963,"column":4},"end":{"line":963,"column":19}},"621":{"start":{"line":965,"column":0},"end":{"line":965,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":18},"end":{"line":5,"column":19}},"loc":{"start":{"line":5,"column":34},"end":{"line":22,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":26},"end":{"line":23,"column":27}},"loc":{"start":{"line":23,"column":38},"end":{"line":235,"column":1}},"line":23},"2":{"name":"Expr","decl":{"start":{"line":24,"column":13},"end":{"line":24,"column":17}},"loc":{"start":{"line":24,"column":29},"end":{"line":27,"column":5}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":31},"end":{"line":28,"column":32}},"loc":{"start":{"line":28,"column":43},"end":{"line":30,"column":5}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":31,"column":26},"end":{"line":31,"column":27}},"loc":{"start":{"line":31,"column":44},"end":{"line":33,"column":5}},"line":31},"5":{"name":"(anonymous_5)","decl":{"start":{"line":34,"column":27},"end":{"line":34,"column":28}},"loc":{"start":{"line":34,"column":39},"end":{"line":36,"column":5}},"line":34},"6":{"name":"(anonymous_6)","decl":{"start":{"line":37,"column":30},"end":{"line":37,"column":31}},"loc":{"start":{"line":37,"column":42},"end":{"line":39,"column":5}},"line":37},"7":{"name":"(anonymous_7)","decl":{"start":{"line":40,"column":30},"end":{"line":40,"column":31}},"loc":{"start":{"line":40,"column":42},"end":{"line":42,"column":5}},"line":40},"8":{"name":"(anonymous_8)","decl":{"start":{"line":43,"column":30},"end":{"line":43,"column":31}},"loc":{"start":{"line":43,"column":42},"end":{"line":45,"column":5}},"line":43},"9":{"name":"(anonymous_9)","decl":{"start":{"line":46,"column":29},"end":{"line":46,"column":30}},"loc":{"start":{"line":46,"column":44},"end":{"line":56,"column":5}},"line":46},"10":{"name":"(anonymous_10)","decl":{"start":{"line":57,"column":30},"end":{"line":57,"column":31}},"loc":{"start":{"line":57,"column":45},"end":{"line":67,"column":5}},"line":57},"11":{"name":"(anonymous_11)","decl":{"start":{"line":68,"column":29},"end":{"line":68,"column":30}},"loc":{"start":{"line":68,"column":44},"end":{"line":78,"column":5}},"line":68},"12":{"name":"(anonymous_12)","decl":{"start":{"line":79,"column":30},"end":{"line":79,"column":31}},"loc":{"start":{"line":79,"column":45},"end":{"line":89,"column":5}},"line":79},"13":{"name":"(anonymous_13)","decl":{"start":{"line":90,"column":29},"end":{"line":90,"column":30}},"loc":{"start":{"line":90,"column":44},"end":{"line":100,"column":5}},"line":90},"14":{"name":"(anonymous_14)","decl":{"start":{"line":101,"column":30},"end":{"line":101,"column":31}},"loc":{"start":{"line":101,"column":45},"end":{"line":111,"column":5}},"line":101},"15":{"name":"(anonymous_15)","decl":{"start":{"line":112,"column":29},"end":{"line":112,"column":30}},"loc":{"start":{"line":112,"column":44},"end":{"line":122,"column":5}},"line":112},"16":{"name":"(anonymous_16)","decl":{"start":{"line":123,"column":30},"end":{"line":123,"column":31}},"loc":{"start":{"line":123,"column":45},"end":{"line":133,"column":5}},"line":123},"17":{"name":"(anonymous_17)","decl":{"start":{"line":134,"column":30},"end":{"line":134,"column":31}},"loc":{"start":{"line":134,"column":45},"end":{"line":144,"column":5}},"line":134},"18":{"name":"(anonymous_18)","decl":{"start":{"line":145,"column":31},"end":{"line":145,"column":32}},"loc":{"start":{"line":145,"column":46},"end":{"line":155,"column":5}},"line":145},"19":{"name":"(anonymous_19)","decl":{"start":{"line":156,"column":32},"end":{"line":156,"column":33}},"loc":{"start":{"line":156,"column":47},"end":{"line":166,"column":5}},"line":156},"20":{"name":"(anonymous_20)","decl":{"start":{"line":167,"column":33},"end":{"line":167,"column":34}},"loc":{"start":{"line":167,"column":48},"end":{"line":177,"column":5}},"line":167},"21":{"name":"(anonymous_21)","decl":{"start":{"line":178,"column":32},"end":{"line":178,"column":33}},"loc":{"start":{"line":178,"column":47},"end":{"line":188,"column":5}},"line":178},"22":{"name":"(anonymous_22)","decl":{"start":{"line":189,"column":33},"end":{"line":189,"column":34}},"loc":{"start":{"line":189,"column":48},"end":{"line":199,"column":5}},"line":189},"23":{"name":"(anonymous_23)","decl":{"start":{"line":200,"column":31},"end":{"line":200,"column":32}},"loc":{"start":{"line":200,"column":46},"end":{"line":210,"column":5}},"line":200},"24":{"name":"(anonymous_24)","decl":{"start":{"line":211,"column":32},"end":{"line":211,"column":33}},"loc":{"start":{"line":211,"column":47},"end":{"line":221,"column":5}},"line":211},"25":{"name":"(anonymous_25)","decl":{"start":{"line":222,"column":31},"end":{"line":222,"column":32}},"loc":{"start":{"line":222,"column":43},"end":{"line":224,"column":5}},"line":222},"26":{"name":"(anonymous_26)","decl":{"start":{"line":225,"column":30},"end":{"line":225,"column":31}},"loc":{"start":{"line":225,"column":42},"end":{"line":227,"column":5}},"line":225},"27":{"name":"(anonymous_27)","decl":{"start":{"line":228,"column":29},"end":{"line":228,"column":30}},"loc":{"start":{"line":228,"column":41},"end":{"line":230,"column":5}},"line":228},"28":{"name":"(anonymous_28)","decl":{"start":{"line":231,"column":29},"end":{"line":231,"column":30}},"loc":{"start":{"line":231,"column":41},"end":{"line":233,"column":5}},"line":231},"29":{"name":"(anonymous_29)","decl":{"start":{"line":237,"column":32},"end":{"line":237,"column":33}},"loc":{"start":{"line":237,"column":50},"end":{"line":252,"column":1}},"line":237},"30":{"name":"BinaryExpr","decl":{"start":{"line":239,"column":13},"end":{"line":239,"column":23}},"loc":{"start":{"line":239,"column":40},"end":{"line":250,"column":5}},"line":239},"31":{"name":"(anonymous_31)","decl":{"start":{"line":254,"column":29},"end":{"line":254,"column":30}},"loc":{"start":{"line":254,"column":47},"end":{"line":312,"column":1}},"line":254},"32":{"name":"AddExpr","decl":{"start":{"line":256,"column":13},"end":{"line":256,"column":20}},"loc":{"start":{"line":256,"column":38},"end":{"line":261,"column":5}},"line":256},"33":{"name":"(anonymous_33)","decl":{"start":{"line":262,"column":34},"end":{"line":262,"column":35}},"loc":{"start":{"line":262,"column":46},"end":{"line":264,"column":5}},"line":262},"34":{"name":"(anonymous_34)","decl":{"start":{"line":265,"column":29},"end":{"line":265,"column":30}},"loc":{"start":{"line":265,"column":46},"end":{"line":267,"column":5}},"line":265},"35":{"name":"(anonymous_35)","decl":{"start":{"line":268,"column":30},"end":{"line":268,"column":31}},"loc":{"start":{"line":268,"column":42},"end":{"line":270,"column":5}},"line":268},"36":{"name":"(anonymous_36)","decl":{"start":{"line":271,"column":33},"end":{"line":271,"column":34}},"loc":{"start":{"line":271,"column":45},"end":{"line":304,"column":5}},"line":271},"37":{"name":"(anonymous_37)","decl":{"start":{"line":305,"column":33},"end":{"line":305,"column":34}},"loc":{"start":{"line":305,"column":45},"end":{"line":307,"column":5}},"line":305},"38":{"name":"(anonymous_38)","decl":{"start":{"line":308,"column":33},"end":{"line":308,"column":34}},"loc":{"start":{"line":308,"column":45},"end":{"line":310,"column":5}},"line":308},"39":{"name":"(anonymous_39)","decl":{"start":{"line":314,"column":29},"end":{"line":314,"column":30}},"loc":{"start":{"line":314,"column":47},"end":{"line":343,"column":1}},"line":314},"40":{"name":"SubExpr","decl":{"start":{"line":316,"column":13},"end":{"line":316,"column":20}},"loc":{"start":{"line":316,"column":38},"end":{"line":321,"column":5}},"line":316},"41":{"name":"(anonymous_41)","decl":{"start":{"line":322,"column":34},"end":{"line":322,"column":35}},"loc":{"start":{"line":322,"column":46},"end":{"line":324,"column":5}},"line":322},"42":{"name":"(anonymous_42)","decl":{"start":{"line":325,"column":29},"end":{"line":325,"column":30}},"loc":{"start":{"line":325,"column":46},"end":{"line":327,"column":5}},"line":325},"43":{"name":"(anonymous_43)","decl":{"start":{"line":328,"column":30},"end":{"line":328,"column":31}},"loc":{"start":{"line":328,"column":42},"end":{"line":330,"column":5}},"line":328},"44":{"name":"(anonymous_44)","decl":{"start":{"line":331,"column":33},"end":{"line":331,"column":34}},"loc":{"start":{"line":331,"column":45},"end":{"line":335,"column":5}},"line":331},"45":{"name":"(anonymous_45)","decl":{"start":{"line":336,"column":33},"end":{"line":336,"column":34}},"loc":{"start":{"line":336,"column":45},"end":{"line":338,"column":5}},"line":336},"46":{"name":"(anonymous_46)","decl":{"start":{"line":339,"column":33},"end":{"line":339,"column":34}},"loc":{"start":{"line":339,"column":45},"end":{"line":341,"column":5}},"line":339},"47":{"name":"(anonymous_47)","decl":{"start":{"line":345,"column":34},"end":{"line":345,"column":35}},"loc":{"start":{"line":345,"column":52},"end":{"line":455,"column":1}},"line":345},"48":{"name":"MultiplyExpr","decl":{"start":{"line":347,"column":13},"end":{"line":347,"column":25}},"loc":{"start":{"line":347,"column":43},"end":{"line":352,"column":5}},"line":347},"49":{"name":"(anonymous_49)","decl":{"start":{"line":353,"column":39},"end":{"line":353,"column":40}},"loc":{"start":{"line":353,"column":51},"end":{"line":355,"column":5}},"line":353},"50":{"name":"(anonymous_50)","decl":{"start":{"line":356,"column":34},"end":{"line":356,"column":35}},"loc":{"start":{"line":356,"column":51},"end":{"line":358,"column":5}},"line":356},"51":{"name":"(anonymous_51)","decl":{"start":{"line":359,"column":35},"end":{"line":359,"column":36}},"loc":{"start":{"line":359,"column":47},"end":{"line":361,"column":5}},"line":359},"52":{"name":"(anonymous_52)","decl":{"start":{"line":362,"column":38},"end":{"line":362,"column":39}},"loc":{"start":{"line":362,"column":50},"end":{"line":447,"column":5}},"line":362},"53":{"name":"(anonymous_53)","decl":{"start":{"line":448,"column":38},"end":{"line":448,"column":39}},"loc":{"start":{"line":448,"column":50},"end":{"line":450,"column":5}},"line":448},"54":{"name":"(anonymous_54)","decl":{"start":{"line":451,"column":38},"end":{"line":451,"column":39}},"loc":{"start":{"line":451,"column":50},"end":{"line":453,"column":5}},"line":451},"55":{"name":"(anonymous_55)","decl":{"start":{"line":457,"column":32},"end":{"line":457,"column":33}},"loc":{"start":{"line":457,"column":50},"end":{"line":486,"column":1}},"line":457},"56":{"name":"DivideExpr","decl":{"start":{"line":459,"column":13},"end":{"line":459,"column":23}},"loc":{"start":{"line":459,"column":41},"end":{"line":464,"column":5}},"line":459},"57":{"name":"(anonymous_57)","decl":{"start":{"line":465,"column":37},"end":{"line":465,"column":38}},"loc":{"start":{"line":465,"column":49},"end":{"line":467,"column":5}},"line":465},"58":{"name":"(anonymous_58)","decl":{"start":{"line":468,"column":32},"end":{"line":468,"column":33}},"loc":{"start":{"line":468,"column":49},"end":{"line":470,"column":5}},"line":468},"59":{"name":"(anonymous_59)","decl":{"start":{"line":471,"column":33},"end":{"line":471,"column":34}},"loc":{"start":{"line":471,"column":45},"end":{"line":473,"column":5}},"line":471},"60":{"name":"(anonymous_60)","decl":{"start":{"line":474,"column":36},"end":{"line":474,"column":37}},"loc":{"start":{"line":474,"column":48},"end":{"line":478,"column":5}},"line":474},"61":{"name":"(anonymous_61)","decl":{"start":{"line":479,"column":36},"end":{"line":479,"column":37}},"loc":{"start":{"line":479,"column":48},"end":{"line":481,"column":5}},"line":479},"62":{"name":"(anonymous_62)","decl":{"start":{"line":482,"column":36},"end":{"line":482,"column":37}},"loc":{"start":{"line":482,"column":48},"end":{"line":484,"column":5}},"line":482},"63":{"name":"(anonymous_63)","decl":{"start":{"line":488,"column":35},"end":{"line":488,"column":36}},"loc":{"start":{"line":488,"column":53},"end":{"line":517,"column":1}},"line":488},"64":{"name":"LContractExpr","decl":{"start":{"line":490,"column":13},"end":{"line":490,"column":26}},"loc":{"start":{"line":490,"column":44},"end":{"line":495,"column":5}},"line":490},"65":{"name":"(anonymous_65)","decl":{"start":{"line":496,"column":40},"end":{"line":496,"column":41}},"loc":{"start":{"line":496,"column":52},"end":{"line":498,"column":5}},"line":496},"66":{"name":"(anonymous_66)","decl":{"start":{"line":499,"column":35},"end":{"line":499,"column":36}},"loc":{"start":{"line":499,"column":52},"end":{"line":501,"column":5}},"line":499},"67":{"name":"(anonymous_67)","decl":{"start":{"line":502,"column":36},"end":{"line":502,"column":37}},"loc":{"start":{"line":502,"column":48},"end":{"line":504,"column":5}},"line":502},"68":{"name":"(anonymous_68)","decl":{"start":{"line":505,"column":39},"end":{"line":505,"column":40}},"loc":{"start":{"line":505,"column":51},"end":{"line":509,"column":5}},"line":505},"69":{"name":"(anonymous_69)","decl":{"start":{"line":510,"column":39},"end":{"line":510,"column":40}},"loc":{"start":{"line":510,"column":51},"end":{"line":512,"column":5}},"line":510},"70":{"name":"(anonymous_70)","decl":{"start":{"line":513,"column":39},"end":{"line":513,"column":40}},"loc":{"start":{"line":513,"column":51},"end":{"line":515,"column":5}},"line":513},"71":{"name":"(anonymous_71)","decl":{"start":{"line":519,"column":35},"end":{"line":519,"column":36}},"loc":{"start":{"line":519,"column":53},"end":{"line":548,"column":1}},"line":519},"72":{"name":"RContractExpr","decl":{"start":{"line":521,"column":13},"end":{"line":521,"column":26}},"loc":{"start":{"line":521,"column":44},"end":{"line":526,"column":5}},"line":521},"73":{"name":"(anonymous_73)","decl":{"start":{"line":527,"column":40},"end":{"line":527,"column":41}},"loc":{"start":{"line":527,"column":52},"end":{"line":529,"column":5}},"line":527},"74":{"name":"(anonymous_74)","decl":{"start":{"line":530,"column":35},"end":{"line":530,"column":36}},"loc":{"start":{"line":530,"column":52},"end":{"line":532,"column":5}},"line":530},"75":{"name":"(anonymous_75)","decl":{"start":{"line":533,"column":36},"end":{"line":533,"column":37}},"loc":{"start":{"line":533,"column":48},"end":{"line":535,"column":5}},"line":533},"76":{"name":"(anonymous_76)","decl":{"start":{"line":536,"column":39},"end":{"line":536,"column":40}},"loc":{"start":{"line":536,"column":51},"end":{"line":540,"column":5}},"line":536},"77":{"name":"(anonymous_77)","decl":{"start":{"line":541,"column":39},"end":{"line":541,"column":40}},"loc":{"start":{"line":541,"column":51},"end":{"line":543,"column":5}},"line":541},"78":{"name":"(anonymous_78)","decl":{"start":{"line":544,"column":39},"end":{"line":544,"column":40}},"loc":{"start":{"line":544,"column":51},"end":{"line":546,"column":5}},"line":544},"79":{"name":"(anonymous_79)","decl":{"start":{"line":554,"column":36},"end":{"line":554,"column":37}},"loc":{"start":{"line":554,"column":54},"end":{"line":590,"column":1}},"line":554},"80":{"name":"BasisBladeExpr","decl":{"start":{"line":556,"column":13},"end":{"line":556,"column":27}},"loc":{"start":{"line":556,"column":49},"end":{"line":565,"column":5}},"line":556},"81":{"name":"(anonymous_81)","decl":{"start":{"line":566,"column":41},"end":{"line":566,"column":42}},"loc":{"start":{"line":566,"column":53},"end":{"line":568,"column":5}},"line":566},"82":{"name":"(anonymous_82)","decl":{"start":{"line":569,"column":36},"end":{"line":569,"column":37}},"loc":{"start":{"line":569,"column":53},"end":{"line":571,"column":5}},"line":569},"83":{"name":"(anonymous_83)","decl":{"start":{"line":572,"column":37},"end":{"line":572,"column":38}},"loc":{"start":{"line":572,"column":49},"end":{"line":579,"column":5}},"line":572},"84":{"name":"(anonymous_84)","decl":{"start":{"line":580,"column":40},"end":{"line":580,"column":41}},"loc":{"start":{"line":580,"column":52},"end":{"line":582,"column":5}},"line":580},"85":{"name":"(anonymous_85)","decl":{"start":{"line":583,"column":40},"end":{"line":583,"column":41}},"loc":{"start":{"line":583,"column":52},"end":{"line":585,"column":5}},"line":583},"86":{"name":"(anonymous_86)","decl":{"start":{"line":586,"column":40},"end":{"line":586,"column":41}},"loc":{"start":{"line":586,"column":52},"end":{"line":588,"column":5}},"line":586},"87":{"name":"(anonymous_87)","decl":{"start":{"line":592,"column":32},"end":{"line":592,"column":33}},"loc":{"start":{"line":592,"column":50},"end":{"line":628,"column":1}},"line":592},"88":{"name":"ScalarExpr","decl":{"start":{"line":594,"column":13},"end":{"line":594,"column":23}},"loc":{"start":{"line":594,"column":43},"end":{"line":600,"column":5}},"line":594},"89":{"name":"(anonymous_89)","decl":{"start":{"line":601,"column":37},"end":{"line":601,"column":38}},"loc":{"start":{"line":601,"column":49},"end":{"line":603,"column":5}},"line":601},"90":{"name":"(anonymous_90)","decl":{"start":{"line":604,"column":32},"end":{"line":604,"column":33}},"loc":{"start":{"line":604,"column":49},"end":{"line":606,"column":5}},"line":604},"91":{"name":"(anonymous_91)","decl":{"start":{"line":607,"column":33},"end":{"line":607,"column":34}},"loc":{"start":{"line":607,"column":45},"end":{"line":614,"column":5}},"line":607},"92":{"name":"(anonymous_92)","decl":{"start":{"line":615,"column":36},"end":{"line":615,"column":37}},"loc":{"start":{"line":615,"column":48},"end":{"line":617,"column":5}},"line":615},"93":{"name":"(anonymous_93)","decl":{"start":{"line":618,"column":36},"end":{"line":618,"column":37}},"loc":{"start":{"line":618,"column":48},"end":{"line":620,"column":5}},"line":618},"94":{"name":"(anonymous_94)","decl":{"start":{"line":621,"column":40},"end":{"line":621,"column":41}},"loc":{"start":{"line":621,"column":52},"end":{"line":623,"column":5}},"line":621},"95":{"name":"(anonymous_95)","decl":{"start":{"line":624,"column":36},"end":{"line":624,"column":37}},"loc":{"start":{"line":624,"column":48},"end":{"line":626,"column":5}},"line":624},"96":{"name":"(anonymous_96)","decl":{"start":{"line":630,"column":30},"end":{"line":630,"column":31}},"loc":{"start":{"line":630,"column":48},"end":{"line":691,"column":1}},"line":630},"97":{"name":"VBarExpr","decl":{"start":{"line":632,"column":13},"end":{"line":632,"column":21}},"loc":{"start":{"line":632,"column":39},"end":{"line":637,"column":5}},"line":632},"98":{"name":"(anonymous_98)","decl":{"start":{"line":638,"column":35},"end":{"line":638,"column":36}},"loc":{"start":{"line":638,"column":47},"end":{"line":640,"column":5}},"line":638},"99":{"name":"(anonymous_99)","decl":{"start":{"line":641,"column":31},"end":{"line":641,"column":32}},"loc":{"start":{"line":641,"column":43},"end":{"line":643,"column":5}},"line":641},"100":{"name":"(anonymous_100)","decl":{"start":{"line":644,"column":34},"end":{"line":644,"column":35}},"loc":{"start":{"line":644,"column":46},"end":{"line":683,"column":5}},"line":644},"101":{"name":"(anonymous_101)","decl":{"start":{"line":684,"column":34},"end":{"line":684,"column":35}},"loc":{"start":{"line":684,"column":46},"end":{"line":686,"column":5}},"line":684},"102":{"name":"(anonymous_102)","decl":{"start":{"line":687,"column":34},"end":{"line":687,"column":35}},"loc":{"start":{"line":687,"column":46},"end":{"line":689,"column":5}},"line":687},"103":{"name":"(anonymous_103)","decl":{"start":{"line":693,"column":31},"end":{"line":693,"column":32}},"loc":{"start":{"line":693,"column":49},"end":{"line":765,"column":1}},"line":693},"104":{"name":"WedgeExpr","decl":{"start":{"line":695,"column":13},"end":{"line":695,"column":22}},"loc":{"start":{"line":695,"column":40},"end":{"line":700,"column":5}},"line":695},"105":{"name":"(anonymous_105)","decl":{"start":{"line":701,"column":36},"end":{"line":701,"column":37}},"loc":{"start":{"line":701,"column":48},"end":{"line":703,"column":5}},"line":701},"106":{"name":"(anonymous_106)","decl":{"start":{"line":704,"column":32},"end":{"line":704,"column":33}},"loc":{"start":{"line":704,"column":44},"end":{"line":706,"column":5}},"line":704},"107":{"name":"(anonymous_107)","decl":{"start":{"line":707,"column":35},"end":{"line":707,"column":36}},"loc":{"start":{"line":707,"column":47},"end":{"line":757,"column":5}},"line":707},"108":{"name":"(anonymous_108)","decl":{"start":{"line":758,"column":35},"end":{"line":758,"column":36}},"loc":{"start":{"line":758,"column":47},"end":{"line":760,"column":5}},"line":758},"109":{"name":"(anonymous_109)","decl":{"start":{"line":761,"column":35},"end":{"line":761,"column":36}},"loc":{"start":{"line":761,"column":47},"end":{"line":763,"column":5}},"line":761},"110":{"name":"(anonymous_110)","decl":{"start":{"line":767,"column":33},"end":{"line":767,"column":34}},"loc":{"start":{"line":767,"column":51},"end":{"line":795,"column":1}},"line":767},"111":{"name":"ReverseExpr","decl":{"start":{"line":769,"column":13},"end":{"line":769,"column":24}},"loc":{"start":{"line":769,"column":39},"end":{"line":775,"column":5}},"line":769},"112":{"name":"(anonymous_112)","decl":{"start":{"line":776,"column":38},"end":{"line":776,"column":39}},"loc":{"start":{"line":776,"column":50},"end":{"line":778,"column":5}},"line":776},"113":{"name":"(anonymous_113)","decl":{"start":{"line":779,"column":33},"end":{"line":779,"column":34}},"loc":{"start":{"line":779,"column":50},"end":{"line":781,"column":5}},"line":779},"114":{"name":"(anonymous_114)","decl":{"start":{"line":782,"column":34},"end":{"line":782,"column":35}},"loc":{"start":{"line":782,"column":46},"end":{"line":784,"column":5}},"line":782},"115":{"name":"(anonymous_115)","decl":{"start":{"line":785,"column":37},"end":{"line":785,"column":38}},"loc":{"start":{"line":785,"column":49},"end":{"line":787,"column":5}},"line":785},"116":{"name":"(anonymous_116)","decl":{"start":{"line":788,"column":37},"end":{"line":788,"column":38}},"loc":{"start":{"line":788,"column":49},"end":{"line":790,"column":5}},"line":788},"117":{"name":"(anonymous_117)","decl":{"start":{"line":791,"column":37},"end":{"line":791,"column":38}},"loc":{"start":{"line":791,"column":49},"end":{"line":793,"column":5}},"line":791},"118":{"name":"(anonymous_118)","decl":{"start":{"line":797,"column":33},"end":{"line":797,"column":34}},"loc":{"start":{"line":797,"column":51},"end":{"line":825,"column":1}},"line":797},"119":{"name":"InverseExpr","decl":{"start":{"line":799,"column":13},"end":{"line":799,"column":24}},"loc":{"start":{"line":799,"column":39},"end":{"line":805,"column":5}},"line":799},"120":{"name":"(anonymous_120)","decl":{"start":{"line":806,"column":38},"end":{"line":806,"column":39}},"loc":{"start":{"line":806,"column":50},"end":{"line":808,"column":5}},"line":806},"121":{"name":"(anonymous_121)","decl":{"start":{"line":809,"column":33},"end":{"line":809,"column":34}},"loc":{"start":{"line":809,"column":50},"end":{"line":811,"column":5}},"line":809},"122":{"name":"(anonymous_122)","decl":{"start":{"line":812,"column":34},"end":{"line":812,"column":35}},"loc":{"start":{"line":812,"column":46},"end":{"line":814,"column":5}},"line":812},"123":{"name":"(anonymous_123)","decl":{"start":{"line":815,"column":37},"end":{"line":815,"column":38}},"loc":{"start":{"line":815,"column":49},"end":{"line":817,"column":5}},"line":815},"124":{"name":"(anonymous_124)","decl":{"start":{"line":818,"column":37},"end":{"line":818,"column":38}},"loc":{"start":{"line":818,"column":49},"end":{"line":820,"column":5}},"line":818},"125":{"name":"(anonymous_125)","decl":{"start":{"line":821,"column":37},"end":{"line":821,"column":38}},"loc":{"start":{"line":821,"column":49},"end":{"line":823,"column":5}},"line":821},"126":{"name":"(anonymous_126)","decl":{"start":{"line":827,"column":29},"end":{"line":827,"column":30}},"loc":{"start":{"line":827,"column":47},"end":{"line":855,"column":1}},"line":827},"127":{"name":"NegExpr","decl":{"start":{"line":829,"column":13},"end":{"line":829,"column":20}},"loc":{"start":{"line":829,"column":35},"end":{"line":835,"column":5}},"line":829},"128":{"name":"(anonymous_128)","decl":{"start":{"line":836,"column":34},"end":{"line":836,"column":35}},"loc":{"start":{"line":836,"column":46},"end":{"line":838,"column":5}},"line":836},"129":{"name":"(anonymous_129)","decl":{"start":{"line":839,"column":29},"end":{"line":839,"column":30}},"loc":{"start":{"line":839,"column":46},"end":{"line":841,"column":5}},"line":839},"130":{"name":"(anonymous_130)","decl":{"start":{"line":842,"column":30},"end":{"line":842,"column":31}},"loc":{"start":{"line":842,"column":42},"end":{"line":844,"column":5}},"line":842},"131":{"name":"(anonymous_131)","decl":{"start":{"line":845,"column":33},"end":{"line":845,"column":34}},"loc":{"start":{"line":845,"column":45},"end":{"line":847,"column":5}},"line":845},"132":{"name":"(anonymous_132)","decl":{"start":{"line":848,"column":33},"end":{"line":848,"column":34}},"loc":{"start":{"line":848,"column":45},"end":{"line":850,"column":5}},"line":848},"133":{"name":"(anonymous_133)","decl":{"start":{"line":851,"column":33},"end":{"line":851,"column":34}},"loc":{"start":{"line":851,"column":45},"end":{"line":853,"column":5}},"line":851},"134":{"name":"(anonymous_134)","decl":{"start":{"line":857,"column":29},"end":{"line":857,"column":30}},"loc":{"start":{"line":857,"column":47},"end":{"line":885,"column":1}},"line":857},"135":{"name":"PosExpr","decl":{"start":{"line":859,"column":13},"end":{"line":859,"column":20}},"loc":{"start":{"line":859,"column":35},"end":{"line":865,"column":5}},"line":859},"136":{"name":"(anonymous_136)","decl":{"start":{"line":866,"column":34},"end":{"line":866,"column":35}},"loc":{"start":{"line":866,"column":46},"end":{"line":868,"column":5}},"line":866},"137":{"name":"(anonymous_137)","decl":{"start":{"line":869,"column":29},"end":{"line":869,"column":30}},"loc":{"start":{"line":869,"column":46},"end":{"line":871,"column":5}},"line":869},"138":{"name":"(anonymous_138)","decl":{"start":{"line":872,"column":30},"end":{"line":872,"column":31}},"loc":{"start":{"line":872,"column":42},"end":{"line":874,"column":5}},"line":872},"139":{"name":"(anonymous_139)","decl":{"start":{"line":875,"column":33},"end":{"line":875,"column":34}},"loc":{"start":{"line":875,"column":45},"end":{"line":877,"column":5}},"line":875},"140":{"name":"(anonymous_140)","decl":{"start":{"line":878,"column":33},"end":{"line":878,"column":34}},"loc":{"start":{"line":878,"column":45},"end":{"line":880,"column":5}},"line":878},"141":{"name":"(anonymous_141)","decl":{"start":{"line":881,"column":33},"end":{"line":881,"column":34}},"loc":{"start":{"line":881,"column":45},"end":{"line":883,"column":5}},"line":881},"142":{"name":"(anonymous_142)","decl":{"start":{"line":887,"column":29},"end":{"line":887,"column":30}},"loc":{"start":{"line":887,"column":41},"end":{"line":964,"column":1}},"line":887},"143":{"name":"Algebra","decl":{"start":{"line":888,"column":13},"end":{"line":888,"column":20}},"loc":{"start":{"line":888,"column":33},"end":{"line":918,"column":5}},"line":888},"144":{"name":"(anonymous_144)","decl":{"start":{"line":919,"column":34},"end":{"line":919,"column":35}},"loc":{"start":{"line":919,"column":53},"end":{"line":936,"column":5}},"line":919},"145":{"name":"(anonymous_145)","decl":{"start":{"line":922,"column":31},"end":{"line":922,"column":32}},"loc":{"start":{"line":922,"column":44},"end":{"line":930,"column":13}},"line":922},"146":{"name":"(anonymous_146)","decl":{"start":{"line":937,"column":26},"end":{"line":937,"column":27}},"loc":{"start":{"line":937,"column":42},"end":{"line":941,"column":5}},"line":937},"147":{"name":"(anonymous_147)","decl":{"start":{"line":942,"column":31},"end":{"line":942,"column":32}},"loc":{"start":{"line":942,"column":48},"end":{"line":944,"column":5}},"line":942},"148":{"name":"(anonymous_148)","decl":{"start":{"line":945,"column":33},"end":{"line":945,"column":34}},"loc":{"start":{"line":945,"column":49},"end":{"line":962,"column":5}},"line":945}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":16,"column":9}},{"start":{"line":11,"column":8},"end":{"line":16,"column":9}}],"line":11},"1":{"loc":{"start":{"line":47,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":55,"column":9}},{"start":{"line":47,"column":8},"end":{"line":55,"column":9}}],"line":47},"2":{"loc":{"start":{"line":50,"column":13},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":13},"end":{"line":55,"column":9}},{"start":{"line":50,"column":13},"end":{"line":55,"column":9}}],"line":50},"3":{"loc":{"start":{"line":58,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":66,"column":9}},{"start":{"line":58,"column":8},"end":{"line":66,"column":9}}],"line":58},"4":{"loc":{"start":{"line":61,"column":13},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":13},"end":{"line":66,"column":9}},{"start":{"line":61,"column":13},"end":{"line":66,"column":9}}],"line":61},"5":{"loc":{"start":{"line":69,"column":8},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":77,"column":9}},{"start":{"line":69,"column":8},"end":{"line":77,"column":9}}],"line":69},"6":{"loc":{"start":{"line":72,"column":13},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":13},"end":{"line":77,"column":9}},{"start":{"line":72,"column":13},"end":{"line":77,"column":9}}],"line":72},"7":{"loc":{"start":{"line":80,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":88,"column":9}},{"start":{"line":80,"column":8},"end":{"line":88,"column":9}}],"line":80},"8":{"loc":{"start":{"line":83,"column":13},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":13},"end":{"line":88,"column":9}},{"start":{"line":83,"column":13},"end":{"line":88,"column":9}}],"line":83},"9":{"loc":{"start":{"line":91,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":99,"column":9}},{"start":{"line":91,"column":8},"end":{"line":99,"column":9}}],"line":91},"10":{"loc":{"start":{"line":94,"column":13},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":94,"column":13},"end":{"line":99,"column":9}},{"start":{"line":94,"column":13},"end":{"line":99,"column":9}}],"line":94},"11":{"loc":{"start":{"line":102,"column":8},"end":{"line":110,"column":9}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":110,"column":9}},{"start":{"line":102,"column":8},"end":{"line":110,"column":9}}],"line":102},"12":{"loc":{"start":{"line":105,"column":13},"end":{"line":110,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":13},"end":{"line":110,"column":9}},{"start":{"line":105,"column":13},"end":{"line":110,"column":9}}],"line":105},"13":{"loc":{"start":{"line":113,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":121,"column":9}},{"start":{"line":113,"column":8},"end":{"line":121,"column":9}}],"line":113},"14":{"loc":{"start":{"line":116,"column":13},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":13},"end":{"line":121,"column":9}},{"start":{"line":116,"column":13},"end":{"line":121,"column":9}}],"line":116},"15":{"loc":{"start":{"line":124,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":132,"column":9}},{"start":{"line":124,"column":8},"end":{"line":132,"column":9}}],"line":124},"16":{"loc":{"start":{"line":127,"column":13},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":13},"end":{"line":132,"column":9}},{"start":{"line":127,"column":13},"end":{"line":132,"column":9}}],"line":127},"17":{"loc":{"start":{"line":135,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":143,"column":9}},{"start":{"line":135,"column":8},"end":{"line":143,"column":9}}],"line":135},"18":{"loc":{"start":{"line":138,"column":13},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":138,"column":13},"end":{"line":143,"column":9}},{"start":{"line":138,"column":13},"end":{"line":143,"column":9}}],"line":138},"19":{"loc":{"start":{"line":146,"column":8},"end":{"line":154,"column":9}},"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":154,"column":9}},{"start":{"line":146,"column":8},"end":{"line":154,"column":9}}],"line":146},"20":{"loc":{"start":{"line":149,"column":13},"end":{"line":154,"column":9}},"type":"if","locations":[{"start":{"line":149,"column":13},"end":{"line":154,"column":9}},{"start":{"line":149,"column":13},"end":{"line":154,"column":9}}],"line":149},"21":{"loc":{"start":{"line":157,"column":8},"end":{"line":165,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":165,"column":9}},{"start":{"line":157,"column":8},"end":{"line":165,"column":9}}],"line":157},"22":{"loc":{"start":{"line":160,"column":13},"end":{"line":165,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":13},"end":{"line":165,"column":9}},{"start":{"line":160,"column":13},"end":{"line":165,"column":9}}],"line":160},"23":{"loc":{"start":{"line":168,"column":8},"end":{"line":176,"column":9}},"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":176,"column":9}},{"start":{"line":168,"column":8},"end":{"line":176,"column":9}}],"line":168},"24":{"loc":{"start":{"line":171,"column":13},"end":{"line":176,"column":9}},"type":"if","locations":[{"start":{"line":171,"column":13},"end":{"line":176,"column":9}},{"start":{"line":171,"column":13},"end":{"line":176,"column":9}}],"line":171},"25":{"loc":{"start":{"line":179,"column":8},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":187,"column":9}},{"start":{"line":179,"column":8},"end":{"line":187,"column":9}}],"line":179},"26":{"loc":{"start":{"line":182,"column":13},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":182,"column":13},"end":{"line":187,"column":9}},{"start":{"line":182,"column":13},"end":{"line":187,"column":9}}],"line":182},"27":{"loc":{"start":{"line":190,"column":8},"end":{"line":198,"column":9}},"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":198,"column":9}},{"start":{"line":190,"column":8},"end":{"line":198,"column":9}}],"line":190},"28":{"loc":{"start":{"line":193,"column":13},"end":{"line":198,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":13},"end":{"line":198,"column":9}},{"start":{"line":193,"column":13},"end":{"line":198,"column":9}}],"line":193},"29":{"loc":{"start":{"line":201,"column":8},"end":{"line":209,"column":9}},"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":209,"column":9}},{"start":{"line":201,"column":8},"end":{"line":209,"column":9}}],"line":201},"30":{"loc":{"start":{"line":204,"column":13},"end":{"line":209,"column":9}},"type":"if","locations":[{"start":{"line":204,"column":13},"end":{"line":209,"column":9}},{"start":{"line":204,"column":13},"end":{"line":209,"column":9}}],"line":204},"31":{"loc":{"start":{"line":212,"column":8},"end":{"line":220,"column":9}},"type":"if","locations":[{"start":{"line":212,"column":8},"end":{"line":220,"column":9}},{"start":{"line":212,"column":8},"end":{"line":220,"column":9}}],"line":212},"32":{"loc":{"start":{"line":215,"column":13},"end":{"line":220,"column":9}},"type":"if","locations":[{"start":{"line":215,"column":13},"end":{"line":220,"column":9}},{"start":{"line":215,"column":13},"end":{"line":220,"column":9}}],"line":215},"33":{"loc":{"start":{"line":240,"column":20},"end":{"line":240,"column":60}},"type":"binary-expr","locations":[{"start":{"line":240,"column":20},"end":{"line":240,"column":52}},{"start":{"line":240,"column":56},"end":{"line":240,"column":60}}],"line":240},"34":{"loc":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"type":"if","locations":[{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},{"start":{"line":243,"column":8},"end":{"line":245,"column":9}}],"line":243},"35":{"loc":{"start":{"line":246,"column":8},"end":{"line":248,"column":9}},"type":"if","locations":[{"start":{"line":246,"column":8},"end":{"line":248,"column":9}},{"start":{"line":246,"column":8},"end":{"line":248,"column":9}}],"line":246},"36":{"loc":{"start":{"line":257,"column":8},"end":{"line":257,"column":48}},"type":"if","locations":[{"start":{"line":257,"column":8},"end":{"line":257,"column":48}},{"start":{"line":257,"column":8},"end":{"line":257,"column":48}}],"line":257},"37":{"loc":{"start":{"line":258,"column":20},"end":{"line":258,"column":66}},"type":"binary-expr","locations":[{"start":{"line":258,"column":20},"end":{"line":258,"column":58}},{"start":{"line":258,"column":62},"end":{"line":258,"column":66}}],"line":258},"38":{"loc":{"start":{"line":263,"column":15},"end":{"line":263,"column":73}},"type":"binary-expr","locations":[{"start":{"line":263,"column":15},"end":{"line":263,"column":25}},{"start":{"line":263,"column":29},"end":{"line":263,"column":49}},{"start":{"line":263,"column":53},"end":{"line":263,"column":73}}],"line":263},"39":{"loc":{"start":{"line":274,"column":8},"end":{"line":303,"column":9}},"type":"if","locations":[{"start":{"line":274,"column":8},"end":{"line":303,"column":9}},{"start":{"line":274,"column":8},"end":{"line":303,"column":9}}],"line":274},"40":{"loc":{"start":{"line":274,"column":12},"end":{"line":274,"column":83}},"type":"binary-expr","locations":[{"start":{"line":274,"column":12},"end":{"line":274,"column":35}},{"start":{"line":274,"column":39},"end":{"line":274,"column":66}},{"start":{"line":274,"column":70},"end":{"line":274,"column":83}}],"line":274},"41":{"loc":{"start":{"line":277,"column":13},"end":{"line":303,"column":9}},"type":"if","locations":[{"start":{"line":277,"column":13},"end":{"line":303,"column":9}},{"start":{"line":277,"column":13},"end":{"line":303,"column":9}}],"line":277},"42":{"loc":{"start":{"line":277,"column":17},"end":{"line":277,"column":71}},"type":"binary-expr","locations":[{"start":{"line":277,"column":17},"end":{"line":277,"column":42}},{"start":{"line":277,"column":46},"end":{"line":277,"column":71}}],"line":277},"43":{"loc":{"start":{"line":278,"column":12},"end":{"line":291,"column":13}},"type":"if","locations":[{"start":{"line":278,"column":12},"end":{"line":291,"column":13}},{"start":{"line":278,"column":12},"end":{"line":291,"column":13}}],"line":278},"44":{"loc":{"start":{"line":278,"column":16},"end":{"line":278,"column":93}},"type":"binary-expr","locations":[{"start":{"line":278,"column":16},"end":{"line":278,"column":43}},{"start":{"line":278,"column":47},"end":{"line":278,"column":74}},{"start":{"line":278,"column":78},"end":{"line":278,"column":93}}],"line":278},"45":{"loc":{"start":{"line":281,"column":16},"end":{"line":287,"column":17}},"type":"if","locations":[{"start":{"line":281,"column":16},"end":{"line":287,"column":17}},{"start":{"line":281,"column":16},"end":{"line":287,"column":17}}],"line":281},"46":{"loc":{"start":{"line":281,"column":20},"end":{"line":281,"column":80}},"type":"binary-expr","locations":[{"start":{"line":281,"column":20},"end":{"line":281,"column":48}},{"start":{"line":281,"column":52},"end":{"line":281,"column":80}}],"line":281},"47":{"loc":{"start":{"line":293,"column":13},"end":{"line":303,"column":9}},"type":"if","locations":[{"start":{"line":293,"column":13},"end":{"line":303,"column":9}},{"start":{"line":293,"column":13},"end":{"line":303,"column":9}}],"line":293},"48":{"loc":{"start":{"line":293,"column":17},"end":{"line":293,"column":67}},"type":"binary-expr","locations":[{"start":{"line":293,"column":17},"end":{"line":293,"column":40}},{"start":{"line":293,"column":44},"end":{"line":293,"column":67}}],"line":293},"49":{"loc":{"start":{"line":294,"column":12},"end":{"line":299,"column":13}},"type":"if","locations":[{"start":{"line":294,"column":12},"end":{"line":299,"column":13}},{"start":{"line":294,"column":12},"end":{"line":299,"column":13}}],"line":294},"50":{"loc":{"start":{"line":294,"column":16},"end":{"line":294,"column":74}},"type":"binary-expr","locations":[{"start":{"line":294,"column":16},"end":{"line":294,"column":43}},{"start":{"line":294,"column":47},"end":{"line":294,"column":74}}],"line":294},"51":{"loc":{"start":{"line":317,"column":8},"end":{"line":317,"column":48}},"type":"if","locations":[{"start":{"line":317,"column":8},"end":{"line":317,"column":48}},{"start":{"line":317,"column":8},"end":{"line":317,"column":48}}],"line":317},"52":{"loc":{"start":{"line":318,"column":20},"end":{"line":318,"column":66}},"type":"binary-expr","locations":[{"start":{"line":318,"column":20},"end":{"line":318,"column":58}},{"start":{"line":318,"column":62},"end":{"line":318,"column":66}}],"line":318},"53":{"loc":{"start":{"line":323,"column":15},"end":{"line":323,"column":73}},"type":"binary-expr","locations":[{"start":{"line":323,"column":15},"end":{"line":323,"column":25}},{"start":{"line":323,"column":29},"end":{"line":323,"column":49}},{"start":{"line":323,"column":53},"end":{"line":323,"column":73}}],"line":323},"54":{"loc":{"start":{"line":348,"column":8},"end":{"line":348,"column":48}},"type":"if","locations":[{"start":{"line":348,"column":8},"end":{"line":348,"column":48}},{"start":{"line":348,"column":8},"end":{"line":348,"column":48}}],"line":348},"55":{"loc":{"start":{"line":349,"column":20},"end":{"line":349,"column":71}},"type":"binary-expr","locations":[{"start":{"line":349,"column":20},"end":{"line":349,"column":63}},{"start":{"line":349,"column":67},"end":{"line":349,"column":71}}],"line":349},"56":{"loc":{"start":{"line":354,"column":15},"end":{"line":354,"column":73}},"type":"binary-expr","locations":[{"start":{"line":354,"column":15},"end":{"line":354,"column":25}},{"start":{"line":354,"column":29},"end":{"line":354,"column":49}},{"start":{"line":354,"column":53},"end":{"line":354,"column":73}}],"line":354},"57":{"loc":{"start":{"line":365,"column":8},"end":{"line":446,"column":9}},"type":"if","locations":[{"start":{"line":365,"column":8},"end":{"line":446,"column":9}},{"start":{"line":365,"column":8},"end":{"line":446,"column":9}}],"line":365},"58":{"loc":{"start":{"line":365,"column":12},"end":{"line":365,"column":65}},"type":"binary-expr","locations":[{"start":{"line":365,"column":12},"end":{"line":365,"column":38}},{"start":{"line":365,"column":42},"end":{"line":365,"column":65}}],"line":365},"59":{"loc":{"start":{"line":368,"column":13},"end":{"line":446,"column":9}},"type":"if","locations":[{"start":{"line":368,"column":13},"end":{"line":446,"column":9}},{"start":{"line":368,"column":13},"end":{"line":446,"column":9}}],"line":368},"60":{"loc":{"start":{"line":371,"column":12},"end":{"line":376,"column":13}},"type":"if","locations":[{"start":{"line":371,"column":12},"end":{"line":376,"column":13}},{"start":{"line":371,"column":12},"end":{"line":376,"column":13}}],"line":371},"61":{"loc":{"start":{"line":378,"column":13},"end":{"line":446,"column":9}},"type":"if","locations":[{"start":{"line":378,"column":13},"end":{"line":446,"column":9}},{"start":{"line":378,"column":13},"end":{"line":446,"column":9}}],"line":378},"62":{"loc":{"start":{"line":381,"column":12},"end":{"line":386,"column":13}},"type":"if","locations":[{"start":{"line":381,"column":12},"end":{"line":386,"column":13}},{"start":{"line":381,"column":12},"end":{"line":386,"column":13}}],"line":381},"63":{"loc":{"start":{"line":388,"column":13},"end":{"line":446,"column":9}},"type":"if","locations":[{"start":{"line":388,"column":13},"end":{"line":446,"column":9}},{"start":{"line":388,"column":13},"end":{"line":446,"column":9}}],"line":388},"64":{"loc":{"start":{"line":389,"column":12},"end":{"line":411,"column":13}},"type":"if","locations":[{"start":{"line":389,"column":12},"end":{"line":411,"column":13}},{"start":{"line":389,"column":12},"end":{"line":411,"column":13}}],"line":389},"65":{"loc":{"start":{"line":389,"column":16},"end":{"line":389,"column":60}},"type":"binary-expr","locations":[{"start":{"line":389,"column":16},"end":{"line":389,"column":43}},{"start":{"line":389,"column":47},"end":{"line":389,"column":60}}],"line":389},"66":{"loc":{"start":{"line":392,"column":17},"end":{"line":411,"column":13}},"type":"if","locations":[{"start":{"line":392,"column":17},"end":{"line":411,"column":13}},{"start":{"line":392,"column":17},"end":{"line":411,"column":13}}],"line":392},"67":{"loc":{"start":{"line":392,"column":21},"end":{"line":392,"column":65}},"type":"binary-expr","locations":[{"start":{"line":392,"column":21},"end":{"line":392,"column":48}},{"start":{"line":392,"column":52},"end":{"line":392,"column":65}}],"line":392},"68":{"loc":{"start":{"line":395,"column":17},"end":{"line":411,"column":13}},"type":"if","locations":[{"start":{"line":395,"column":17},"end":{"line":411,"column":13}},{"start":{"line":395,"column":17},"end":{"line":411,"column":13}}],"line":395},"69":{"loc":{"start":{"line":396,"column":16},"end":{"line":407,"column":17}},"type":"if","locations":[{"start":{"line":396,"column":16},"end":{"line":407,"column":17}},{"start":{"line":396,"column":16},"end":{"line":407,"column":17}}],"line":396},"70":{"loc":{"start":{"line":396,"column":20},"end":{"line":396,"column":64}},"type":"binary-expr","locations":[{"start":{"line":396,"column":20},"end":{"line":396,"column":47}},{"start":{"line":396,"column":51},"end":{"line":396,"column":64}}],"line":396},"71":{"loc":{"start":{"line":399,"column":21},"end":{"line":407,"column":17}},"type":"if","locations":[{"start":{"line":399,"column":21},"end":{"line":407,"column":17}},{"start":{"line":399,"column":21},"end":{"line":407,"column":17}}],"line":399},"72":{"loc":{"start":{"line":399,"column":25},"end":{"line":399,"column":83}},"type":"binary-expr","locations":[{"start":{"line":399,"column":25},"end":{"line":399,"column":52}},{"start":{"line":399,"column":56},"end":{"line":399,"column":83}}],"line":399},"73":{"loc":{"start":{"line":402,"column":21},"end":{"line":407,"column":17}},"type":"if","locations":[{"start":{"line":402,"column":21},"end":{"line":407,"column":17}},{"start":{"line":402,"column":21},"end":{"line":407,"column":17}}],"line":402},"74":{"loc":{"start":{"line":402,"column":25},"end":{"line":402,"column":83}},"type":"binary-expr","locations":[{"start":{"line":402,"column":25},"end":{"line":402,"column":52}},{"start":{"line":402,"column":56},"end":{"line":402,"column":83}}],"line":402},"75":{"loc":{"start":{"line":413,"column":13},"end":{"line":446,"column":9}},"type":"if","locations":[{"start":{"line":413,"column":13},"end":{"line":446,"column":9}},{"start":{"line":413,"column":13},"end":{"line":446,"column":9}}],"line":413},"76":{"loc":{"start":{"line":414,"column":12},"end":{"line":442,"column":13}},"type":"if","locations":[{"start":{"line":414,"column":12},"end":{"line":442,"column":13}},{"start":{"line":414,"column":12},"end":{"line":442,"column":13}}],"line":414},"77":{"loc":{"start":{"line":417,"column":16},"end":{"line":427,"column":17}},"type":"if","locations":[{"start":{"line":417,"column":16},"end":{"line":427,"column":17}},{"start":{"line":417,"column":16},"end":{"line":427,"column":17}}],"line":417},"78":{"loc":{"start":{"line":418,"column":20},"end":{"line":423,"column":21}},"type":"if","locations":[{"start":{"line":418,"column":20},"end":{"line":423,"column":21}},{"start":{"line":418,"column":20},"end":{"line":423,"column":21}}],"line":418},"79":{"loc":{"start":{"line":429,"column":17},"end":{"line":442,"column":13}},"type":"if","locations":[{"start":{"line":429,"column":17},"end":{"line":442,"column":13}},{"start":{"line":429,"column":17},"end":{"line":442,"column":13}}],"line":429},"80":{"loc":{"start":{"line":430,"column":16},"end":{"line":435,"column":17}},"type":"if","locations":[{"start":{"line":430,"column":16},"end":{"line":435,"column":17}},{"start":{"line":430,"column":16},"end":{"line":435,"column":17}}],"line":430},"81":{"loc":{"start":{"line":437,"column":17},"end":{"line":442,"column":13}},"type":"if","locations":[{"start":{"line":437,"column":17},"end":{"line":442,"column":13}},{"start":{"line":437,"column":17},"end":{"line":442,"column":13}}],"line":437},"82":{"loc":{"start":{"line":460,"column":8},"end":{"line":460,"column":48}},"type":"if","locations":[{"start":{"line":460,"column":8},"end":{"line":460,"column":48}},{"start":{"line":460,"column":8},"end":{"line":460,"column":48}}],"line":460},"83":{"loc":{"start":{"line":461,"column":20},"end":{"line":461,"column":66}},"type":"binary-expr","locations":[{"start":{"line":461,"column":20},"end":{"line":461,"column":58}},{"start":{"line":461,"column":62},"end":{"line":461,"column":66}}],"line":461},"84":{"loc":{"start":{"line":466,"column":15},"end":{"line":466,"column":73}},"type":"binary-expr","locations":[{"start":{"line":466,"column":15},"end":{"line":466,"column":25}},{"start":{"line":466,"column":29},"end":{"line":466,"column":49}},{"start":{"line":466,"column":53},"end":{"line":466,"column":73}}],"line":466},"85":{"loc":{"start":{"line":491,"column":8},"end":{"line":491,"column":48}},"type":"if","locations":[{"start":{"line":491,"column":8},"end":{"line":491,"column":48}},{"start":{"line":491,"column":8},"end":{"line":491,"column":48}}],"line":491},"86":{"loc":{"start":{"line":492,"column":20},"end":{"line":492,"column":72}},"type":"binary-expr","locations":[{"start":{"line":492,"column":20},"end":{"line":492,"column":64}},{"start":{"line":492,"column":68},"end":{"line":492,"column":72}}],"line":492},"87":{"loc":{"start":{"line":497,"column":15},"end":{"line":497,"column":73}},"type":"binary-expr","locations":[{"start":{"line":497,"column":15},"end":{"line":497,"column":25}},{"start":{"line":497,"column":29},"end":{"line":497,"column":49}},{"start":{"line":497,"column":53},"end":{"line":497,"column":73}}],"line":497},"88":{"loc":{"start":{"line":522,"column":8},"end":{"line":522,"column":48}},"type":"if","locations":[{"start":{"line":522,"column":8},"end":{"line":522,"column":48}},{"start":{"line":522,"column":8},"end":{"line":522,"column":48}}],"line":522},"89":{"loc":{"start":{"line":523,"column":20},"end":{"line":523,"column":72}},"type":"binary-expr","locations":[{"start":{"line":523,"column":20},"end":{"line":523,"column":64}},{"start":{"line":523,"column":68},"end":{"line":523,"column":72}}],"line":523},"90":{"loc":{"start":{"line":528,"column":15},"end":{"line":528,"column":73}},"type":"binary-expr","locations":[{"start":{"line":528,"column":15},"end":{"line":528,"column":25}},{"start":{"line":528,"column":29},"end":{"line":528,"column":49}},{"start":{"line":528,"column":53},"end":{"line":528,"column":73}}],"line":528},"91":{"loc":{"start":{"line":557,"column":8},"end":{"line":557,"column":48}},"type":"if","locations":[{"start":{"line":557,"column":8},"end":{"line":557,"column":48}},{"start":{"line":557,"column":8},"end":{"line":557,"column":48}}],"line":557},"92":{"loc":{"start":{"line":558,"column":20},"end":{"line":558,"column":68}},"type":"binary-expr","locations":[{"start":{"line":558,"column":20},"end":{"line":558,"column":60}},{"start":{"line":558,"column":64},"end":{"line":558,"column":68}}],"line":558},"93":{"loc":{"start":{"line":561,"column":8},"end":{"line":563,"column":9}},"type":"if","locations":[{"start":{"line":561,"column":8},"end":{"line":563,"column":9}},{"start":{"line":561,"column":8},"end":{"line":563,"column":9}}],"line":561},"94":{"loc":{"start":{"line":573,"column":8},"end":{"line":578,"column":9}},"type":"if","locations":[{"start":{"line":573,"column":8},"end":{"line":578,"column":9}},{"start":{"line":573,"column":8},"end":{"line":578,"column":9}}],"line":573},"95":{"loc":{"start":{"line":595,"column":8},"end":{"line":595,"column":48}},"type":"if","locations":[{"start":{"line":595,"column":8},"end":{"line":595,"column":48}},{"start":{"line":595,"column":8},"end":{"line":595,"column":48}}],"line":595},"96":{"loc":{"start":{"line":596,"column":20},"end":{"line":596,"column":64}},"type":"binary-expr","locations":[{"start":{"line":596,"column":20},"end":{"line":596,"column":56}},{"start":{"line":596,"column":60},"end":{"line":596,"column":64}}],"line":596},"97":{"loc":{"start":{"line":608,"column":8},"end":{"line":613,"column":9}},"type":"if","locations":[{"start":{"line":608,"column":8},"end":{"line":613,"column":9}},{"start":{"line":608,"column":8},"end":{"line":613,"column":9}}],"line":608},"98":{"loc":{"start":{"line":633,"column":8},"end":{"line":633,"column":48}},"type":"if","locations":[{"start":{"line":633,"column":8},"end":{"line":633,"column":48}},{"start":{"line":633,"column":8},"end":{"line":633,"column":48}}],"line":633},"99":{"loc":{"start":{"line":634,"column":20},"end":{"line":634,"column":67}},"type":"binary-expr","locations":[{"start":{"line":634,"column":20},"end":{"line":634,"column":59}},{"start":{"line":634,"column":63},"end":{"line":634,"column":67}}],"line":634},"100":{"loc":{"start":{"line":639,"column":15},"end":{"line":639,"column":73}},"type":"binary-expr","locations":[{"start":{"line":639,"column":15},"end":{"line":639,"column":25}},{"start":{"line":639,"column":29},"end":{"line":639,"column":49}},{"start":{"line":639,"column":53},"end":{"line":639,"column":73}}],"line":639},"101":{"loc":{"start":{"line":647,"column":8},"end":{"line":682,"column":9}},"type":"if","locations":[{"start":{"line":647,"column":8},"end":{"line":682,"column":9}},{"start":{"line":647,"column":8},"end":{"line":682,"column":9}}],"line":647},"102":{"loc":{"start":{"line":647,"column":12},"end":{"line":647,"column":70}},"type":"binary-expr","locations":[{"start":{"line":647,"column":12},"end":{"line":647,"column":39}},{"start":{"line":647,"column":43},"end":{"line":647,"column":70}}],"line":647},"103":{"loc":{"start":{"line":650,"column":13},"end":{"line":682,"column":9}},"type":"if","locations":[{"start":{"line":650,"column":13},"end":{"line":682,"column":9}},{"start":{"line":650,"column":13},"end":{"line":682,"column":9}}],"line":650},"104":{"loc":{"start":{"line":650,"column":17},"end":{"line":650,"column":68}},"type":"binary-expr","locations":[{"start":{"line":650,"column":17},"end":{"line":650,"column":37}},{"start":{"line":650,"column":41},"end":{"line":650,"column":68}}],"line":650},"105":{"loc":{"start":{"line":655,"column":13},"end":{"line":682,"column":9}},"type":"if","locations":[{"start":{"line":655,"column":13},"end":{"line":682,"column":9}},{"start":{"line":655,"column":13},"end":{"line":682,"column":9}}],"line":655},"106":{"loc":{"start":{"line":655,"column":17},"end":{"line":655,"column":68}},"type":"binary-expr","locations":[{"start":{"line":655,"column":17},"end":{"line":655,"column":44}},{"start":{"line":655,"column":48},"end":{"line":655,"column":68}}],"line":655},"107":{"loc":{"start":{"line":660,"column":13},"end":{"line":682,"column":9}},"type":"if","locations":[{"start":{"line":660,"column":13},"end":{"line":682,"column":9}},{"start":{"line":660,"column":13},"end":{"line":682,"column":9}}],"line":660},"108":{"loc":{"start":{"line":660,"column":17},"end":{"line":660,"column":63}},"type":"binary-expr","locations":[{"start":{"line":660,"column":17},"end":{"line":660,"column":42}},{"start":{"line":660,"column":46},"end":{"line":660,"column":63}}],"line":660},"109":{"loc":{"start":{"line":663,"column":12},"end":{"line":668,"column":13}},"type":"if","locations":[{"start":{"line":663,"column":12},"end":{"line":668,"column":13}},{"start":{"line":663,"column":12},"end":{"line":668,"column":13}}],"line":663},"110":{"loc":{"start":{"line":663,"column":16},"end":{"line":663,"column":72}},"type":"binary-expr","locations":[{"start":{"line":663,"column":16},"end":{"line":663,"column":40}},{"start":{"line":663,"column":44},"end":{"line":663,"column":72}}],"line":663},"111":{"loc":{"start":{"line":670,"column":13},"end":{"line":682,"column":9}},"type":"if","locations":[{"start":{"line":670,"column":13},"end":{"line":682,"column":9}},{"start":{"line":670,"column":13},"end":{"line":682,"column":9}}],"line":670},"112":{"loc":{"start":{"line":670,"column":17},"end":{"line":670,"column":73}},"type":"binary-expr","locations":[{"start":{"line":670,"column":17},"end":{"line":670,"column":44}},{"start":{"line":670,"column":48},"end":{"line":670,"column":73}}],"line":670},"113":{"loc":{"start":{"line":673,"column":12},"end":{"line":678,"column":13}},"type":"if","locations":[{"start":{"line":673,"column":12},"end":{"line":678,"column":13}},{"start":{"line":673,"column":12},"end":{"line":678,"column":13}}],"line":673},"114":{"loc":{"start":{"line":673,"column":16},"end":{"line":673,"column":72}},"type":"binary-expr","locations":[{"start":{"line":673,"column":16},"end":{"line":673,"column":40}},{"start":{"line":673,"column":44},"end":{"line":673,"column":72}}],"line":673},"115":{"loc":{"start":{"line":696,"column":8},"end":{"line":696,"column":48}},"type":"if","locations":[{"start":{"line":696,"column":8},"end":{"line":696,"column":48}},{"start":{"line":696,"column":8},"end":{"line":696,"column":48}}],"line":696},"116":{"loc":{"start":{"line":697,"column":20},"end":{"line":697,"column":68}},"type":"binary-expr","locations":[{"start":{"line":697,"column":20},"end":{"line":697,"column":60}},{"start":{"line":697,"column":64},"end":{"line":697,"column":68}}],"line":697},"117":{"loc":{"start":{"line":702,"column":15},"end":{"line":702,"column":73}},"type":"binary-expr","locations":[{"start":{"line":702,"column":15},"end":{"line":702,"column":25}},{"start":{"line":702,"column":29},"end":{"line":702,"column":49}},{"start":{"line":702,"column":53},"end":{"line":702,"column":73}}],"line":702},"118":{"loc":{"start":{"line":710,"column":8},"end":{"line":756,"column":9}},"type":"if","locations":[{"start":{"line":710,"column":8},"end":{"line":756,"column":9}},{"start":{"line":710,"column":8},"end":{"line":756,"column":9}}],"line":710},"119":{"loc":{"start":{"line":711,"column":12},"end":{"line":719,"column":13}},"type":"if","locations":[{"start":{"line":711,"column":12},"end":{"line":719,"column":13}},{"start":{"line":711,"column":12},"end":{"line":719,"column":13}}],"line":711},"120":{"loc":{"start":{"line":714,"column":17},"end":{"line":719,"column":13}},"type":"if","locations":[{"start":{"line":714,"column":17},"end":{"line":719,"column":13}},{"start":{"line":714,"column":17},"end":{"line":719,"column":13}}],"line":714},"121":{"loc":{"start":{"line":714,"column":21},"end":{"line":714,"column":65}},"type":"binary-expr","locations":[{"start":{"line":714,"column":21},"end":{"line":714,"column":48}},{"start":{"line":714,"column":52},"end":{"line":714,"column":65}}],"line":714},"122":{"loc":{"start":{"line":721,"column":13},"end":{"line":756,"column":9}},"type":"if","locations":[{"start":{"line":721,"column":13},"end":{"line":756,"column":9}},{"start":{"line":721,"column":13},"end":{"line":756,"column":9}}],"line":721},"123":{"loc":{"start":{"line":722,"column":12},"end":{"line":735,"column":13}},"type":"if","locations":[{"start":{"line":722,"column":12},"end":{"line":735,"column":13}},{"start":{"line":722,"column":12},"end":{"line":735,"column":13}}],"line":722},"124":{"loc":{"start":{"line":725,"column":17},"end":{"line":735,"column":13}},"type":"if","locations":[{"start":{"line":725,"column":17},"end":{"line":735,"column":13}},{"start":{"line":725,"column":17},"end":{"line":735,"column":13}}],"line":725},"125":{"loc":{"start":{"line":725,"column":21},"end":{"line":725,"column":65}},"type":"binary-expr","locations":[{"start":{"line":725,"column":21},"end":{"line":725,"column":48}},{"start":{"line":725,"column":52},"end":{"line":725,"column":65}}],"line":725},"126":{"loc":{"start":{"line":726,"column":16},"end":{"line":731,"column":17}},"type":"if","locations":[{"start":{"line":726,"column":16},"end":{"line":731,"column":17}},{"start":{"line":726,"column":16},"end":{"line":731,"column":17}}],"line":726},"127":{"loc":{"start":{"line":737,"column":13},"end":{"line":756,"column":9}},"type":"if","locations":[{"start":{"line":737,"column":13},"end":{"line":756,"column":9}},{"start":{"line":737,"column":13},"end":{"line":756,"column":9}}],"line":737},"128":{"loc":{"start":{"line":737,"column":17},"end":{"line":737,"column":75}},"type":"binary-expr","locations":[{"start":{"line":737,"column":17},"end":{"line":737,"column":44}},{"start":{"line":737,"column":48},"end":{"line":737,"column":75}}],"line":737},"129":{"loc":{"start":{"line":739,"column":12},"end":{"line":744,"column":13}},"type":"if","locations":[{"start":{"line":739,"column":12},"end":{"line":744,"column":13}},{"start":{"line":739,"column":12},"end":{"line":744,"column":13}}],"line":739},"130":{"loc":{"start":{"line":746,"column":13},"end":{"line":756,"column":9}},"type":"if","locations":[{"start":{"line":746,"column":13},"end":{"line":756,"column":9}},{"start":{"line":746,"column":13},"end":{"line":756,"column":9}}],"line":746},"131":{"loc":{"start":{"line":746,"column":17},"end":{"line":746,"column":75}},"type":"binary-expr","locations":[{"start":{"line":746,"column":17},"end":{"line":746,"column":44}},{"start":{"line":746,"column":48},"end":{"line":746,"column":75}}],"line":746},"132":{"loc":{"start":{"line":747,"column":12},"end":{"line":752,"column":13}},"type":"if","locations":[{"start":{"line":747,"column":12},"end":{"line":752,"column":13}},{"start":{"line":747,"column":12},"end":{"line":752,"column":13}}],"line":747},"133":{"loc":{"start":{"line":770,"column":8},"end":{"line":770,"column":48}},"type":"if","locations":[{"start":{"line":770,"column":8},"end":{"line":770,"column":48}},{"start":{"line":770,"column":8},"end":{"line":770,"column":48}}],"line":770},"134":{"loc":{"start":{"line":771,"column":20},"end":{"line":771,"column":71}},"type":"binary-expr","locations":[{"start":{"line":771,"column":20},"end":{"line":771,"column":63}},{"start":{"line":771,"column":67},"end":{"line":771,"column":71}}],"line":771},"135":{"loc":{"start":{"line":777,"column":15},"end":{"line":777,"column":51}},"type":"binary-expr","locations":[{"start":{"line":777,"column":15},"end":{"line":777,"column":25}},{"start":{"line":777,"column":29},"end":{"line":777,"column":51}}],"line":777},"136":{"loc":{"start":{"line":800,"column":8},"end":{"line":800,"column":48}},"type":"if","locations":[{"start":{"line":800,"column":8},"end":{"line":800,"column":48}},{"start":{"line":800,"column":8},"end":{"line":800,"column":48}}],"line":800},"137":{"loc":{"start":{"line":801,"column":20},"end":{"line":801,"column":71}},"type":"binary-expr","locations":[{"start":{"line":801,"column":20},"end":{"line":801,"column":63}},{"start":{"line":801,"column":67},"end":{"line":801,"column":71}}],"line":801},"138":{"loc":{"start":{"line":807,"column":15},"end":{"line":807,"column":51}},"type":"binary-expr","locations":[{"start":{"line":807,"column":15},"end":{"line":807,"column":25}},{"start":{"line":807,"column":29},"end":{"line":807,"column":51}}],"line":807},"139":{"loc":{"start":{"line":830,"column":8},"end":{"line":830,"column":48}},"type":"if","locations":[{"start":{"line":830,"column":8},"end":{"line":830,"column":48}},{"start":{"line":830,"column":8},"end":{"line":830,"column":48}}],"line":830},"140":{"loc":{"start":{"line":831,"column":20},"end":{"line":831,"column":67}},"type":"binary-expr","locations":[{"start":{"line":831,"column":20},"end":{"line":831,"column":59}},{"start":{"line":831,"column":63},"end":{"line":831,"column":67}}],"line":831},"141":{"loc":{"start":{"line":837,"column":15},"end":{"line":837,"column":51}},"type":"binary-expr","locations":[{"start":{"line":837,"column":15},"end":{"line":837,"column":25}},{"start":{"line":837,"column":29},"end":{"line":837,"column":51}}],"line":837},"142":{"loc":{"start":{"line":860,"column":8},"end":{"line":860,"column":48}},"type":"if","locations":[{"start":{"line":860,"column":8},"end":{"line":860,"column":48}},{"start":{"line":860,"column":8},"end":{"line":860,"column":48}}],"line":860},"143":{"loc":{"start":{"line":861,"column":20},"end":{"line":861,"column":67}},"type":"binary-expr","locations":[{"start":{"line":861,"column":20},"end":{"line":861,"column":59}},{"start":{"line":861,"column":63},"end":{"line":861,"column":67}}],"line":861},"144":{"loc":{"start":{"line":867,"column":15},"end":{"line":867,"column":51}},"type":"binary-expr","locations":[{"start":{"line":867,"column":15},"end":{"line":867,"column":25}},{"start":{"line":867,"column":29},"end":{"line":867,"column":51}}],"line":867},"145":{"loc":{"start":{"line":910,"column":16},"end":{"line":915,"column":17}},"type":"if","locations":[{"start":{"line":910,"column":16},"end":{"line":915,"column":17}},{"start":{"line":910,"column":16},"end":{"line":915,"column":17}}],"line":910},"146":{"loc":{"start":{"line":921,"column":8},"end":{"line":935,"column":9}},"type":"if","locations":[{"start":{"line":921,"column":8},"end":{"line":935,"column":9}},{"start":{"line":921,"column":8},"end":{"line":935,"column":9}}],"line":921},"147":{"loc":{"start":{"line":923,"column":16},"end":{"line":928,"column":17}},"type":"if","locations":[{"start":{"line":923,"column":16},"end":{"line":928,"column":17}},{"start":{"line":923,"column":16},"end":{"line":928,"column":17}}],"line":923},"148":{"loc":{"start":{"line":925,"column":20},"end":{"line":927,"column":21}},"type":"if","locations":[{"start":{"line":925,"column":20},"end":{"line":927,"column":21}},{"start":{"line":925,"column":20},"end":{"line":927,"column":21}}],"line":925},"149":{"loc":{"start":{"line":947,"column":8},"end":{"line":961,"column":9}},"type":"if","locations":[{"start":{"line":947,"column":8},"end":{"line":961,"column":9}},{"start":{"line":947,"column":8},"end":{"line":961,"column":9}}],"line":947},"150":{"loc":{"start":{"line":953,"column":16},"end":{"line":955,"column":17}},"type":"if","locations":[{"start":{"line":953,"column":16},"end":{"line":955,"column":17}},{"start":{"line":953,"column":16},"end":{"line":955,"column":17}}],"line":953}},"s":{"0":1,"1":1,"2":1,"3":1,"4":16,"5":16,"6":16,"7":16,"8":16,"9":14,"10":14,"11":10,"12":4,"13":12,"14":12,"15":12,"16":12,"17":1,"18":232,"19":232,"20":1,"21":0,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":3,"34":2,"35":1,"36":1,"37":0,"38":1,"39":2,"40":1,"41":1,"42":1,"43":0,"44":1,"45":2,"46":1,"47":1,"48":1,"49":0,"50":1,"51":2,"52":1,"53":1,"54":1,"55":0,"56":1,"57":10,"58":9,"59":1,"60":1,"61":0,"62":1,"63":4,"64":3,"65":1,"66":1,"67":0,"68":1,"69":2,"70":1,"71":1,"72":1,"73":0,"74":1,"75":2,"76":1,"77":1,"78":1,"79":0,"80":1,"81":2,"82":1,"83":1,"84":1,"85":0,"86":1,"87":2,"88":1,"89":1,"90":1,"91":0,"92":1,"93":2,"94":1,"95":1,"96":1,"97":0,"98":1,"99":2,"100":1,"101":1,"102":1,"103":0,"104":1,"105":2,"106":1,"107":1,"108":1,"109":0,"110":1,"111":2,"112":1,"113":1,"114":1,"115":0,"116":1,"117":17,"118":16,"119":1,"120":1,"121":0,"122":1,"123":2,"124":1,"125":1,"126":1,"127":0,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":132,"141":132,"142":132,"143":132,"144":0,"145":132,"146":0,"147":132,"148":1,"149":1,"150":1,"151":1,"152":6,"153":6,"154":6,"155":6,"156":6,"157":1,"158":0,"159":1,"160":0,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":1,"179":1,"180":0,"181":0,"182":1,"183":4,"184":1,"185":4,"186":1,"187":1,"188":1,"189":1,"190":4,"191":4,"192":4,"193":4,"194":4,"195":1,"196":0,"197":1,"198":0,"199":1,"200":0,"201":1,"202":0,"203":0,"204":0,"205":1,"206":4,"207":1,"208":4,"209":1,"210":1,"211":1,"212":1,"213":58,"214":51,"215":58,"216":58,"217":58,"218":1,"219":15,"220":1,"221":0,"222":1,"223":20,"224":1,"225":20,"226":20,"227":20,"228":3,"229":17,"230":2,"231":2,"232":2,"233":2,"234":0,"235":15,"236":7,"237":7,"238":7,"239":2,"240":5,"241":8,"242":2,"243":0,"244":2,"245":0,"246":2,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":2,"255":6,"256":6,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":6,"265":6,"266":0,"267":6,"268":0,"269":0,"270":0,"271":0,"272":1,"273":24,"274":1,"275":4,"276":1,"277":1,"278":1,"279":1,"280":4,"281":4,"282":4,"283":4,"284":4,"285":1,"286":0,"287":1,"288":0,"289":1,"290":0,"291":1,"292":0,"293":0,"294":0,"295":1,"296":4,"297":1,"298":4,"299":1,"300":1,"301":1,"302":1,"303":4,"304":4,"305":4,"306":4,"307":4,"308":1,"309":0,"310":1,"311":0,"312":1,"313":0,"314":1,"315":0,"316":0,"317":0,"318":1,"319":4,"320":1,"321":4,"322":1,"323":1,"324":1,"325":1,"326":4,"327":4,"328":4,"329":4,"330":4,"331":1,"332":0,"333":1,"334":0,"335":1,"336":0,"337":1,"338":0,"339":0,"340":0,"341":1,"342":4,"343":1,"344":4,"345":1,"346":1,"347":1,"348":1,"349":37,"350":4,"351":37,"352":37,"353":37,"354":37,"355":0,"356":37,"357":1,"358":50,"359":1,"360":6,"361":1,"362":82,"363":15,"364":67,"365":1,"366":76,"367":1,"368":63,"369":1,"370":110,"371":1,"372":1,"373":1,"374":1,"375":31,"376":22,"377":31,"378":31,"379":31,"380":31,"381":1,"382":13,"383":1,"384":0,"385":1,"386":21,"387":0,"388":21,"389":1,"390":21,"391":1,"392":24,"393":1,"394":0,"395":1,"396":26,"397":1,"398":1,"399":1,"400":1,"401":4,"402":4,"403":4,"404":4,"405":4,"406":1,"407":0,"408":1,"409":0,"410":1,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":1,"437":4,"438":1,"439":4,"440":1,"441":1,"442":1,"443":1,"444":48,"445":48,"446":48,"447":48,"448":48,"449":1,"450":0,"451":1,"452":22,"453":1,"454":22,"455":22,"456":22,"457":5,"458":4,"459":1,"460":1,"461":0,"462":17,"463":1,"464":0,"465":1,"466":1,"467":1,"468":0,"469":0,"470":16,"471":16,"472":16,"473":12,"474":4,"475":0,"476":0,"477":0,"478":0,"479":0,"480":1,"481":5,"482":1,"483":11,"484":1,"485":1,"486":1,"487":1,"488":8,"489":2,"490":8,"491":8,"492":8,"493":8,"494":1,"495":3,"496":1,"497":4,"498":1,"499":2,"500":1,"501":1,"502":1,"503":1,"504":1,"505":5,"506":1,"507":1,"508":1,"509":1,"510":8,"511":2,"512":8,"513":8,"514":8,"515":8,"516":1,"517":3,"518":1,"519":4,"520":1,"521":2,"522":1,"523":1,"524":1,"525":1,"526":1,"527":5,"528":1,"529":1,"530":1,"531":1,"532":8,"533":2,"534":8,"535":8,"536":8,"537":8,"538":1,"539":3,"540":1,"541":4,"542":1,"543":2,"544":1,"545":1,"546":1,"547":1,"548":1,"549":5,"550":1,"551":1,"552":1,"553":1,"554":8,"555":2,"556":8,"557":8,"558":8,"559":8,"560":1,"561":3,"562":1,"563":4,"564":1,"565":2,"566":1,"567":1,"568":1,"569":1,"570":1,"571":5,"572":1,"573":1,"574":1,"575":1,"576":1,"577":1,"578":1,"579":1,"580":1,"581":1,"582":3,"583":3,"584":3,"585":3,"586":7,"587":7,"588":7,"589":7,"590":7,"591":0,"592":1,"593":173,"594":173,"595":171,"596":180,"597":180,"598":180,"599":0,"600":180,"601":2,"602":1,"603":0,"604":0,"605":0,"606":1,"607":6,"608":1,"609":31,"610":31,"611":31,"612":31,"613":31,"614":19,"615":19,"616":19,"617":19,"618":31,"619":0,"620":1,"621":1},"f":{"0":16,"1":1,"2":232,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":3,"10":2,"11":2,"12":2,"13":10,"14":4,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":17,"24":2,"25":1,"26":1,"27":1,"28":1,"29":1,"30":132,"31":1,"32":6,"33":0,"34":0,"35":1,"36":1,"37":4,"38":4,"39":1,"40":4,"41":0,"42":0,"43":0,"44":0,"45":4,"46":4,"47":1,"48":58,"49":15,"50":0,"51":20,"52":20,"53":24,"54":4,"55":1,"56":4,"57":0,"58":0,"59":0,"60":0,"61":4,"62":4,"63":1,"64":4,"65":0,"66":0,"67":0,"68":0,"69":4,"70":4,"71":1,"72":4,"73":0,"74":0,"75":0,"76":0,"77":4,"78":4,"79":1,"80":37,"81":50,"82":6,"83":82,"84":76,"85":63,"86":110,"87":1,"88":31,"89":13,"90":0,"91":21,"92":21,"93":24,"94":0,"95":26,"96":1,"97":4,"98":0,"99":0,"100":0,"101":4,"102":4,"103":1,"104":48,"105":0,"106":22,"107":22,"108":5,"109":11,"110":1,"111":8,"112":3,"113":4,"114":2,"115":1,"116":1,"117":5,"118":1,"119":8,"120":3,"121":4,"122":2,"123":1,"124":1,"125":5,"126":1,"127":8,"128":3,"129":4,"130":2,"131":1,"132":1,"133":5,"134":1,"135":8,"136":3,"137":4,"138":2,"139":1,"140":1,"141":5,"142":1,"143":1,"144":173,"145":180,"146":0,"147":6,"148":31},"b":{"0":[10,4],"1":[2,1],"2":[1,0],"3":[1,1],"4":[1,0],"5":[1,1],"6":[1,0],"7":[1,1],"8":[1,0],"9":[9,1],"10":[1,0],"11":[3,1],"12":[1,0],"13":[1,1],"14":[1,0],"15":[1,1],"16":[1,0],"17":[1,1],"18":[1,0],"19":[1,1],"20":[1,0],"21":[1,1],"22":[1,0],"23":[1,1],"24":[1,0],"25":[1,1],"26":[1,0],"27":[1,1],"28":[1,0],"29":[16,1],"30":[1,0],"31":[1,1],"32":[1,0],"33":[132,132],"34":[0,132],"35":[0,132],"36":[6,0],"37":[6,0],"38":[0,0,0],"39":[0,1],"40":[1,1,1],"41":[0,1],"42":[1,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[1,0],"48":[1,1],"49":[1,0],"50":[1,1],"51":[4,0],"52":[4,0],"53":[0,0,0],"54":[51,7],"55":[58,0],"56":[15,10,10],"57":[3,17],"58":[20,13],"59":[2,15],"60":[2,0],"61":[7,8],"62":[2,5],"63":[2,6],"64":[0,2],"65":[2,2],"66":[0,2],"67":[2,2],"68":[0,2],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[6,0],"76":[0,6],"77":[0,0],"78":[0,0],"79":[6,0],"80":[0,6],"81":[0,0],"82":[4,0],"83":[4,0],"84":[0,0,0],"85":[4,0],"86":[4,0],"87":[0,0,0],"88":[4,0],"89":[4,0],"90":[0,0,0],"91":[4,33],"92":[37,37],"93":[0,37],"94":[15,67],"95":[22,9],"96":[31,31],"97":[0,21],"98":[4,0],"99":[4,0],"100":[0,0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[48,0],"116":[48,0],"117":[0,0,0],"118":[5,17],"119":[4,1],"120":[1,0],"121":[1,1],"122":[1,16],"123":[0,1],"124":[1,0],"125":[1,1],"126":[1,0],"127":[16,0],"128":[16,16],"129":[12,4],"130":[0,0],"131":[0,0],"132":[0,0],"133":[2,6],"134":[8,8],"135":[3,2],"136":[2,6],"137":[8,8],"138":[3,2],"139":[2,6],"140":[8,8],"141":[3,2],"142":[2,6],"143":[8,8],"144":[3,2],"145":[7,0],"146":[171,2],"147":[180,0],"148":[0,180],"149":[31,0],"150":[19,0]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/math/Algebra.ts","sources":["/home/david/Development/geocas/src/math/Algebra.ts"],"names":[],"mappings":";;;;AAAA,IAAM,WAAW,GAAG,UAAU,CAAW,EAAE,CAAW;IAClD,IAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,IAAM,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC;IACtB,IAAM,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC;IACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;QAC3B,IAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;YACnB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACnB;aACI;YACD,OAAO,IAAI,CAAC;SACf;KACJ;IACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;QAC3B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACrB;IACD,OAAO,MAAM,CAAC;AAClB,CAAC,CAAC;AAOF;IACI,cAAmB,GAAQ,EAAS,IAAY;QAA7B,QAAG,GAAH,GAAG,CAAK;QAAS,SAAI,GAAJ,IAAI,CAAQ;IAChD,CAAC;IACD,wBAAS,GAAT;QACI,MAAM,IAAI,KAAK,CAAC,UAAG,IAAI,CAAC,IAAI,mCAAgC,CAAC,CAAC;IAClE,CAAC;IACD,mBAAI,GAAJ,UAAK,MAAe;QAChB,MAAM,IAAI,KAAK,CAAC,UAAG,IAAI,CAAC,IAAI,8BAA2B,CAAC,CAAC;IAC7D,CAAC;IACD,oBAAK,GAAL;QACI,MAAM,IAAI,KAAK,CAAC,UAAG,IAAI,CAAC,IAAI,+BAA4B,CAAC,CAAC;IAC9D,CAAC;IACD,uBAAQ,GAAR;QACI,MAAM,IAAI,KAAK,CAAC,UAAG,IAAI,CAAC,IAAI,kCAA+B,CAAC,CAAC;IACjE,CAAC;IACD,uBAAQ,GAAR;QACI,MAAM,IAAI,KAAK,CAAC,UAAG,IAAI,CAAC,IAAI,kCAA+B,CAAC,CAAC;IACjE,CAAC;IACD,uBAAQ,GAAR;QACI,MAAM,IAAI,KAAK,CAAC,UAAG,IAAI,CAAC,IAAI,kCAA+B,CAAC,CAAC;IACjE,CAAC;IACD,sBAAO,GAAP,UAAQ,GAAkB;QACtB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SACjC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;SAC3D;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,uBAAQ,GAAR,UAAS,GAAkB;QACvB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SACjC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,OAAO,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;SAC3D;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,sBAAO,GAAP,UAAQ,GAAkB;QACtB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SACjC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;SAC3D;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,uBAAQ,GAAR,UAAS,GAAkB;QACvB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SACjC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,OAAO,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;SAC3D;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,sBAAO,GAAP,UAAQ,GAAkB;QACtB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SACtC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;SAChE;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,uBAAQ,GAAR,UAAS,GAAkB;QACvB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SACtC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,YAAY,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;SAChE;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,sBAAO,GAAP,UAAQ,GAAkB;QACtB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SACpC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;SAC9D;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,uBAAQ,GAAR,UAAS,GAAkB;QACvB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SACpC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,UAAU,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;SAC9D;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,uBAAQ,GAAR,UAAS,GAAkB;QACvB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAClC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;SAC5D;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,wBAAS,GAAT,UAAU,GAAkB;QACxB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SAClC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,QAAQ,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;SAC5D;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,yBAAU,GAAV,UAAW,GAAkB;QACzB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SACvC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;SACjE;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,0BAAW,GAAX,UAAY,GAAkB;QAC1B,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SACvC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,aAAa,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;SACjE;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,yBAAU,GAAV,UAAW,GAAkB;QACzB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SACvC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;SACjE;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,0BAAW,GAAX,UAAY,GAAkB;QAC1B,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SACvC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,aAAa,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;SACjE;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,wBAAS,GAAT,UAAU,GAAkB;QACxB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SACnC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;SAC7D;aACI;YACD,OAAO,KAAK,CAAyB,CAAC;SACzC;IACL,CAAC;IACD,yBAAU,GAAV,UAAW,GAAkB;QACzB,IAAI,GAAG,YAAY,IAAI,EAAE;YACrB,OAAO,IAAI,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SACnC;aACI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,SAAS,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;SAC7D;aACI;YACD,OAAO,KAAK,CAAoB,CAAC;SACpC;IACL,CAAC;IACD,wBAAS,GAAT;QACI,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IACD,uBAAQ,GAAR;QACI,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IACD,sBAAO,GAAP;QACI,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IACD,sBAAO,GAAP;QACI,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IACL,WAAC;AAAD,CAAC,AAjND,IAiNC;AAjNY,oBAAI;AAmNjB;IAAgC,2CAAI;IAChC,oBAAmB,GAAS,EAAS,GAAS,EAAE,IAAY;QAA5D,YACI,kBAAM,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,SAOvB;QARkB,SAAG,GAAH,GAAG,CAAM;QAAS,SAAG,GAAH,GAAG,CAAM;QAE1C,IAAI,CAAC,CAAC,GAAG,YAAY,IAAI,CAAC,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,UAAG,IAAI,mCAAyB,OAAO,GAAG,CAAE,CAAC,CAAC;SACjE;QACD,IAAI,CAAC,CAAC,GAAG,YAAY,IAAI,CAAC,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,UAAG,IAAI,mCAAyB,OAAO,GAAG,CAAE,CAAC,CAAC;SACjE;;IACL,CAAC;IACL,iBAAC;AAAD,CAAC,AAVD,CAAgC,IAAI,GAUnC;AAVY,gCAAU;AAYvB;IAA6B,wCAAU;IACnC,iBAAY,GAAS,EAAE,GAAS,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAAtD,YACI,kBAAM,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,SAC7B;QAFwC,WAAK,GAAL,KAAK,CAAQ;;IAEtD,CAAC;IACD,2BAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;IACtE,CAAC;IACD,sBAAI,GAAJ,UAAK,KAAc;QACf,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IACD,uBAAK,GAAL;QACI,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3D,CAAC;IACD,0BAAQ,GAAR;QACI,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,UAAU,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;YACzE,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;aACI,IAAI,CAAC,YAAY,YAAY,IAAI,CAAC,YAAY,YAAY,EAAE;YAC7D,IAAI,CAAC,CAAC,GAAG,YAAY,UAAU,IAAI,CAAC,CAAC,GAAG,YAAY,UAAU,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,EAAE;gBAC/E,IAAM,EAAE,GAA2B,CAAC,CAAC,GAAG,CAAC;gBACzC,IAAM,EAAE,GAA2B,CAAC,CAAC,GAAG,CAAC;gBACzC,IAAI,OAAO,EAAE,CAAC,KAAK,KAAK,QAAQ,IAAI,OAAO,EAAE,CAAC,KAAK,KAAK,QAAQ,EAAE;oBAC9D,IAAM,CAAC,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAU,EAAE,CAAC,KAAK,GAAW,EAAE,CAAC,KAAK,CAAC,CAAC;oBACxE,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;iBAC3C;qBACI;oBACD,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC5B;aACJ;iBACI;gBACD,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;SACJ;aACI,IAAI,CAAC,YAAY,UAAU,IAAI,CAAC,YAAY,UAAU,EAAE;YACzD,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,EAAE;gBAC5D,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAU,CAAC,CAAC,KAAK,GAAW,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aAC5E;iBACI;gBACD,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;SACJ;aACI;YACD,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B;IACL,CAAC;IACD,0BAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAG,CAAC;IACjE,CAAC;IACD,0BAAQ,GAAR;QACI,OAAO,UAAG,IAAI,CAAC,GAAG,gBAAM,IAAI,CAAC,GAAG,CAAE,CAAC;IACvC,CAAC;IACL,cAAC;AAAD,CAAC,AArDD,CAA6B,UAAU,GAqDtC;AArDY,0BAAO;AAuDpB;IAA6B,wCAAU;IACnC,iBAAY,GAAS,EAAE,GAAS,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAAtD,YACI,kBAAM,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,SAC7B;QAFwC,WAAK,GAAL,KAAK,CAAQ;;IAEtD,CAAC;IACD,2BAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;IACtE,CAAC;IACD,sBAAI,GAAJ,UAAK,KAAc;QACf,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IACD,uBAAK,GAAL;QACI,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3D,CAAC;IACD,0BAAQ,GAAR;QACI,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IACD,0BAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAG,CAAC;IACjE,CAAC;IACD,0BAAQ,GAAR;QACI,OAAO,UAAG,IAAI,CAAC,GAAG,gBAAM,IAAI,CAAC,GAAG,CAAE,CAAC;IACvC,CAAC;IACL,cAAC;AAAD,CAAC,AAxBD,CAA6B,UAAU,GAwBtC;AAxBY,0BAAO;AA0BpB;IAAkC,6CAAU;IACxC,sBAAY,GAAS,EAAE,GAAS,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAAtD,YACI,kBAAM,GAAG,EAAE,GAAG,EAAE,cAAc,CAAC,SAClC;QAFwC,WAAK,GAAL,KAAK,CAAQ;;IAEtD,CAAC;IACD,gCAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;IACtE,CAAC;IACD,2BAAI,GAAJ,UAAK,KAAc;QACf,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACvD,CAAC;IACD,4BAAK,GAAL;QACI,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;IAChE,CAAC;IACD,+BAAQ,GAAR;QACI,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,CAAC,CAAC,CAAC,YAAY,UAAU,CAAC,IAAI,CAAC,YAAY,UAAU,EAAE;YACvD,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SACvC;aACI,IAAI,CAAC,YAAY,YAAY,EAAE;YAChC,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,IAAI,EAAE,YAAY,UAAU,EAAE;gBAC1B,OAAO,IAAI,YAAY,CAAC,EAAE,EAAE,IAAI,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;aAC9D;iBACI;gBACD,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACjC;SACJ;aACI,IAAI,CAAC,YAAY,YAAY,EAAE;YAChC,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,IAAI,EAAE,YAAY,UAAU,EAAE;gBAC1B,OAAO,IAAI,YAAY,CAAC,EAAE,EAAE,IAAI,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aAC9D;iBACI;gBACD,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACjC;SACJ;aACI,IAAI,CAAC,YAAY,UAAU,EAAE;YAC9B,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;gBAC9C,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;iBACI,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;gBACnD,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;iBACI,IAAI,CAAC,YAAY,UAAU,EAAE;gBAC9B,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;oBAC9C,OAAO,CAAC,CAAC;iBACZ;qBACI,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,EAAE;oBACjE,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAU,CAAC,CAAC,KAAK,GAAW,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;iBAC5E;qBACI,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,EAAE;oBACjE,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;iBACvC;qBACI;oBACD,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACjC;aACJ;iBACI;gBACD,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACjC;SACJ;aACI,IAAI,CAAC,YAAY,cAAc,EAAE;YAClC,IAAI,CAAC,YAAY,YAAY,EAAE;gBAC3B,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;gBACjB,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;gBACjB,IAAI,EAAE,YAAY,cAAc,EAAE;oBAC9B,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;wBAChC,OAAO,IAAI,YAAY,CAAC,IAAI,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;qBAC9D;yBACI;wBACD,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBACjC;iBACJ;qBACI;oBACD,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACjC;aACJ;iBACI,IAAI,CAAC,YAAY,cAAc,EAAE;gBAClC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACT,OAAO,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;iBACnC;qBACI;oBACD,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACjC;aACJ;iBACI,IAAI,CAAC,YAAY,UAAU,EAAE;gBAC9B,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aACvC;iBACI;gBACD,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACjC;SACJ;aACI;YACD,OAAO,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACjC;IACL,CAAC;IACD,+BAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAG,CAAC;IACjE,CAAC;IACD,+BAAQ,GAAR;QACI,OAAO,UAAG,IAAI,CAAC,GAAG,gBAAM,IAAI,CAAC,GAAG,CAAE,CAAC;IACvC,CAAC;IACL,mBAAC;AAAD,CAAC,AAzGD,CAAkC,UAAU,GAyG3C;AAzGY,oCAAY;AA2GzB;IAAgC,2CAAU;IACtC,oBAAY,GAAS,EAAE,GAAS,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAAtD,YACI,kBAAM,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,SAC7B;QAFwC,WAAK,GAAL,KAAK,CAAQ;;IAEtD,CAAC;IACD,8BAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;IACtE,CAAC;IACD,yBAAI,GAAJ,UAAK,KAAc;QACf,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACrD,CAAC;IACD,0BAAK,GAAL;QACI,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;IAC9D,CAAC;IACD,6BAAQ,GAAR;QACI,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,OAAO,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC,CAAC;IACD,6BAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAG,CAAC;IACjE,CAAC;IACD,6BAAQ,GAAR;QACI,OAAO,UAAG,IAAI,CAAC,GAAG,gBAAM,IAAI,CAAC,GAAG,CAAE,CAAC;IACvC,CAAC;IACL,iBAAC;AAAD,CAAC,AAxBD,CAAgC,UAAU,GAwBzC;AAxBY,gCAAU;AA0BvB;IAAmC,8CAAU;IACzC,uBAAY,GAAS,EAAE,GAAS,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAAtD,YACI,kBAAM,GAAG,EAAE,GAAG,EAAE,eAAe,CAAC,SACnC;QAFwC,WAAK,GAAL,KAAK,CAAQ;;IAEtD,CAAC;IACD,iCAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;IACtE,CAAC;IACD,4BAAI,GAAJ,UAAK,KAAc;QACf,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACxD,CAAC;IACD,6BAAK,GAAL;QACI,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;IACjE,CAAC;IACD,gCAAQ,GAAR;QACI,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,OAAO,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,gCAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAG,CAAC;IACjE,CAAC;IACD,gCAAQ,GAAR;QACI,OAAO,UAAG,IAAI,CAAC,GAAG,iBAAO,IAAI,CAAC,GAAG,CAAE,CAAC;IACxC,CAAC;IACL,oBAAC;AAAD,CAAC,AAxBD,CAAmC,UAAU,GAwB5C;AAxBY,sCAAa;AA0B1B;IAAmC,8CAAU;IACzC,uBAAY,GAAS,EAAE,GAAS,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAAtD,YACI,kBAAM,GAAG,EAAE,GAAG,EAAE,eAAe,CAAC,SACnC;QAFwC,WAAK,GAAL,KAAK,CAAQ;;IAEtD,CAAC;IACD,iCAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;IACtE,CAAC;IACD,4BAAI,GAAJ,UAAK,KAAc;QACf,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACxD,CAAC;IACD,6BAAK,GAAL;QACI,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;IACjE,CAAC;IACD,gCAAQ,GAAR;QACI,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,OAAO,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,gCAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAG,CAAC;IACjE,CAAC;IACD,gCAAQ,GAAR;QACI,OAAO,UAAG,IAAI,CAAC,GAAG,iBAAO,IAAI,CAAC,GAAG,CAAE,CAAC;IACxC,CAAC;IACL,oBAAC;AAAD,CAAC,AAxBD,CAAmC,UAAU,GAwB5C;AAxBY,sCAAa;AA0B1B;;;GAGG;AACH;IAAoC,+CAAI;IACpC,wBAAY,GAAQ,EAAS,OAAiB,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAApE,YACI,kBAAM,GAAG,EAAE,gBAAgB,CAAC,SAI/B;QAL4B,aAAO,GAAP,OAAO,CAAU;QAAS,WAAK,GAAL,KAAK,CAAQ;QAEhE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;SACjD;;IACL,CAAC;IACD,kCAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IACD,6BAAI,GAAJ,UAAK,KAAc;QACf,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC7D,CAAC;IACD,8BAAK,GAAL;QACI,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SAC5D;aACI;YACD,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IACD,iCAAQ,GAAR;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,iCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IACD,iCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IACL,qBAAC;AAAD,CAAC,AA9BD,CAAoC,IAAI,GA8BvC;AA9BY,wCAAc;AAgC3B;IAAgC,2CAAI;IAChC,oBAAY,GAAQ,EAAS,KAAsB,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAAzE,YACI,kBAAM,GAAG,EAAE,YAAY,CAAC,SAC3B;QAF4B,WAAK,GAAL,KAAK,CAAiB;QAAS,WAAK,GAAL,KAAK,CAAQ;;IAEzE,CAAC;IACD,8BAAS,GAAT;QACI,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,yBAAI,GAAJ,UAAK,KAAc;QACf,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACvD,CAAC;IACD,0BAAK,GAAL;QACI,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACtD;aACI;YACD,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IACD,6BAAQ,GAAR;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,6BAAQ,GAAR;QACI,OAAO,UAAG,IAAI,CAAC,KAAK,CAAE,CAAC;IAC3B,CAAC;IACD,iCAAY,GAAZ;QACI,OAAO,sBAAe,IAAI,CAAC,KAAK,OAAI,CAAC;IACzC,CAAC;IACD,6BAAQ,GAAR;QACI,OAAO,UAAG,IAAI,CAAC,KAAK,CAAE,CAAC;IAC3B,CAAC;IACL,iBAAC;AAAD,CAAC,AA9BD,CAAgC,IAAI,GA8BnC;AA9BY,gCAAU;AAgCvB;IAA8B,yCAAU;IACpC,kBAAY,GAAS,EAAE,GAAS,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAAtD,YACI,kBAAM,GAAG,EAAE,GAAG,EAAE,UAAU,CAAC,SAC9B;QAFwC,WAAK,GAAL,KAAK,CAAQ;;IAEtD,CAAC;IACD,4BAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;IACtE,CAAC;IACD,wBAAK,GAAL;QACI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;IAC5D,CAAC;IACD,2BAAQ,GAAR;QACI,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,cAAc,IAAI,CAAC,YAAY,cAAc,EAAE;YAC5D,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3B;aACI,IAAI,CAAC,YAAY,OAAO,IAAI,CAAC,YAAY,cAAc,EAAE;YAC1D,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,OAAO,IAAI,OAAO,CAAC,IAAI,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SACtE;aACI,IAAI,CAAC,YAAY,cAAc,IAAI,CAAC,YAAY,OAAO,EAAE;YAC1D,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,OAAO,IAAI,OAAO,CAAC,IAAI,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SACtE;aACI,IAAI,CAAC,YAAY,YAAY,IAAI,CAAC,YAAY,IAAI,EAAE;YACrD,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,IAAI,EAAE,YAAY,UAAU,IAAI,EAAE,YAAY,cAAc,EAAE;gBAC1D,OAAO,IAAI,YAAY,CAAC,EAAE,EAAE,IAAI,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;aAC1D;iBACI;gBACD,OAAO,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC7B;SACJ;aACI,IAAI,CAAC,YAAY,cAAc,IAAI,CAAC,YAAY,YAAY,EAAE;YAC/D,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,IAAI,EAAE,YAAY,UAAU,IAAI,EAAE,YAAY,cAAc,EAAE;gBAC1D,OAAO,IAAI,YAAY,CAAC,EAAE,EAAE,IAAI,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aAC1D;iBACI;gBACD,OAAO,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC7B;SACJ;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B;IACL,CAAC;IACD,2BAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAG,CAAC;IACjE,CAAC;IACD,2BAAQ,GAAR;QACI,OAAO,UAAG,IAAI,CAAC,GAAG,gBAAM,IAAI,CAAC,GAAG,CAAE,CAAC;IACvC,CAAC;IACL,eAAC;AAAD,CAAC,AAxDD,CAA8B,UAAU,GAwDvC;AAxDY,4BAAQ;AA0DrB;IAA+B,0CAAU;IACrC,mBAAY,GAAS,EAAE,GAAS,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAAtD,YACI,kBAAM,GAAG,EAAE,GAAG,EAAE,WAAW,CAAC,SAC/B;QAFwC,WAAK,GAAL,KAAK,CAAQ;;IAEtD,CAAC;IACD,6BAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;IACtE,CAAC;IACD,yBAAK,GAAL;QACI,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7D,CAAC;IACD,4BAAQ,GAAR;QACI,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,UAAU,EAAE;YACzB,IAAI,CAAC,YAAY,UAAU,EAAE;gBACzB,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aAC5C;iBACI,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;gBACnD,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;iBACI;gBACD,OAAO,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC9B;SACJ;aACI,IAAI,CAAC,YAAY,UAAU,EAAE;YAC9B,IAAI,CAAC,YAAY,UAAU,EAAE;gBACzB,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aAC5C;iBACI,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;gBACnD,IAAI,CAAC,YAAY,cAAc,EAAE;oBAC7B,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvB;qBACI;oBACD,OAAO,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC9B;aACJ;iBACI;gBACD,OAAO,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC9B;SACJ;aACI,IAAI,CAAC,YAAY,cAAc,IAAI,CAAC,YAAY,cAAc,EAAE;YACjE,IAAM,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;YAChD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aACpD;iBACI;gBACD,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aAC5C;SACJ;aACI,IAAI,CAAC,YAAY,cAAc,IAAI,CAAC,YAAY,cAAc,EAAE;YACjE,IAAI,CAAC,KAAK,CAAC,EAAE;gBACT,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aAC5C;iBACI;gBACD,OAAO,IAAI,OAAO,CAAC,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,YAAY,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;aACxH;SACJ;aACI;YACD,OAAO,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9B;IACL,CAAC;IACD,4BAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,GAAG,eAAK,IAAI,CAAC,GAAG,MAAG,CAAC;IAC3C,CAAC;IACD,4BAAQ,GAAR;QACI,OAAO,UAAG,IAAI,CAAC,GAAG,gBAAM,IAAI,CAAC,GAAG,CAAE,CAAC;IACvC,CAAC;IACL,gBAAC;AAAD,CAAC,AAnED,CAA+B,UAAU,GAmExC;AAnEY,8BAAS;AAqEtB;IAAiC,4CAAI;IACjC,qBAAmB,KAAW,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAApD,YACI,kBAAM,KAAK,CAAC,GAAG,EAAE,aAAa,CAAC,SAClC;QAFkB,WAAK,GAAL,KAAK,CAAM;QAAS,WAAK,GAAL,KAAK,CAAQ;;IAEpD,CAAC;IACD,+BAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC;IACD,0BAAI,GAAJ,UAAK,KAAc;QACf,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC9C,CAAC;IACD,2BAAK,GAAL;QACI,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC;IACtD,CAAC;IACD,8BAAQ,GAAR;QACI,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IAClD,CAAC;IACD,8BAAQ,GAAR;QACI,OAAO,kBAAW,IAAI,CAAC,KAAK,MAAG,CAAC;IACpC,CAAC;IACD,8BAAQ,GAAR;QACI,OAAO,WAAI,IAAI,CAAC,KAAK,CAAE,CAAC;IAC5B,CAAC;IACL,kBAAC;AAAD,CAAC,AAtBD,CAAiC,IAAI,GAsBpC;AAtBY,kCAAW;AAwBxB;IAAiC,4CAAI;IACjC,qBAAmB,KAAW,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAApD,YACI,kBAAM,KAAK,CAAC,GAAG,EAAE,aAAa,CAAC,SAClC;QAFkB,WAAK,GAAL,KAAK,CAAM;QAAS,WAAK,GAAL,KAAK,CAAQ;;IAEpD,CAAC;IACD,+BAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC;IACD,0BAAI,GAAJ,UAAK,KAAc;QACf,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC9C,CAAC;IACD,2BAAK,GAAL;QACI,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC;IACtD,CAAC;IACD,8BAAQ,GAAR;QACI,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IAClD,CAAC;IACD,8BAAQ,GAAR;QACI,OAAO,kBAAW,IAAI,CAAC,KAAK,MAAG,CAAC;IACpC,CAAC;IACD,8BAAQ,GAAR;QACI,OAAO,WAAI,IAAI,CAAC,KAAK,CAAE,CAAC;IAC5B,CAAC;IACL,kBAAC;AAAD,CAAC,AAtBD,CAAiC,IAAI,GAsBpC;AAtBY,kCAAW;AAwBxB;IAA6B,wCAAI;IAC7B,iBAAmB,KAAW,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAApD,YACI,kBAAM,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,SAC9B;QAFkB,WAAK,GAAL,KAAK,CAAM;QAAS,WAAK,GAAL,KAAK,CAAQ;;IAEpD,CAAC;IACD,2BAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC;IACD,sBAAI,GAAJ,UAAK,KAAc;QACf,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,uBAAK,GAAL;QACI,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IACD,0BAAQ,GAAR;QACI,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9C,CAAC;IACD,0BAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,KAAK,MAAG,CAAC;IAChC,CAAC;IACD,0BAAQ,GAAR;QACI,OAAO,WAAI,IAAI,CAAC,KAAK,CAAE,CAAC;IAC5B,CAAC;IACL,cAAC;AAAD,CAAC,AAtBD,CAA6B,IAAI,GAsBhC;AAtBY,0BAAO;AAwBpB;IAA6B,wCAAI;IAC7B,iBAAmB,KAAW,EAAS,KAAa;QAAb,sBAAA,EAAA,aAAa;QAApD,YACI,kBAAM,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,SAC9B;QAFkB,WAAK,GAAL,KAAK,CAAM;QAAS,WAAK,GAAL,KAAK,CAAQ;;IAEpD,CAAC;IACD,2BAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC;IACD,sBAAI,GAAJ,UAAK,KAAc;QACf,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,uBAAK,GAAL;QACI,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IACD,0BAAQ,GAAR;QACI,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9C,CAAC;IACD,0BAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,KAAK,MAAG,CAAC;IAChC,CAAC;IACD,0BAAQ,GAAR;QACI,OAAO,WAAI,IAAI,CAAC,KAAK,CAAE,CAAC;IAC5B,CAAC;IACL,cAAC;AAAD,CAAC,AAtBD,CAA6B,IAAI,GAsBhC;AAtBY,0BAAO;AAwBpB;IAKI,iBAAY,CAAa,EAAE,OAAkB;QAJtC,UAAK,GAAqB,EAAE,CAAC;QAG5B,YAAO,GAAa,EAAE,CAAC;QAE3B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,wDAAwD;QACxD,mFAAmF;QACnF,iDAAiD;QACjD,yDAAyD;QACzD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QACtB,8DAA8D;QAC9D,oEAAoE;QACpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,2BAA2B;YAC3B,IAAM,MAAM,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,gCAAgC;YAChC,4BAA4B;YAC5B,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;gBAC9B,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAM,QAAQ,GAAG,IAAI,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;gBACjD,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACtC,IAAI,KAAK,YAAY,cAAc,EAAE;oBACjC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC1B;qBACI;oBACD,MAAM,IAAI,KAAK,CAAC,UAAG,QAAQ,uCAAoC,CAAC,CAAC;iBACpE;aACJ;SACJ;IACL,CAAC;IACD,2BAAS,GAAT,UAAU,OAAiB;QAA3B,iBAgBC;QAfG,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,OAAO,OAAO,CAAC,GAAG,CAAC,UAAC,CAAC;gBACjB,IAAI,KAAI,CAAC,OAAO,EAAE;oBACd,IAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAClC,IAAI,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;wBAC1B,OAAO,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;qBACnC;iBACJ;gBACD,OAAO,WAAI,CAAC,GAAG,CAAC,CAAE,CAAC;YACvB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAClB;aACI;YACD,wCAAwC;YACxC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC1B;IACL,CAAC;IACD,mBAAC,GAAD,UAAE,CAAiB,EAAE,CAAiB;QAClC,IAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACvB,IAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACvB,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IACD,wBAAM,GAAN,UAAO,KAAsB;QACzB,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC;IACD,0BAAQ,GAAR,UAAS,IAAU;QACf,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,IAAI,YAAY,IAAI,EAAE;YACtB,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACpB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACvB,OAAO,IAAI,CAAC,SAAS,EAAE,EAAE;gBACrB,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;gBACpB,KAAK,EAAE,CAAC;gBACR,IAAI,KAAK,GAAG,GAAG,EAAE;oBACb,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;iBAC1B;aACJ;YACD,OAAO,IAAI,CAAC;SACf;aACI;YACD,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;SAC3C;IACL,CAAC;IACL,cAAC;AAAD,CAAC,AA7ED,IA6EC;AA7EY,0BAAO","sourcesContent":["const wedgeBlades = function (a: number[], b: number[]): number[] | null {\n    const result: number[] = [];\n    const aLen = a.length;\n    const bLen = b.length;\n    for (let i = 0; i < aLen; i++) {\n        const av = a[i];\n        if (b.indexOf(av) < 0) {\n            result.push(av);\n        }\n        else {\n            return null;\n        }\n    }\n    for (let i = 0; i < bLen; i++) {\n        result.push(b[i]);\n    }\n    return result;\n};\n\ninterface Env {\n    g(u: BasisBladeExpr, v: BasisBladeExpr): ScalarExpr;\n    bladeName(vectors: number[]): string;\n}\n\nexport class Expr {\n    constructor(public env: Env, public type: string) {\n    }\n    isChanged(): boolean {\n        throw new Error(`${this.type}.isChanged is not implemented.`);\n    }\n    copy(_dirty: boolean): Expr {\n        throw new Error(`${this.type}.copy is not implemented.`);\n    }\n    reset(): Expr {\n        throw new Error(`${this.type}.reset is not implemented.`);\n    }\n    simplify(): Expr {\n        throw new Error(`${this.type}.simplify is not implemented.`);\n    }\n    toPrefix(): string {\n        throw new Error(`${this.type}.toPrefix is not implemented.`);\n    }\n    toString(): string {\n        throw new Error(`${this.type}.toString is not implemented.`);\n    }\n    __add__(rhs: Expr | number): Expr {\n        if (rhs instanceof Expr) {\n            return new AddExpr(this, rhs);\n        }\n        else if (typeof rhs === 'number') {\n            return new AddExpr(this, new ScalarExpr(this.env, rhs));\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __radd__(lhs: Expr | number): Expr {\n        if (lhs instanceof Expr) {\n            return new AddExpr(lhs, this);\n        }\n        else if (typeof lhs === 'number') {\n            return new AddExpr(new ScalarExpr(this.env, lhs), this);\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __sub__(rhs: Expr | number): Expr {\n        if (rhs instanceof Expr) {\n            return new SubExpr(this, rhs);\n        }\n        else if (typeof rhs === 'number') {\n            return new SubExpr(this, new ScalarExpr(this.env, rhs));\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __rsub__(lhs: Expr | number): Expr {\n        if (lhs instanceof Expr) {\n            return new SubExpr(lhs, this);\n        }\n        else if (typeof lhs === 'number') {\n            return new SubExpr(new ScalarExpr(this.env, lhs), this);\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __mul__(rhs: number | Expr): Expr {\n        if (rhs instanceof Expr) {\n            return new MultiplyExpr(this, rhs);\n        }\n        else if (typeof rhs === 'number') {\n            return new MultiplyExpr(this, new ScalarExpr(this.env, rhs));\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __rmul__(lhs: Expr | number): Expr {\n        if (lhs instanceof Expr) {\n            return new MultiplyExpr(lhs, this);\n        }\n        else if (typeof lhs === 'number') {\n            return new MultiplyExpr(new ScalarExpr(this.env, lhs), this);\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __div__(rhs: number | Expr): Expr {\n        if (rhs instanceof Expr) {\n            return new DivideExpr(this, rhs);\n        }\n        else if (typeof rhs === 'number') {\n            return new DivideExpr(this, new ScalarExpr(this.env, rhs));\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __rdiv__(lhs: Expr | number): Expr {\n        if (lhs instanceof Expr) {\n            return new DivideExpr(lhs, this);\n        }\n        else if (typeof lhs === 'number') {\n            return new DivideExpr(new ScalarExpr(this.env, lhs), this);\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __vbar__(rhs: Expr | number): Expr {\n        if (rhs instanceof Expr) {\n            return new VBarExpr(this, rhs);\n        }\n        else if (typeof rhs === 'number') {\n            return new VBarExpr(this, new ScalarExpr(this.env, rhs));\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __rvbar__(lhs: Expr | number): Expr {\n        if (lhs instanceof Expr) {\n            return new VBarExpr(lhs, this);\n        }\n        else if (typeof lhs === 'number') {\n            return new VBarExpr(new ScalarExpr(this.env, lhs), this);\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __lshift__(rhs: Expr | number): Expr {\n        if (rhs instanceof Expr) {\n            return new LContractExpr(this, rhs);\n        }\n        else if (typeof rhs === 'number') {\n            return new LContractExpr(this, new ScalarExpr(this.env, rhs));\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __rlshift__(lhs: Expr | number): Expr {\n        if (lhs instanceof Expr) {\n            return new LContractExpr(lhs, this);\n        }\n        else if (typeof lhs === 'number') {\n            return new LContractExpr(new ScalarExpr(this.env, lhs), this);\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __rshift__(rhs: Expr | number): Expr {\n        if (rhs instanceof Expr) {\n            return new RContractExpr(this, rhs);\n        }\n        else if (typeof rhs === 'number') {\n            return new RContractExpr(this, new ScalarExpr(this.env, rhs));\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __rrshift__(lhs: Expr | number): Expr {\n        if (lhs instanceof Expr) {\n            return new RContractExpr(lhs, this);\n        }\n        else if (typeof lhs === 'number') {\n            return new RContractExpr(new ScalarExpr(this.env, lhs), this);\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __wedge__(rhs: Expr | number): WedgeExpr {\n        if (rhs instanceof Expr) {\n            return new WedgeExpr(this, rhs);\n        }\n        else if (typeof rhs === 'number') {\n            return new WedgeExpr(this, new ScalarExpr(this.env, rhs));\n        }\n        else {\n            return void 0 as unknown as WedgeExpr;\n        }\n    }\n    __rwedge__(lhs: Expr | number): Expr {\n        if (lhs instanceof Expr) {\n            return new WedgeExpr(lhs, this);\n        }\n        else if (typeof lhs === 'number') {\n            return new WedgeExpr(new ScalarExpr(this.env, lhs), this);\n        }\n        else {\n            return void 0 as unknown as Expr;\n        }\n    }\n    __tilde__(): Expr {\n        return new ReverseExpr(this);\n    }\n    __bang__(): Expr {\n        return new InverseExpr(this);\n    }\n    __neg__(): Expr {\n        return new NegExpr(this);\n    }\n    __pos__(): Expr {\n        return new PosExpr(this);\n    }\n}\n\nexport class BinaryExpr extends Expr {\n    constructor(public lhs: Expr, public rhs: Expr, type: string) {\n        super(lhs.env, type);\n        if (!(lhs instanceof Expr)) {\n            throw new Error(`${type}.lhs must be an Expr: ${typeof lhs}`);\n        }\n        if (!(rhs instanceof Expr)) {\n            throw new Error(`${type}.rhs must be an Expr: ${typeof rhs}`);\n        }\n    }\n}\n\nexport class AddExpr extends BinaryExpr {\n    constructor(lhs: Expr, rhs: Expr, public dirty = false) {\n        super(lhs, rhs, 'AddExpr');\n    }\n    isChanged(): boolean {\n        return this.dirty || this.lhs.isChanged() || this.rhs.isChanged();\n    }\n    copy(dirty: boolean): Expr {\n        return new AddExpr(this.lhs, this.rhs, dirty);\n    }\n    reset(): Expr {\n        return new AddExpr(this.lhs.reset(), this.rhs.reset());\n    }\n    simplify(): Expr {\n        const a = this.lhs.simplify();\n        const b = this.rhs.simplify();\n        if (b instanceof ScalarExpr && typeof b.value === 'number' && b.value === 0) {\n            return a.copy(true);\n        }\n        else if (a instanceof MultiplyExpr && b instanceof MultiplyExpr) {\n            if (a.lhs instanceof ScalarExpr && b.lhs instanceof ScalarExpr && a.rhs === b.rhs) {\n                const sa: ScalarExpr = <ScalarExpr>a.lhs;\n                const sb: ScalarExpr = <ScalarExpr>b.lhs;\n                if (typeof sa.value === 'number' && typeof sb.value === 'number') {\n                    const s = new ScalarExpr(this.env, <number>sa.value + <number>sb.value);\n                    return new MultiplyExpr(s, a.rhs, true);\n                }\n                else {\n                    return new AddExpr(a, b);\n                }\n            }\n            else {\n                return new AddExpr(a, b);\n            }\n        }\n        else if (a instanceof ScalarExpr && b instanceof ScalarExpr) {\n            if (typeof a.value === 'number' && typeof b.value === 'number') {\n                return new ScalarExpr(this.env, <number>a.value + <number>b.value, true);\n            }\n            else {\n                return new AddExpr(a, b);\n            }\n        }\n        else {\n            return new AddExpr(a, b);\n        }\n    }\n    toPrefix(): string {\n        return `add(${this.lhs.toPrefix()}, ${this.rhs.toPrefix()})`;\n    }\n    toString() {\n        return `${this.lhs} + ${this.rhs}`;\n    }\n}\n\nexport class SubExpr extends BinaryExpr {\n    constructor(lhs: Expr, rhs: Expr, public dirty = false) {\n        super(lhs, rhs, 'SubExpr');\n    }\n    isChanged(): boolean {\n        return this.dirty || this.lhs.isChanged() || this.rhs.isChanged();\n    }\n    copy(dirty: boolean): Expr {\n        return new SubExpr(this.lhs, this.rhs, dirty);\n    }\n    reset(): Expr {\n        return new SubExpr(this.lhs.reset(), this.rhs.reset());\n    }\n    simplify(): Expr {\n        const a = this.lhs.simplify();\n        const b = this.rhs.simplify();\n        return new SubExpr(a, b);\n    }\n    toPrefix(): string {\n        return `sub(${this.lhs.toPrefix()}, ${this.rhs.toPrefix()})`;\n    }\n    toString() {\n        return `${this.lhs} - ${this.rhs}`;\n    }\n}\n\nexport class MultiplyExpr extends BinaryExpr {\n    constructor(lhs: Expr, rhs: Expr, public dirty = false) {\n        super(lhs, rhs, 'MultiplyExpr');\n    }\n    isChanged(): boolean {\n        return this.dirty || this.lhs.isChanged() || this.rhs.isChanged();\n    }\n    copy(dirty: boolean): Expr {\n        return new MultiplyExpr(this.lhs, this.rhs, dirty);\n    }\n    reset(): Expr {\n        return new MultiplyExpr(this.lhs.reset(), this.rhs.reset());\n    }\n    simplify(): Expr {\n        const a = this.lhs.simplify();\n        const b = this.rhs.simplify();\n        if (!(a instanceof ScalarExpr) && b instanceof ScalarExpr) {\n            return new MultiplyExpr(b, a, true);\n        }\n        else if (a instanceof MultiplyExpr) {\n            const aL = a.lhs;\n            const aR = a.rhs;\n            if (aL instanceof ScalarExpr) {\n                return new MultiplyExpr(aL, new MultiplyExpr(aR, b), true);\n            }\n            else {\n                return new MultiplyExpr(a, b);\n            }\n        }\n        else if (b instanceof MultiplyExpr) {\n            const bL = b.lhs;\n            const bR = b.rhs;\n            if (bL instanceof ScalarExpr) {\n                return new MultiplyExpr(bL, new MultiplyExpr(a, bR), true);\n            }\n            else {\n                return new MultiplyExpr(a, b);\n            }\n        }\n        else if (a instanceof ScalarExpr) {\n            if (typeof a.value === 'number' && a.value === 0) {\n                return a.copy(true);\n            }\n            else if (typeof a.value === 'number' && a.value === 1) {\n                return b.copy(true);\n            }\n            else if (b instanceof ScalarExpr) {\n                if (typeof a.value === 'number' && a.value === 1) {\n                    return b;\n                }\n                else if (typeof a.value === 'number' && typeof b.value === 'number') {\n                    return new ScalarExpr(this.env, <number>a.value * <number>b.value, true);\n                }\n                else if (typeof a.value !== 'number' && typeof b.value === 'number') {\n                    return new MultiplyExpr(b, a, true);\n                }\n                else {\n                    return new MultiplyExpr(a, b);\n                }\n            }\n            else {\n                return new MultiplyExpr(a, b);\n            }\n        }\n        else if (a instanceof BasisBladeExpr) {\n            if (b instanceof MultiplyExpr) {\n                const bL = b.lhs;\n                const bR = b.rhs;\n                if (bL instanceof BasisBladeExpr) {\n                    if (a.vectors[0] === bL.vectors[0]) {\n                        return new MultiplyExpr(new MultiplyExpr(a, bL), bR, true);\n                    }\n                    else {\n                        return new MultiplyExpr(a, b);\n                    }\n                }\n                else {\n                    return new MultiplyExpr(a, b);\n                }\n            }\n            else if (b instanceof BasisBladeExpr) {\n                if (a === b) {\n                    return new VBarExpr(a, b, true);\n                }\n                else {\n                    return new MultiplyExpr(a, b);\n                }\n            }\n            else if (b instanceof ScalarExpr) {\n                return new MultiplyExpr(b, a, true);\n            }\n            else {\n                return new MultiplyExpr(a, b);\n            }\n        }\n        else {\n            return new MultiplyExpr(a, b);\n        }\n    }\n    toPrefix() {\n        return `mul(${this.lhs.toPrefix()}, ${this.rhs.toPrefix()})`;\n    }\n    toString() {\n        return `${this.lhs} * ${this.rhs}`;\n    }\n}\n\nexport class DivideExpr extends BinaryExpr {\n    constructor(lhs: Expr, rhs: Expr, public dirty = false) {\n        super(lhs, rhs, 'SubExpr');\n    }\n    isChanged(): boolean {\n        return this.dirty || this.lhs.isChanged() || this.rhs.isChanged();\n    }\n    copy(dirty: boolean): Expr {\n        return new DivideExpr(this.lhs, this.rhs, dirty);\n    }\n    reset(): Expr {\n        return new DivideExpr(this.lhs.reset(), this.rhs.reset());\n    }\n    simplify(): Expr {\n        const a = this.lhs.simplify();\n        const b = this.rhs.simplify();\n        return new DivideExpr(a, b);\n    }\n    toPrefix(): string {\n        return `div(${this.lhs.toPrefix()}, ${this.rhs.toPrefix()})`;\n    }\n    toString() {\n        return `${this.lhs} / ${this.rhs}`;\n    }\n}\n\nexport class LContractExpr extends BinaryExpr {\n    constructor(lhs: Expr, rhs: Expr, public dirty = false) {\n        super(lhs, rhs, 'LContractExpr');\n    }\n    isChanged(): boolean {\n        return this.dirty || this.lhs.isChanged() || this.rhs.isChanged();\n    }\n    copy(dirty: boolean): Expr {\n        return new LContractExpr(this.lhs, this.rhs, dirty);\n    }\n    reset(): Expr {\n        return new LContractExpr(this.lhs.reset(), this.rhs.reset());\n    }\n    simplify(): Expr {\n        const a = this.lhs.simplify();\n        const b = this.rhs.simplify();\n        return new LContractExpr(a, b);\n    }\n    toPrefix(): string {\n        return `lco(${this.lhs.toPrefix()}, ${this.rhs.toPrefix()})`;\n    }\n    toString() {\n        return `${this.lhs} << ${this.rhs}`;\n    }\n}\n\nexport class RContractExpr extends BinaryExpr {\n    constructor(lhs: Expr, rhs: Expr, public dirty = false) {\n        super(lhs, rhs, 'RContractExpr');\n    }\n    isChanged(): boolean {\n        return this.dirty || this.lhs.isChanged() || this.rhs.isChanged();\n    }\n    copy(dirty: boolean): Expr {\n        return new RContractExpr(this.lhs, this.rhs, dirty);\n    }\n    reset(): Expr {\n        return new RContractExpr(this.lhs.reset(), this.rhs.reset());\n    }\n    simplify(): Expr {\n        const a = this.lhs.simplify();\n        const b = this.rhs.simplify();\n        return new RContractExpr(a, b);\n    }\n    toPrefix(): string {\n        return `rco(${this.lhs.toPrefix()}, ${this.rhs.toPrefix()})`;\n    }\n    toString() {\n        return `${this.lhs} >> ${this.rhs}`;\n    }\n}\n\n/**\n * A blade is the outer (wedge) product of a list of vectors.\n * An empty list of vectors corresponds to the unit scalar.\n */\nexport class BasisBladeExpr extends Expr {\n    constructor(env: Env, public vectors: number[], public dirty = false) {\n        super(env, 'BasisBladeExpr');\n        if (!Array.isArray(vectors)) {\n            throw new Error('vectors must be a number[]');\n        }\n    }\n    isChanged(): boolean {\n        return this.dirty;\n    }\n    copy(dirty: boolean): BasisBladeExpr {\n        return new BasisBladeExpr(this.env, this.vectors, dirty);\n    }\n    reset(): BasisBladeExpr {\n        if (this.dirty) {\n            return new BasisBladeExpr(this.env, this.vectors, false);\n        }\n        else {\n            return this;\n        }\n    }\n    simplify(): Expr {\n        return this;\n    }\n    toPrefix(): string {\n        return this.env.bladeName(this.vectors);\n    }\n    toString(): string {\n        return this.env.bladeName(this.vectors);\n    }\n}\n\nexport class ScalarExpr extends Expr {\n    constructor(env: Env, public value: number | string, public dirty = false) {\n        super(env, 'ScalarExpr');\n    }\n    isChanged(): boolean {\n        return false;\n    }\n    copy(dirty: boolean): Expr {\n        return new ScalarExpr(this.env, this.value, dirty);\n    }\n    reset(): Expr {\n        if (this.dirty) {\n            return new ScalarExpr(this.env, this.value, false);\n        }\n        else {\n            return this;\n        }\n    }\n    simplify(): Expr {\n        return this;\n    }\n    toPrefix(): string {\n        return `${this.value}`;\n    }\n    toPrefixLong(): string {\n        return `ScalarExpr('${this.value}')`;\n    }\n    toString(): string {\n        return `${this.value}`;\n    }\n}\n\nexport class VBarExpr extends BinaryExpr {\n    constructor(lhs: Expr, rhs: Expr, public dirty = false) {\n        super(lhs, rhs, 'VBarExpr');\n    }\n    isChanged(): boolean {\n        return this.dirty || this.lhs.isChanged() || this.rhs.isChanged();\n    }\n    reset(): Expr {\n        return new VBarExpr(this.lhs.reset(), this.rhs.reset());\n    }\n    simplify(): Expr {\n        const a = this.lhs.simplify();\n        const b = this.rhs.simplify();\n        if (a instanceof BasisBladeExpr && b instanceof BasisBladeExpr) {\n            return this.env.g(a, b);\n        }\n        else if (a instanceof AddExpr && b instanceof BasisBladeExpr) {\n            const aL = a.lhs;\n            const aR = a.rhs;\n            return new AddExpr(new VBarExpr(aL, b), new VBarExpr(aR, b), true);\n        }\n        else if (a instanceof BasisBladeExpr && b instanceof AddExpr) {\n            const bL = b.lhs;\n            const bR = b.rhs;\n            return new AddExpr(new VBarExpr(a, bL), new VBarExpr(a, bR), true);\n        }\n        else if (a instanceof MultiplyExpr && b instanceof Expr) {\n            const aL = a.lhs;\n            const aR = a.rhs;\n            if (aL instanceof ScalarExpr && aR instanceof BasisBladeExpr) {\n                return new MultiplyExpr(aL, new VBarExpr(aR, b), true);\n            }\n            else {\n                return new VBarExpr(a, b);\n            }\n        }\n        else if (a instanceof BasisBladeExpr && b instanceof MultiplyExpr) {\n            const bL = b.lhs;\n            const bR = b.rhs;\n            if (bL instanceof ScalarExpr && bR instanceof BasisBladeExpr) {\n                return new MultiplyExpr(bL, new VBarExpr(a, bR), true);\n            }\n            else {\n                return new VBarExpr(a, b);\n            }\n        }\n        else {\n            return new VBarExpr(a, b);\n        }\n    }\n    toPrefix(): string {\n        return `scp(${this.lhs.toPrefix()}, ${this.rhs.toPrefix()})`;\n    }\n    toString() {\n        return `${this.lhs} | ${this.rhs}`;\n    }\n}\n\nexport class WedgeExpr extends BinaryExpr {\n    constructor(lhs: Expr, rhs: Expr, public dirty = false) {\n        super(lhs, rhs, 'WedgeExpr');\n    }\n    isChanged(): boolean {\n        return this.dirty || this.lhs.isChanged() || this.rhs.isChanged();\n    }\n    reset(): Expr {\n        return new WedgeExpr(this.lhs.reset(), this.rhs.reset());\n    }\n    simplify(): Expr {\n        const a = this.lhs.simplify();\n        const b = this.rhs.simplify();\n        if (a instanceof ScalarExpr) {\n            if (b instanceof ScalarExpr) {\n                return new ScalarExpr(this.env, 0, true);\n            }\n            else if (typeof a.value === 'number' && a.value === 1) {\n                return b.copy(true);\n            }\n            else {\n                return new WedgeExpr(a, b);\n            }\n        }\n        else if (b instanceof ScalarExpr) {\n            if (a instanceof ScalarExpr) {\n                return new ScalarExpr(this.env, 0, true);\n            }\n            else if (typeof b.value === 'number' && b.value === 1) {\n                if (a instanceof BasisBladeExpr) {\n                    return a.copy(true);\n                }\n                else {\n                    return new WedgeExpr(a, b);\n                }\n            }\n            else {\n                return new WedgeExpr(a, b);\n            }\n        }\n        else if (a instanceof BasisBladeExpr && b instanceof BasisBladeExpr) {\n            const blade = wedgeBlades(a.vectors, b.vectors);\n            if (Array.isArray(blade)) {\n                return new BasisBladeExpr(this.env, blade, true);\n            }\n            else {\n                return new ScalarExpr(this.env, 0, true);\n            }\n        }\n        else if (a instanceof BasisBladeExpr && b instanceof BasisBladeExpr) {\n            if (a === b) {\n                return new ScalarExpr(this.env, 0, true);\n            }\n            else {\n                return new AddExpr(new MultiplyExpr(a, b), new MultiplyExpr(new ScalarExpr(this.env, -1), new VBarExpr(a, b)), true);\n            }\n        }\n        else {\n            return new WedgeExpr(a, b);\n        }\n    }\n    toPrefix() {\n        return `ext(${this.lhs}, ${this.rhs})`;\n    }\n    toString() {\n        return `${this.lhs} ^ ${this.rhs}`;\n    }\n}\n\nexport class ReverseExpr extends Expr {\n    constructor(public inner: Expr, public dirty = false) {\n        super(inner.env, 'ReverseExpr');\n    }\n    isChanged(): boolean {\n        return this.dirty || this.inner.isChanged();\n    }\n    copy(dirty: boolean): ReverseExpr {\n        return new ReverseExpr(this.inner, dirty);\n    }\n    reset(): ReverseExpr {\n        return new ReverseExpr(this.inner.reset(), false);\n    }\n    simplify(): Expr {\n        return new ReverseExpr(this.inner.simplify());\n    }\n    toPrefix() {\n        return `reverse(${this.inner})`;\n    }\n    toString() {\n        return `~${this.inner}`;\n    }\n}\n\nexport class InverseExpr extends Expr {\n    constructor(public inner: Expr, public dirty = false) {\n        super(inner.env, 'InverseExpr');\n    }\n    isChanged(): boolean {\n        return this.dirty || this.inner.isChanged();\n    }\n    copy(dirty: boolean): InverseExpr {\n        return new InverseExpr(this.inner, dirty);\n    }\n    reset(): InverseExpr {\n        return new InverseExpr(this.inner.reset(), false);\n    }\n    simplify(): Expr {\n        return new InverseExpr(this.inner.simplify());\n    }\n    toPrefix() {\n        return `inverse(${this.inner})`;\n    }\n    toString() {\n        return `!${this.inner}`;\n    }\n}\n\nexport class NegExpr extends Expr {\n    constructor(public inner: Expr, public dirty = false) {\n        super(inner.env, 'NegExpr');\n    }\n    isChanged(): boolean {\n        return this.dirty || this.inner.isChanged();\n    }\n    copy(dirty: boolean): NegExpr {\n        return new NegExpr(this.inner, dirty);\n    }\n    reset(): NegExpr {\n        return new NegExpr(this.inner.reset(), false);\n    }\n    simplify(): Expr {\n        return new NegExpr(this.inner.simplify());\n    }\n    toPrefix() {\n        return `neg(${this.inner})`;\n    }\n    toString() {\n        return `-${this.inner}`;\n    }\n}\n\nexport class PosExpr extends Expr {\n    constructor(public inner: Expr, public dirty = false) {\n        super(inner.env, 'PosExpr');\n    }\n    isChanged(): boolean {\n        return this.dirty || this.inner.isChanged();\n    }\n    copy(dirty: boolean): PosExpr {\n        return new PosExpr(this.inner, dirty);\n    }\n    reset(): PosExpr {\n        return new PosExpr(this.inner.reset(), false);\n    }\n    simplify(): Expr {\n        return new PosExpr(this.inner.simplify());\n    }\n    toPrefix() {\n        return `pos(${this.inner})`;\n    }\n    toString() {\n        return `+${this.inner}`;\n    }\n}\n\nexport class Algebra implements Env {\n    public basis: BasisBladeExpr[] = [];\n    // private index: { [name: string]: number } = {};\n    private _metric: number[][];\n    private _bnames: string[] = [];\n    constructor(g: number[][], _unused?: string[]) {\n        this._metric = g;\n        // TODO: Verify that the vectors is an array of strings.\n        // TODO: Verify that the metric is a square array of numbers with the correct size.\n        // Insert the basis blade corresponding to unity.\n        // This primes the basis array for the steps that follow.\n        this.basis.push(new BasisBladeExpr(this, []));\n        this._bnames[0] = '1';\n        // Insert the basis blades corresponding to the basis vectors.\n        // The algorithm is to extend the existing blades by the new vector.\n        for (let i = 0; i < this._metric.length; i++) {\n            // const name = vectors[i];\n            const vector = new BasisBladeExpr(this, [i]);\n            // const index = Math.pow(2, i);\n            // this.index[name] = index;\n            const bLength = this.basis.length;\n            for (let j = 0; j < bLength; j++) {\n                const existing = this.basis[j];\n                const extended = new WedgeExpr(existing, vector);\n                const blade = this.simplify(extended);\n                if (blade instanceof BasisBladeExpr) {\n                    this.basis.push(blade);\n                }\n                else {\n                    throw new Error(`${extended} must simplify to a BasisBladeExpr`);\n                }\n            }\n        }\n    }\n    bladeName(vectors: number[]): string {\n        if (vectors.length > 0) {\n            return vectors.map((i) => {\n                if (this._bnames) {\n                    const basisIndex = Math.pow(2, i);\n                    if (this._bnames[basisIndex]) {\n                        return this._bnames[basisIndex];\n                    }\n                }\n                return `e${i + 1}`;\n            }).join(' ^ ');\n        }\n        else {\n            // The scalar blade name has no vectors.\n            return this._bnames[0];\n        }\n    }\n    g(u: BasisBladeExpr, v: BasisBladeExpr): ScalarExpr {\n        const i = u.vectors[0];\n        const j = v.vectors[0];\n        return new ScalarExpr(this, this._metric[i][j]);\n    }\n    scalar(value: number | string): Expr {\n        return new ScalarExpr(this, value);\n    }\n    simplify(expr: Expr): Expr {\n        let count = 0;\n        if (expr instanceof Expr) {\n            expr = expr.reset();\n            expr = expr.simplify();\n            while (expr.isChanged()) {\n                expr = expr.reset();\n                count++;\n                if (count < 100) {\n                    expr = expr.simplify();\n                }\n            }\n            return expr;\n        }\n        else {\n            throw new Error(\"expr must be an Expr\");\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cd291ddd70ad83efa323d6e8dc780102972ec35c"},"/home/david/Development/geocas/src/mother/orthoFramesToVersor.ts":{"path":"/home/david/Development/geocas/src/mother/orthoFramesToVersor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":35},"end":{"line":4,"column":74}},"3":{"start":{"line":16,"column":4},"end":{"line":37,"column":5}},"4":{"start":{"line":17,"column":16},"end":{"line":17,"column":40}},"5":{"start":{"line":18,"column":16},"end":{"line":18,"column":20}},"6":{"start":{"line":19,"column":16},"end":{"line":19,"column":20}},"7":{"start":{"line":20,"column":18},"end":{"line":20,"column":26}},"8":{"start":{"line":21,"column":20},"end":{"line":21,"column":33}},"9":{"start":{"line":22,"column":18},"end":{"line":22,"column":52}},"10":{"start":{"line":23,"column":26},"end":{"line":23,"column":128}},"11":{"start":{"line":24,"column":23},"end":{"line":24,"column":60}},"12":{"start":{"line":25,"column":8},"end":{"line":33,"column":9}},"13":{"start":{"line":26,"column":12},"end":{"line":26,"column":84}},"14":{"start":{"line":29,"column":23},"end":{"line":29,"column":54}},"15":{"start":{"line":30,"column":22},"end":{"line":30,"column":76}},"16":{"start":{"line":32,"column":12},"end":{"line":32,"column":159}},"17":{"start":{"line":32,"column":73},"end":{"line":32,"column":124}},"18":{"start":{"line":36,"column":8},"end":{"line":36,"column":18}},"19":{"start":{"line":39,"column":0},"end":{"line":39,"column":50}},"20":{"start":{"line":41,"column":17},"end":{"line":41,"column":19}},"21":{"start":{"line":42,"column":4},"end":{"line":42,"column":19}},"22":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"23":{"start":{"line":43,"column":17},"end":{"line":43,"column":18}},"24":{"start":{"line":44,"column":8},"end":{"line":44,"column":27}},"25":{"start":{"line":46,"column":4},"end":{"line":46,"column":18}},"26":{"start":{"line":52,"column":17},"end":{"line":52,"column":19}},"27":{"start":{"line":53,"column":4},"end":{"line":57,"column":5}},"28":{"start":{"line":53,"column":17},"end":{"line":53,"column":18}},"29":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"30":{"start":{"line":55,"column":12},"end":{"line":55,"column":31}},"31":{"start":{"line":58,"column":4},"end":{"line":58,"column":18}},"32":{"start":{"line":64,"column":12},"end":{"line":64,"column":20}},"33":{"start":{"line":65,"column":14},"end":{"line":65,"column":26}},"34":{"start":{"line":66,"column":14},"end":{"line":66,"column":15}},"35":{"start":{"line":67,"column":4},"end":{"line":73,"column":5}},"36":{"start":{"line":67,"column":17},"end":{"line":67,"column":18}},"37":{"start":{"line":68,"column":16},"end":{"line":68,"column":30}},"38":{"start":{"line":69,"column":26},"end":{"line":69,"column":59}},"39":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"40":{"start":{"line":71,"column":12},"end":{"line":71,"column":20}},"41":{"start":{"line":74,"column":4},"end":{"line":74,"column":15}}},"fnMap":{"0":{"name":"orthoFramesToVersor","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":28}},"loc":{"start":{"line":15,"column":48},"end":{"line":38,"column":1}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":32,"column":58},"end":{"line":32,"column":59}},"loc":{"start":{"line":32,"column":71},"end":{"line":32,"column":126}},"line":32},"2":{"name":"prepend","decl":{"start":{"line":40,"column":9},"end":{"line":40,"column":16}},"loc":{"start":{"line":40,"column":24},"end":{"line":47,"column":1}},"line":40},"3":{"name":"removeAt","decl":{"start":{"line":51,"column":9},"end":{"line":51,"column":17}},"loc":{"start":{"line":51,"column":29},"end":{"line":59,"column":1}},"line":51},"4":{"name":"bestIndex","decl":{"start":{"line":63,"column":9},"end":{"line":63,"column":18}},"loc":{"start":{"line":63,"column":34},"end":{"line":75,"column":1}},"line":63}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":37,"column":5}},{"start":{"line":16,"column":4},"end":{"line":37,"column":5}}],"line":16},"1":{"loc":{"start":{"line":25,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":33,"column":9}},{"start":{"line":25,"column":8},"end":{"line":33,"column":9}}],"line":25},"2":{"loc":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":8},"end":{"line":56,"column":9}}],"line":54},"3":{"loc":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},{"start":{"line":70,"column":8},"end":{"line":72,"column":9}}],"line":70}},"s":{"0":1,"1":1,"2":1,"3":8,"4":6,"5":6,"6":6,"7":6,"8":6,"9":6,"10":6,"11":6,"12":6,"13":2,"14":4,"15":4,"16":4,"17":7,"18":2,"19":1,"20":4,"21":4,"22":4,"23":4,"24":3,"25":4,"26":12,"27":12,"28":12,"29":26,"30":14,"31":12,"32":6,"33":6,"34":6,"35":6,"36":6,"37":13,"38":13,"39":13,"40":9,"41":6},"f":{"0":8,"1":7,"2":4,"3":12,"4":6},"b":{"0":[6,2],"1":[2,4],"2":[14,12],"3":[9,4]},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/orthoFramesToVersor.ts","sources":["/home/david/Development/geocas/src/mother/orthoFramesToVersor.ts"],"names":[],"mappings":"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","sourcesContent":["import { cosineOfAngleBetweenBlades as cos } from './cosineOfAngleBetweenBlades';\nimport { Algebra, Multivector } from './Multivector';\n\n/**\n * Determines a versor for two frames related by an orthogonal transform.\n *\n * A and B are lists of corresponding vectors, representing the frames.\n * A is the start frame, B is the final frame.\n * V should be initialized to 1 in whatever multivector/field flavor you are using.\n *\n * This is an application of the Cartan-Dieudonne theorem that states:\n * In n-D, any orthogonal transformation can be represented as at most n planar reflections.\n */\nexport function orthoFramesToVersor<T>(A: Multivector<T>[], B: Multivector<T>[], vs: Multivector<T>[], algebra: Algebra<T>): Multivector<T>[] {\n    if (A.length > 0) {\n        const j = bestIndex(A, B, algebra);\n        const a = A[j];\n        const b = B[j];\n        const e = a.sub(b);\n        const field = algebra.field;\n        const eps = field.mulByNumber(field.one, 1e-6);\n\n        const cosMinusOne = cos(a, b).sub(algebra.one).scalarCoordinate();\n        const tooClose = field.lt(field.abs(cosMinusOne), eps);\n        if (tooClose) {\n            return orthoFramesToVersor(removeAt(A, j), removeAt(B, j), vs, algebra);\n        }\n        else {\n            const e2 = e.scp(e).scalarCoordinate();\n            const rvs = prepend(vs, e.divByScalar(algebra.field.sqrt(e2)));\n            // Don't let irrational number rounding errors from sqrt propagate...\n            return orthoFramesToVersor(removeAt(A, j).map(x => e.mul(x.mul(e)).neg().divByScalar(e2)), removeAt(B, j), rvs, algebra);\n        }\n    }\n    else {\n        return vs;\n    }\n}\n\nfunction prepend<T>(xs: T[], x: T): T[] {\n    const result: T[] = [];\n    result.push(x);\n    for (let i = 0; i < xs.length; i++) {\n        result.push(xs[i]);\n    }\n    return result;\n}\n\n/**\n * Returns a copy of the array with the element at index removed.\n */\nfunction removeAt<T>(xs: T[], index: number): T[] {\n    const result: T[] = [];\n    for (let i = 0; i < xs.length; i++) {\n        if (i !== index) {\n            result.push(xs[i]);\n        }\n    }\n    return result;\n}\n\n/**\n * Determine the best vector for numerical stability.\n */\nfunction bestIndex<T>(A: Multivector<T>[], B: Multivector<T>[], algebra: Algebra<T>): number {\n    const N = A.length;\n    let max = algebra.zero;\n    let idx = 0;\n    for (let k = 0; k < N; k++) {\n        const x = A[k].sub(B[k]);\n        const squaredNorm = x.scp(x.rev()).scalarCoordinate();\n        if (algebra.field.gt(squaredNorm, max.scalarCoordinate())) {\n            idx = k;\n        }\n    }\n    return idx;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c0a71bda128cc2e3b22a785e89fa236874622e51"},"/home/david/Development/geocas/src/mother/cosineOfAngleBetweenBlades.ts":{"path":"/home/david/Development/geocas/src/mother/cosineOfAngleBetweenBlades.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":30}},"3":{"start":{"line":9,"column":12},"end":{"line":9,"column":50}},"4":{"start":{"line":10,"column":12},"end":{"line":10,"column":50}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":56}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":64}}},"fnMap":{"0":{"name":"cosineOfAngleBetweenBlades","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":35}},"loc":{"start":{"line":8,"column":42},"end":{"line":12,"column":1}},"line":8}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":6,"4":6,"5":6,"6":1},"f":{"0":6},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/cosineOfAngleBetweenBlades.ts","sources":["/home/david/Development/geocas/src/mother/cosineOfAngleBetweenBlades.ts"],"names":[],"mappings":";;;AACA,+BAA8B;AAE9B;;GAEG;AACH,SAAgB,0BAA0B,CAAI,CAAiB,EAAE,CAAiB;IAC9E,IAAM,CAAC,GAAG,IAAA,WAAI,EAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACrC,IAAM,CAAC,GAAG,IAAA,WAAI,EAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACrC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC;AAJD,gEAIC","sourcesContent":["import { Multivector } from './Multivector';\nimport { norm } from './norm';\n\n/**\n * The cosine of the angle between two blades.\n */\nexport function cosineOfAngleBetweenBlades<T>(A: Multivector<T>, B: Multivector<T>): Multivector<T> {\n    const a = norm(A).scalarCoordinate();\n    const b = norm(B).scalarCoordinate();\n    return A.scp(B.rev()).divByScalar(a).divByScalar(b);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3ba50c83828e61e22fa45f5f62ef00dce87fcb12"},"/home/david/Development/geocas/src/mother/norm.ts":{"path":"/home/david/Development/geocas/src/mother/norm.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":44}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":52}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":20}}},"fnMap":{"0":{"name":"norm","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":13}},"loc":{"start":{"line":5,"column":17},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":12,"4":1},"f":{"0":12},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/norm.ts","sources":["/home/david/Development/geocas/src/mother/norm.ts"],"names":[],"mappings":";;;AACA,6CAA4C;AAE5C,SAAgB,IAAI,CAAI,CAAiB;IACrC,OAAO,IAAA,yBAAW,EAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACjC,CAAC;AAFD,oBAEC","sourcesContent":["import { Multivector } from './Multivector';\nimport { squaredNorm } from './squaredNorm';\n\nexport function norm<T>(A: Multivector<T>): Multivector<T> {\n    return squaredNorm(A).sqrt();\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"75267b66704c70c11cb95677492c9ee95bb200e1"},"/home/david/Development/geocas/src/mother/squaredNorm.ts":{"path":"/home/david/Development/geocas/src/mother/squaredNorm.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}}},"fnMap":{"0":{"name":"squaredNorm","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":24},"end":{"line":6,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":12,"3":1},"f":{"0":12},"b":{},"inputSourceMap":{"version":3,"file":"/home/david/Development/geocas/src/mother/squaredNorm.ts","sources":["/home/david/Development/geocas/src/mother/squaredNorm.ts"],"names":[],"mappings":";;;AAEA,SAAgB,WAAW,CAAI,CAAiB;IAC5C,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;AAC1B,CAAC;AAFD,kCAEC","sourcesContent":["import { Multivector } from './Multivector';\n\nexport function squaredNorm<T>(A: Multivector<T>): Multivector<T> {\n    return A.scp(A.rev());\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ee268c7704589055ece34f58ec9cfec369f745be"}}